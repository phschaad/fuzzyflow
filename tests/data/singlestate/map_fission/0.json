{"_subgraph":{"0":147},"expr_index":0,"sdfg_id":0,"state_id":0,"transformation":"MapFission","type":"PatternTransformation","docstring":" Implements the MapFission transformation.\n        Map fission refers to subsuming a map scope into its internal subgraph,\n        essentially replicating the map into maps in all of its internal\n        components. This also extends the dimensions of \"border\" transient\n        arrays (i.e., those between the maps), in order to retain program\n        semantics after fission.\n\n        There are two cases that match map fission:\n        1. A map with an arbitrary subgraph with more than one computational\n           (i.e., non-access) node. The use of arrays connecting the\n           computational nodes must be limited to the subgraph, and non\n           transient arrays may not be used as \"border\" arrays.\n        2. A map with one internal node that is a nested SDFG, in which\n           each state matches the conditions of case (1).\n\n        If a map has nested SDFGs in its subgraph, they are not considered in\n        the case (1) above, and MapFission must be invoked again on the maps\n        with the nested SDFGs in question.\n    "}