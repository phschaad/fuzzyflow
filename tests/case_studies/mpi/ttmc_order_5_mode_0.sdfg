{
  "type": "SDFG",
  "attributes": {
    "arg_names": [
      "X",
      "JM",
      "KM",
      "LM",
      "MM"
    ],
    "constants_prop": {},
    "_arrays": {
      "X": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "S1G1*S2G1*S3G1*S4G1",
            "S2G1*S3G1*S4G1",
            "S3G1*S4G1",
            "S4G1",
            "1"
          ],
          "total_size": "S0G1*S1G1*S2G1*S3G1*S4G1",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S0G1",
            "S1G1",
            "S2G1",
            "S3G1",
            "S4G1"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "JM": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R1G4",
            "1"
          ],
          "total_size": "R1G4*S1G4",
          "offset": [
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S1G4",
            "R1G4"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "KM": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R2G3",
            "1"
          ],
          "total_size": "R2G3*S2G3",
          "offset": [
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S2G3",
            "R2G3"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "LM": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R3G2",
            "1"
          ],
          "total_size": "R3G2*S3G2",
          "offset": [
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S3G2",
            "R3G2"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "MM": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R4G1",
            "1"
          ],
          "total_size": "R4G1*S4G1",
          "offset": [
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S4G1",
            "R4G1"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__return": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R1G4*R2G4*R3G4*R4G4",
            "R2G4*R3G4*R4G4",
            "R3G4*R4G4",
            "R4G4",
            "1"
          ],
          "total_size": "R1G4*R2G4*R3G4*R4G4*S0G4",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S0G4",
            "R1G4",
            "R2G4",
            "R3G4",
            "R4G4"
          ],
          "transient": false,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp1": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__rdistrarray_0": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp3": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp6": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__rdistrarray_1": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp8": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp11": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__rdistrarray_2": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "__tmp13": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid1": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid1_out_gather": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid1_out_reduce": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid1_out_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_in_scatter": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_in_bcast": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_in_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_out_gather": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_out_reduce": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_out_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_in_scatter": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_in_bcast": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_in_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_out_gather": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_out_reduce": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_out_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_in_scatter": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_in_bcast": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_in_subarray": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_out_gather": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_out_reduce": {
        "type": "Scalar",
        "attributes": {
          "allow_conflicts": false,
          "dtype": "int32",
          "shape": [
            "1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid1_out": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R4G1*S1G1*S2G1*S3G1",
            "R4G1*S2G1*S3G1",
            "R4G1*S3G1",
            "R4G1",
            "1"
          ],
          "total_size": "R4G1*S0G1*S1G1*S2G1*S3G1",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S0G1",
            "S1G1",
            "S2G1",
            "S3G1",
            "R4G1"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_in": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R4G2*S1G2*S2G2*S3G2",
            "R4G2*S2G2*S3G2",
            "R4G2*S3G2",
            "R4G2",
            "1"
          ],
          "total_size": "R4G2*S0G2*S1G2*S2G2*S3G2",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "S0G2",
            "S1G2",
            "S2G2",
            "S3G2",
            "R4G2"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "tmp": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "S0G2*S1G2*S2G2*S3G2",
            "S1G2*S2G2*S3G2",
            "S2G2*S3G2",
            "S3G2",
            "1"
          ],
          "total_size": "R4G2*S0G2*S1G2*S2G2*S3G2",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R4G2",
            "S0G2",
            "S1G2",
            "S2G2",
            "S3G2"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid2_out": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R3G2*S0G2*S1G2*S2G2",
            "R3G2*S1G2*S2G2",
            "R3G2*S2G2",
            "R3G2",
            "1"
          ],
          "total_size": "R3G2*R4G2*S0G2*S1G2*S2G2",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R4G2",
            "S0G2",
            "S1G2",
            "S2G2",
            "R3G2"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_in": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R3G3*S0G3*S1G3*S2G3",
            "R3G3*S1G3*S2G3",
            "R3G3*S2G3",
            "R3G3",
            "1"
          ],
          "total_size": "R3G3*R4G3*S0G3*S1G3*S2G3",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R4G3",
            "S0G3",
            "S1G3",
            "S2G3",
            "R3G3"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "tmp2": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R4G3*S0G3*S1G3*S2G3",
            "S0G3*S1G3*S2G3",
            "S1G3*S2G3",
            "S2G3",
            "1"
          ],
          "total_size": "R3G3*R4G3*S0G3*S1G3*S2G3",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R3G3",
            "R4G3",
            "S0G3",
            "S1G3",
            "S2G3"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid3_out": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R2G3*R4G3*S0G3*S1G3",
            "R2G3*S0G3*S1G3",
            "R2G3*S1G3",
            "R2G3",
            "1"
          ],
          "total_size": "R2G3*R3G3*R4G3*S0G3*S1G3",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R3G3",
            "R4G3",
            "S0G3",
            "S1G3",
            "R2G3"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_in": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R2G4*R4G4*S0G4*S1G4",
            "R2G4*S0G4*S1G4",
            "R2G4*S1G4",
            "R2G4",
            "1"
          ],
          "total_size": "R2G4*R3G4*R4G4*S0G4*S1G4",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R3G4",
            "R4G4",
            "S0G4",
            "S1G4",
            "R2G4"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "tmp3": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R3G4*R4G4*S0G4*S1G4",
            "R4G4*S0G4*S1G4",
            "S0G4*S1G4",
            "S1G4",
            "1"
          ],
          "total_size": "R2G4*R3G4*R4G4*S0G4*S1G4",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R2G4",
            "R3G4",
            "R4G4",
            "S0G4",
            "S1G4"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      },
      "grid4_out": {
        "type": "Array",
        "attributes": {
          "allow_conflicts": false,
          "strides": [
            "R1G4*R3G4*R4G4*S0G4",
            "R1G4*R4G4*S0G4",
            "R1G4*S0G4",
            "R1G4",
            "1"
          ],
          "total_size": "R1G4*R2G4*R3G4*R4G4*S0G4",
          "offset": [
            "0",
            "0",
            "0",
            "0",
            "0"
          ],
          "may_alias": false,
          "alignment": 0,
          "start_offset": 0,
          "optional": false,
          "pool": false,
          "dtype": "float64",
          "shape": [
            "R2G4",
            "R3G4",
            "R4G4",
            "S0G4",
            "R1G4"
          ],
          "transient": true,
          "storage": "CPU_Heap",
          "lifetime": "Scope",
          "location": {},
          "debuginfo": null
        }
      }
    },
    "symbols": {
      "P0G1": "int32",
      "P0G2": "int32",
      "P0G3": "int32",
      "P0G4": "int32",
      "P1G1": "int32",
      "P1G2": "int32",
      "P1G3": "int32",
      "P1G4": "int32",
      "P2G1": "int32",
      "P2G2": "int32",
      "P2G3": "int32",
      "P3G1": "int32",
      "P3G2": "int32",
      "P4G1": "int32",
      "PR1G4": "int32",
      "PR2G3": "int32",
      "PR2G4": "int32",
      "PR3G2": "int32",
      "PR3G3": "int32",
      "PR3G4": "int32",
      "PR4G1": "int32",
      "PR4G2": "int32",
      "PR4G3": "int32",
      "PR4G4": "int32",
      "R1G4": "int32",
      "R2": "int32",
      "R2G3": "int32",
      "R2G4": "int32",
      "R3": "int32",
      "R3G2": "int32",
      "R3G3": "int32",
      "R3G4": "int32",
      "R4": "int32",
      "R4G1": "int32",
      "R4G2": "int32",
      "R4G3": "int32",
      "R4G4": "int32",
      "S0": "int32",
      "S0G1": "int32",
      "S0G2": "int32",
      "S0G3": "int32",
      "S0G4": "int32",
      "S1": "int32",
      "S1G1": "int32",
      "S1G2": "int32",
      "S1G3": "int32",
      "S1G4": "int32",
      "S2": "int32",
      "S2G1": "int32",
      "S2G2": "int32",
      "S2G3": "int32",
      "S3": "int32",
      "S3G1": "int32",
      "S3G2": "int32",
      "S4G1": "int32"
    },
    "instrument": "No_Instrumentation",
    "global_code": {
      "frame": {
        "string_data": "",
        "language": "CPP"
      }
    },
    "init_code": {
      "frame": {
        "string_data": "__state->__pgrid_0_dims[0] = P0G1;\n__state->__pgrid_0_dims[1] = P1G1;\n__state->__pgrid_0_dims[2] = P2G1;\n__state->__pgrid_0_dims[3] = P3G1;\n__state->__pgrid_0_dims[4] = P4G1;\n__state->__pgrid_0_dims[5] = PR4G1;\n\n                int __pgrid_0_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_0_dims, __pgrid_0_periods, 0, &__state->__pgrid_0_comm);\n                if (__state->__pgrid_0_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_0_comm, &__state->__pgrid_0_group);\n                    MPI_Comm_rank(__state->__pgrid_0_comm, &__state->__pgrid_0_rank);\n                    MPI_Comm_size(__state->__pgrid_0_comm, &__state->__pgrid_0_size);\n                    MPI_Cart_coords(__state->__pgrid_0_comm, __state->__pgrid_0_rank, 6, __state->__pgrid_0_coords);\n                    __state->__pgrid_0_valid = true;\n                } else {\n                    __state->__pgrid_0_group = MPI_GROUP_NULL;\n                    __state->__pgrid_0_rank = MPI_PROC_NULL;\n                    __state->__pgrid_0_size = 0;\n                    __state->__pgrid_0_valid = false;\n                }\n            __state->__pgrid_1_dims[0] = P0G1;\n__state->__pgrid_1_dims[1] = P1G1;\n__state->__pgrid_1_dims[2] = P2G1;\n__state->__pgrid_1_dims[3] = P3G1;\n__state->__pgrid_1_dims[4] = PR4G1;\n\n                __state->__pgrid_1_valid = false;\n                if (__state->__pgrid_0_valid) {\n                    int __pgrid_1_remain[6] = {1, 1, 1, 1, 0, 1};\n                    MPI_Cart_sub(__state->__pgrid_0_comm, __pgrid_1_remain, &__state->__pgrid_1_comm);\n                    MPI_Comm_group(__state->__pgrid_1_comm, &__state->__pgrid_1_group);\n                    MPI_Comm_rank(__state->__pgrid_1_comm, &__state->__pgrid_1_rank);\n                    MPI_Comm_size(__state->__pgrid_1_comm, &__state->__pgrid_1_size);\n                    MPI_Cart_coords(__state->__pgrid_1_comm, __state->__pgrid_1_rank, 5, __state->__pgrid_1_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_0_group, 1, ranks1, __state->__pgrid_1_group, ranks2);\n                    __state->__pgrid_1_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_2_dims[0] = P4G1;\n\n                __state->__pgrid_2_valid = false;\n                if (__state->__pgrid_0_valid) {\n                    int __pgrid_2_remain[6] = {0, 0, 0, 0, 1, 0};\n                    MPI_Cart_sub(__state->__pgrid_0_comm, __pgrid_2_remain, &__state->__pgrid_2_comm);\n                    MPI_Comm_group(__state->__pgrid_2_comm, &__state->__pgrid_2_group);\n                    MPI_Comm_rank(__state->__pgrid_2_comm, &__state->__pgrid_2_rank);\n                    MPI_Comm_size(__state->__pgrid_2_comm, &__state->__pgrid_2_size);\n                    MPI_Cart_coords(__state->__pgrid_2_comm, __state->__pgrid_2_rank, 1, __state->__pgrid_2_coords);\n            \n                    __state->__pgrid_2_valid = true;\n                }\n                \n                if (__state->__pgrid_1_valid) {\n                    int sizes[5] = {S0, S1, S2, S3, R4};\n                    int subsizes[5] = {S0G1, S1G1, S2G1, S3G1, R4G1};\n                    int corr[5] = {0, 1, 2, 3, 4};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_1_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_0);\n                    MPI_Type_commit(&__state->__subarray_0);\n\n                    __state->__subarray_0_counts = new int[__state->__pgrid_1_size];\n                    __state->__subarray_0_displs = new int[__state->__pgrid_1_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_1_size; ++i) {\n                        __state->__subarray_0_counts[i] = 1;\n                        __state->__subarray_0_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_1_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_1_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_1_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_3_dims[0] = P0G2;\n__state->__pgrid_3_dims[1] = P1G2;\n__state->__pgrid_3_dims[2] = P2G2;\n__state->__pgrid_3_dims[3] = P3G2;\n__state->__pgrid_3_dims[4] = PR3G2;\n__state->__pgrid_3_dims[5] = PR4G2;\n\n                int __pgrid_3_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_3_dims, __pgrid_3_periods, 0, &__state->__pgrid_3_comm);\n                if (__state->__pgrid_3_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_3_comm, &__state->__pgrid_3_group);\n                    MPI_Comm_rank(__state->__pgrid_3_comm, &__state->__pgrid_3_rank);\n                    MPI_Comm_size(__state->__pgrid_3_comm, &__state->__pgrid_3_size);\n                    MPI_Cart_coords(__state->__pgrid_3_comm, __state->__pgrid_3_rank, 6, __state->__pgrid_3_coords);\n                    __state->__pgrid_3_valid = true;\n                } else {\n                    __state->__pgrid_3_group = MPI_GROUP_NULL;\n                    __state->__pgrid_3_rank = MPI_PROC_NULL;\n                    __state->__pgrid_3_size = 0;\n                    __state->__pgrid_3_valid = false;\n                }\n            __state->__pgrid_4_dims[0] = P0G2;\n__state->__pgrid_4_dims[1] = P1G2;\n__state->__pgrid_4_dims[2] = P2G2;\n__state->__pgrid_4_dims[3] = P3G2;\n__state->__pgrid_4_dims[4] = PR4G2;\n\n                __state->__pgrid_4_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_4_remain[6] = {1, 1, 1, 1, 0, 1};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_4_remain, &__state->__pgrid_4_comm);\n                    MPI_Comm_group(__state->__pgrid_4_comm, &__state->__pgrid_4_group);\n                    MPI_Comm_rank(__state->__pgrid_4_comm, &__state->__pgrid_4_rank);\n                    MPI_Comm_size(__state->__pgrid_4_comm, &__state->__pgrid_4_size);\n                    MPI_Cart_coords(__state->__pgrid_4_comm, __state->__pgrid_4_rank, 5, __state->__pgrid_4_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_3_group, 1, ranks1, __state->__pgrid_4_group, ranks2);\n                    __state->__pgrid_4_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_5_dims[0] = PR3G2;\n\n                __state->__pgrid_5_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_5_remain[6] = {0, 0, 0, 0, 1, 0};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_5_remain, &__state->__pgrid_5_comm);\n                    MPI_Comm_group(__state->__pgrid_5_comm, &__state->__pgrid_5_group);\n                    MPI_Comm_rank(__state->__pgrid_5_comm, &__state->__pgrid_5_rank);\n                    MPI_Comm_size(__state->__pgrid_5_comm, &__state->__pgrid_5_size);\n                    MPI_Cart_coords(__state->__pgrid_5_comm, __state->__pgrid_5_rank, 1, __state->__pgrid_5_coords);\n            \n                    __state->__pgrid_5_valid = true;\n                }\n                \n                if (__state->__pgrid_4_valid) {\n                    int sizes[5] = {S0, S1, S2, S3, R4};\n                    int subsizes[5] = {S0G2, S1G2, S2G2, S3G2, R4G2};\n                    int corr[5] = {0, 1, 2, 3, 4};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_4_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_1);\n                    MPI_Type_commit(&__state->__subarray_1);\n\n                    __state->__subarray_1_counts = new int[__state->__pgrid_4_size];\n                    __state->__subarray_1_displs = new int[__state->__pgrid_4_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_4_size; ++i) {\n                        __state->__subarray_1_counts[i] = 1;\n                        __state->__subarray_1_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_4_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_4_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_4_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_6_dims[0] = P0G2;\n__state->__pgrid_6_dims[1] = P1G2;\n__state->__pgrid_6_dims[2] = P2G2;\n__state->__pgrid_6_dims[3] = PR3G2;\n__state->__pgrid_6_dims[4] = PR4G2;\n\n                __state->__pgrid_6_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_6_remain[6] = {1, 1, 1, 0, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_6_remain, &__state->__pgrid_6_comm);\n                    MPI_Comm_group(__state->__pgrid_6_comm, &__state->__pgrid_6_group);\n                    MPI_Comm_rank(__state->__pgrid_6_comm, &__state->__pgrid_6_rank);\n                    MPI_Comm_size(__state->__pgrid_6_comm, &__state->__pgrid_6_size);\n                    MPI_Cart_coords(__state->__pgrid_6_comm, __state->__pgrid_6_rank, 5, __state->__pgrid_6_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_3_group, 1, ranks1, __state->__pgrid_6_group, ranks2);\n                    __state->__pgrid_6_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_7_dims[0] = P3G2;\n\n                __state->__pgrid_7_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_7_remain[6] = {0, 0, 0, 1, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_7_remain, &__state->__pgrid_7_comm);\n                    MPI_Comm_group(__state->__pgrid_7_comm, &__state->__pgrid_7_group);\n                    MPI_Comm_rank(__state->__pgrid_7_comm, &__state->__pgrid_7_rank);\n                    MPI_Comm_size(__state->__pgrid_7_comm, &__state->__pgrid_7_size);\n                    MPI_Cart_coords(__state->__pgrid_7_comm, __state->__pgrid_7_rank, 1, __state->__pgrid_7_coords);\n            \n                    __state->__pgrid_7_valid = true;\n                }\n                \n                if (__state->__pgrid_6_valid) {\n                    int sizes[5] = {R4, S0, S1, S2, R3};\n                    int subsizes[5] = {R4G2, S0G2, S1G2, S2G2, R3G2};\n                    int corr[5] = {4, 0, 1, 2, 3};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_6_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_2);\n                    MPI_Type_commit(&__state->__subarray_2);\n\n                    __state->__subarray_2_counts = new int[__state->__pgrid_6_size];\n                    __state->__subarray_2_displs = new int[__state->__pgrid_6_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_6_size; ++i) {\n                        __state->__subarray_2_counts[i] = 1;\n                        __state->__subarray_2_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_6_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_6_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_6_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_8_dims[0] = P0G3;\n__state->__pgrid_8_dims[1] = P1G3;\n__state->__pgrid_8_dims[2] = P2G3;\n__state->__pgrid_8_dims[3] = PR2G3;\n__state->__pgrid_8_dims[4] = PR3G3;\n__state->__pgrid_8_dims[5] = PR4G3;\n\n                int __pgrid_8_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_8_dims, __pgrid_8_periods, 0, &__state->__pgrid_8_comm);\n                if (__state->__pgrid_8_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_8_comm, &__state->__pgrid_8_group);\n                    MPI_Comm_rank(__state->__pgrid_8_comm, &__state->__pgrid_8_rank);\n                    MPI_Comm_size(__state->__pgrid_8_comm, &__state->__pgrid_8_size);\n                    MPI_Cart_coords(__state->__pgrid_8_comm, __state->__pgrid_8_rank, 6, __state->__pgrid_8_coords);\n                    __state->__pgrid_8_valid = true;\n                } else {\n                    __state->__pgrid_8_group = MPI_GROUP_NULL;\n                    __state->__pgrid_8_rank = MPI_PROC_NULL;\n                    __state->__pgrid_8_size = 0;\n                    __state->__pgrid_8_valid = false;\n                }\n            __state->__pgrid_9_dims[0] = P0G3;\n__state->__pgrid_9_dims[1] = P1G3;\n__state->__pgrid_9_dims[2] = P2G3;\n__state->__pgrid_9_dims[3] = PR3G3;\n__state->__pgrid_9_dims[4] = PR4G3;\n\n                __state->__pgrid_9_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_9_remain[6] = {1, 1, 1, 0, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_9_remain, &__state->__pgrid_9_comm);\n                    MPI_Comm_group(__state->__pgrid_9_comm, &__state->__pgrid_9_group);\n                    MPI_Comm_rank(__state->__pgrid_9_comm, &__state->__pgrid_9_rank);\n                    MPI_Comm_size(__state->__pgrid_9_comm, &__state->__pgrid_9_size);\n                    MPI_Cart_coords(__state->__pgrid_9_comm, __state->__pgrid_9_rank, 5, __state->__pgrid_9_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_8_group, 1, ranks1, __state->__pgrid_9_group, ranks2);\n                    __state->__pgrid_9_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_10_dims[0] = PR2G3;\n\n                __state->__pgrid_10_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_10_remain[6] = {0, 0, 0, 1, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_10_remain, &__state->__pgrid_10_comm);\n                    MPI_Comm_group(__state->__pgrid_10_comm, &__state->__pgrid_10_group);\n                    MPI_Comm_rank(__state->__pgrid_10_comm, &__state->__pgrid_10_rank);\n                    MPI_Comm_size(__state->__pgrid_10_comm, &__state->__pgrid_10_size);\n                    MPI_Cart_coords(__state->__pgrid_10_comm, __state->__pgrid_10_rank, 1, __state->__pgrid_10_coords);\n            \n                    __state->__pgrid_10_valid = true;\n                }\n                \n                if (__state->__pgrid_9_valid) {\n                    int sizes[5] = {R4, S0, S1, S2, R3};\n                    int subsizes[5] = {R4G3, S0G3, S1G3, S2G3, R3G3};\n                    int corr[5] = {4, 0, 1, 2, 3};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_9_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_3);\n                    MPI_Type_commit(&__state->__subarray_3);\n\n                    __state->__subarray_3_counts = new int[__state->__pgrid_9_size];\n                    __state->__subarray_3_displs = new int[__state->__pgrid_9_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_9_size; ++i) {\n                        __state->__subarray_3_counts[i] = 1;\n                        __state->__subarray_3_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_9_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_9_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_9_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_11_dims[0] = P0G3;\n__state->__pgrid_11_dims[1] = P1G3;\n__state->__pgrid_11_dims[2] = PR2G3;\n__state->__pgrid_11_dims[3] = PR3G3;\n__state->__pgrid_11_dims[4] = PR4G3;\n\n                __state->__pgrid_11_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_11_remain[6] = {1, 1, 0, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_11_remain, &__state->__pgrid_11_comm);\n                    MPI_Comm_group(__state->__pgrid_11_comm, &__state->__pgrid_11_group);\n                    MPI_Comm_rank(__state->__pgrid_11_comm, &__state->__pgrid_11_rank);\n                    MPI_Comm_size(__state->__pgrid_11_comm, &__state->__pgrid_11_size);\n                    MPI_Cart_coords(__state->__pgrid_11_comm, __state->__pgrid_11_rank, 5, __state->__pgrid_11_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_8_group, 1, ranks1, __state->__pgrid_11_group, ranks2);\n                    __state->__pgrid_11_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_12_dims[0] = P2G3;\n\n                __state->__pgrid_12_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_12_remain[6] = {0, 0, 1, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_12_remain, &__state->__pgrid_12_comm);\n                    MPI_Comm_group(__state->__pgrid_12_comm, &__state->__pgrid_12_group);\n                    MPI_Comm_rank(__state->__pgrid_12_comm, &__state->__pgrid_12_rank);\n                    MPI_Comm_size(__state->__pgrid_12_comm, &__state->__pgrid_12_size);\n                    MPI_Cart_coords(__state->__pgrid_12_comm, __state->__pgrid_12_rank, 1, __state->__pgrid_12_coords);\n            \n                    __state->__pgrid_12_valid = true;\n                }\n                \n                if (__state->__pgrid_11_valid) {\n                    int sizes[5] = {R3, R4, S0, S1, R2};\n                    int subsizes[5] = {R3G3, R4G3, S0G3, S1G3, R2G3};\n                    int corr[5] = {3, 4, 0, 1, 2};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_11_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_4);\n                    MPI_Type_commit(&__state->__subarray_4);\n\n                    __state->__subarray_4_counts = new int[__state->__pgrid_11_size];\n                    __state->__subarray_4_displs = new int[__state->__pgrid_11_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_11_size; ++i) {\n                        __state->__subarray_4_counts[i] = 1;\n                        __state->__subarray_4_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_11_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_11_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_11_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_13_dims[0] = P0G4;\n__state->__pgrid_13_dims[1] = P1G4;\n__state->__pgrid_13_dims[2] = PR1G4;\n__state->__pgrid_13_dims[3] = PR2G4;\n__state->__pgrid_13_dims[4] = PR3G4;\n__state->__pgrid_13_dims[5] = PR4G4;\n\n                int __pgrid_13_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_13_dims, __pgrid_13_periods, 0, &__state->__pgrid_13_comm);\n                if (__state->__pgrid_13_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_13_comm, &__state->__pgrid_13_group);\n                    MPI_Comm_rank(__state->__pgrid_13_comm, &__state->__pgrid_13_rank);\n                    MPI_Comm_size(__state->__pgrid_13_comm, &__state->__pgrid_13_size);\n                    MPI_Cart_coords(__state->__pgrid_13_comm, __state->__pgrid_13_rank, 6, __state->__pgrid_13_coords);\n                    __state->__pgrid_13_valid = true;\n                } else {\n                    __state->__pgrid_13_group = MPI_GROUP_NULL;\n                    __state->__pgrid_13_rank = MPI_PROC_NULL;\n                    __state->__pgrid_13_size = 0;\n                    __state->__pgrid_13_valid = false;\n                }\n            __state->__pgrid_14_dims[0] = P0G4;\n__state->__pgrid_14_dims[1] = P1G4;\n__state->__pgrid_14_dims[2] = PR2G4;\n__state->__pgrid_14_dims[3] = PR3G4;\n__state->__pgrid_14_dims[4] = PR4G4;\n\n                __state->__pgrid_14_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_14_remain[6] = {1, 1, 0, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_14_remain, &__state->__pgrid_14_comm);\n                    MPI_Comm_group(__state->__pgrid_14_comm, &__state->__pgrid_14_group);\n                    MPI_Comm_rank(__state->__pgrid_14_comm, &__state->__pgrid_14_rank);\n                    MPI_Comm_size(__state->__pgrid_14_comm, &__state->__pgrid_14_size);\n                    MPI_Cart_coords(__state->__pgrid_14_comm, __state->__pgrid_14_rank, 5, __state->__pgrid_14_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_13_group, 1, ranks1, __state->__pgrid_14_group, ranks2);\n                    __state->__pgrid_14_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_15_dims[0] = PR1G4;\n\n                __state->__pgrid_15_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_15_remain[6] = {0, 0, 1, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_15_remain, &__state->__pgrid_15_comm);\n                    MPI_Comm_group(__state->__pgrid_15_comm, &__state->__pgrid_15_group);\n                    MPI_Comm_rank(__state->__pgrid_15_comm, &__state->__pgrid_15_rank);\n                    MPI_Comm_size(__state->__pgrid_15_comm, &__state->__pgrid_15_size);\n                    MPI_Cart_coords(__state->__pgrid_15_comm, __state->__pgrid_15_rank, 1, __state->__pgrid_15_coords);\n            \n                    __state->__pgrid_15_valid = true;\n                }\n                \n                if (__state->__pgrid_14_valid) {\n                    int sizes[5] = {R3, R4, S0, S1, R2};\n                    int subsizes[5] = {R3G4, R4G4, S0G4, S1G4, R2G4};\n                    int corr[5] = {3, 4, 0, 1, 2};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_14_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_5);\n                    MPI_Type_commit(&__state->__subarray_5);\n\n                    __state->__subarray_5_counts = new int[__state->__pgrid_14_size];\n                    __state->__subarray_5_displs = new int[__state->__pgrid_14_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_14_size; ++i) {\n                        __state->__subarray_5_counts[i] = 1;\n                        __state->__subarray_5_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_14_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_14_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_14_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_16_dims[0] = P0G4;\n__state->__pgrid_16_dims[1] = PR1G4;\n__state->__pgrid_16_dims[2] = PR2G4;\n__state->__pgrid_16_dims[3] = PR3G4;\n__state->__pgrid_16_dims[4] = PR4G4;\n\n                __state->__pgrid_16_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_16_remain[6] = {1, 0, 1, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_16_remain, &__state->__pgrid_16_comm);\n                    MPI_Comm_group(__state->__pgrid_16_comm, &__state->__pgrid_16_group);\n                    MPI_Comm_rank(__state->__pgrid_16_comm, &__state->__pgrid_16_rank);\n                    MPI_Comm_size(__state->__pgrid_16_comm, &__state->__pgrid_16_size);\n                    MPI_Cart_coords(__state->__pgrid_16_comm, __state->__pgrid_16_rank, 5, __state->__pgrid_16_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_13_group, 1, ranks1, __state->__pgrid_16_group, ranks2);\n                    __state->__pgrid_16_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_17_dims[0] = P1G4;\n\n                __state->__pgrid_17_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_17_remain[6] = {0, 1, 0, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_17_remain, &__state->__pgrid_17_comm);\n                    MPI_Comm_group(__state->__pgrid_17_comm, &__state->__pgrid_17_group);\n                    MPI_Comm_rank(__state->__pgrid_17_comm, &__state->__pgrid_17_rank);\n                    MPI_Comm_size(__state->__pgrid_17_comm, &__state->__pgrid_17_size);\n                    MPI_Cart_coords(__state->__pgrid_17_comm, __state->__pgrid_17_rank, 1, __state->__pgrid_17_coords);\n            \n                    __state->__pgrid_17_valid = true;\n                }\n                {\n            __state->__rdistrarray_0_sends = 0;\n            __state->__rdistrarray_0_recvs = 0;\n            __state->__rdistrarray_0_self_copies = 0;\n            __state->__rdistrarray_0_total_send_size = 0;\n            __state->__rdistrarray_0_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(S0G1) + int(S0G2) - 1, int(S0G2));\n                max_recvs *= int_ceil(int(S0G2) - 1, int(S0G1)) + 1;\n            \n                max_sends *= int_ceil(int(S1G1) + int(S1G2) - 1, int(S1G2));\n                max_recvs *= int_ceil(int(S1G2) - 1, int(S1G1)) + 1;\n            \n                max_sends *= int_ceil(int(S2G1) + int(S2G2) - 1, int(S2G2));\n                max_recvs *= int_ceil(int(S2G2) - 1, int(S2G1)) + 1;\n            \n                max_sends *= int_ceil(int(S3G1) + int(S3G2) - 1, int(S3G2));\n                max_recvs *= int_ceil(int(S3G2) - 1, int(S3G1)) + 1;\n            \n                max_sends *= int_ceil(int(R4G1) + int(R4G2) - 1, int(R4G2));\n                max_recvs *= int_ceil(int(R4G2) - 1, int(R4G1)) + 1;\n            \n            __state->__rdistrarray_0_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_0_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_0_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_0_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_0_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_0_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_0_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_0_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_0_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_0_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_0_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_0_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_0_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_0_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_0_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_0_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_0_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_0_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_4_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_0_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {S0G2, S1G2, S2G2, S3G2, R4G2};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_4_coords[0] * int(S0G2)) / int(S0G1);\n                lambda[0] = __state->__pgrid_4_coords[0] * int(S0G2) % int(S0G1);\n                kappa[0] = int_ceil(int(S0G2) + lambda[0], int(S0G1));\n            \n                xi[1] = (__state->__pgrid_4_coords[1] * int(S1G2)) / int(S1G1);\n                lambda[1] = __state->__pgrid_4_coords[1] * int(S1G2) % int(S1G1);\n                kappa[1] = int_ceil(int(S1G2) + lambda[1], int(S1G1));\n            \n                xi[2] = (__state->__pgrid_4_coords[2] * int(S2G2)) / int(S2G1);\n                lambda[2] = __state->__pgrid_4_coords[2] * int(S2G2) % int(S2G1);\n                kappa[2] = int_ceil(int(S2G2) + lambda[2], int(S2G1));\n            \n                xi[3] = (__state->__pgrid_4_coords[3] * int(S3G2)) / int(S3G1);\n                lambda[3] = __state->__pgrid_4_coords[3] * int(S3G2) % int(S3G1);\n                kappa[3] = int_ceil(int(S3G2) + lambda[3], int(S3G1));\n            \n                xi[4] = (__state->__pgrid_4_coords[4] * int(R4G2)) / int(R4G1);\n                lambda[4] = __state->__pgrid_4_coords[4] * int(R4G2) % int(R4G1);\n                kappa[4] = int_ceil(int(R4G2) + lambda[4], int(R4G1));\n            \n                int rem0 = S0G2;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 0;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(S0G1), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = S0G2 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = S1G2;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 1;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(S1G1), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = S1G2 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S2G2;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 2;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S2G1), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S2G2 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S3G2;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 3;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S3G1), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S3G2 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R4G2;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 4;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R4G1), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R4G2 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pcoords[3];\npgrid_coords[4] = pgrid_exact_coords[4];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_0_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_0_self_copies++;\n                // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_0_recv_buffers[__state->__rdistrarray_0_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_0_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_0_recv_buffers[__state->__rdistrarray_0_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_0_recv_types[__state->__rdistrarray_0_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_0_recv_types[__state->__rdistrarray_0_recvs]);\n                    __state->__rdistrarray_0_src_ranks[__state->__rdistrarray_0_recvs] = cart_rank;\n                    // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_0_src_ranks[__state->__rdistrarray_0_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_0_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_1_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_3_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {S0G1, S1G1, S2G1, S3G1, R4G1};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_1_coords[0] * int(S0G1)) / int(S0G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_4_dims[0], int_ceil((__state->__pgrid_1_coords[0] + 1) * int(S0G1), int(S0G2)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 0;\n\n                    xi[0] = (idx0 * int(S0G2)) / int(S0G1);\n                    lambda[0] = idx0 * int(S0G2) % int(S0G1);\n                    kappa[0] = int_ceil(int(S0G2) + lambda[0], int(S0G1));\n                    int idx0_dst = __state->__pgrid_1_coords[0] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(S0G2) + lambda[0] - idx0_dst * int(S0G1) : int(S0G1));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_1_coords[1] * int(S1G1)) / int(S1G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_4_dims[1], int_ceil((__state->__pgrid_1_coords[1] + 1) * int(S1G1), int(S1G2)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 1;\n\n                    xi[1] = (idx1 * int(S1G2)) / int(S1G1);\n                    lambda[1] = idx1 * int(S1G2) % int(S1G1);\n                    kappa[1] = int_ceil(int(S1G2) + lambda[1], int(S1G1));\n                    int idx1_dst = __state->__pgrid_1_coords[1] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(S1G2) + lambda[1] - idx1_dst * int(S1G1) : int(S1G1));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_1_coords[2] * int(S2G1)) / int(S2G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_4_dims[2], int_ceil((__state->__pgrid_1_coords[2] + 1) * int(S2G1), int(S2G2)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 2;\n\n                    xi[2] = (idx2 * int(S2G2)) / int(S2G1);\n                    lambda[2] = idx2 * int(S2G2) % int(S2G1);\n                    kappa[2] = int_ceil(int(S2G2) + lambda[2], int(S2G1));\n                    int idx2_dst = __state->__pgrid_1_coords[2] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S2G2) + lambda[2] - idx2_dst * int(S2G1) : int(S2G1));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_1_coords[3] * int(S3G1)) / int(S3G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_4_dims[3], int_ceil((__state->__pgrid_1_coords[3] + 1) * int(S3G1), int(S3G2)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 3;\n\n                    xi[3] = (idx3 * int(S3G2)) / int(S3G1);\n                    lambda[3] = idx3 * int(S3G2) % int(S3G1);\n                    kappa[3] = int_ceil(int(S3G2) + lambda[3], int(S3G1));\n                    int idx3_dst = __state->__pgrid_1_coords[3] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S3G2) + lambda[3] - idx3_dst * int(S3G1) : int(S3G1));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_1_coords[4] * int(R4G1)) / int(R4G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_4_dims[4], int_ceil((__state->__pgrid_1_coords[4] + 1) * int(R4G1), int(R4G2)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 4;\n\n                    xi[4] = (idx4 * int(R4G2)) / int(R4G1);\n                    lambda[4] = idx4 * int(R4G2) % int(R4G1);\n                    kappa[4] = int_ceil(int(R4G2) + lambda[4], int(R4G1));\n                    int idx4_dst = __state->__pgrid_1_coords[4] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R4G2) + lambda[4] - idx4_dst * int(R4G1) : int(R4G1));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pcoords[3];\npgrid_coords[4] = pgrid_exact_coords[4];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_3_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_0_send_buffers[__state->__rdistrarray_0_sends] = new double[__state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends]];\n                    //if (__state->__rdistrarray_0_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_0_send_buffers[__state->__rdistrarray_0_sends]), __state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_0_send_types[__state->__rdistrarray_0_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_0_send_types[__state->__rdistrarray_0_sends]);\n                    __state->__rdistrarray_0_dst_ranks[__state->__rdistrarray_0_sends] = cart_rank;\n                    // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_0_dst_ranks[__state->__rdistrarray_0_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_0_sends++;\n                }\n            }}}}}}}{\n            __state->__rdistrarray_1_sends = 0;\n            __state->__rdistrarray_1_recvs = 0;\n            __state->__rdistrarray_1_self_copies = 0;\n            __state->__rdistrarray_1_total_send_size = 0;\n            __state->__rdistrarray_1_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(R4G2) + int(R4G3) - 1, int(R4G3));\n                max_recvs *= int_ceil(int(R4G3) - 1, int(R4G2)) + 1;\n            \n                max_sends *= int_ceil(int(S0G2) + int(S0G3) - 1, int(S0G3));\n                max_recvs *= int_ceil(int(S0G3) - 1, int(S0G2)) + 1;\n            \n                max_sends *= int_ceil(int(S1G2) + int(S1G3) - 1, int(S1G3));\n                max_recvs *= int_ceil(int(S1G3) - 1, int(S1G2)) + 1;\n            \n                max_sends *= int_ceil(int(S2G2) + int(S2G3) - 1, int(S2G3));\n                max_recvs *= int_ceil(int(S2G3) - 1, int(S2G2)) + 1;\n            \n                max_sends *= int_ceil(int(R3G2) + int(R3G3) - 1, int(R3G3));\n                max_recvs *= int_ceil(int(R3G3) - 1, int(R3G2)) + 1;\n            \n            __state->__rdistrarray_1_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_1_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_1_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_1_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_1_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_1_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_1_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_1_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_1_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_1_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_1_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_1_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_1_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_1_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_1_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_1_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_1_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_1_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_9_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_3_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R4G3, S0G3, S1G3, S2G3, R3G3};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_9_coords[4] * int(R4G3)) / int(R4G2);\n                lambda[0] = __state->__pgrid_9_coords[4] * int(R4G3) % int(R4G2);\n                kappa[0] = int_ceil(int(R4G3) + lambda[0], int(R4G2));\n            \n                xi[1] = (__state->__pgrid_9_coords[0] * int(S0G3)) / int(S0G2);\n                lambda[1] = __state->__pgrid_9_coords[0] * int(S0G3) % int(S0G2);\n                kappa[1] = int_ceil(int(S0G3) + lambda[1], int(S0G2));\n            \n                xi[2] = (__state->__pgrid_9_coords[1] * int(S1G3)) / int(S1G2);\n                lambda[2] = __state->__pgrid_9_coords[1] * int(S1G3) % int(S1G2);\n                kappa[2] = int_ceil(int(S1G3) + lambda[2], int(S1G2));\n            \n                xi[3] = (__state->__pgrid_9_coords[2] * int(S2G3)) / int(S2G2);\n                lambda[3] = __state->__pgrid_9_coords[2] * int(S2G3) % int(S2G2);\n                kappa[3] = int_ceil(int(S2G3) + lambda[3], int(S2G2));\n            \n                xi[4] = (__state->__pgrid_9_coords[3] * int(R3G3)) / int(R3G2);\n                lambda[4] = __state->__pgrid_9_coords[3] * int(R3G3) % int(R3G2);\n                kappa[4] = int_ceil(int(R3G3) + lambda[4], int(R3G2));\n            \n                int rem0 = R4G3;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 4;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(R4G2), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = R4G3 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = S0G3;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 0;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(S0G2), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = S0G3 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S1G3;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 1;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S1G2), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S1G3 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S2G3;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 2;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S2G2), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S2G3 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R3G3;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 3;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R3G2), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R3G3 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pgrid_exact_coords[3];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_3_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_1_self_copies++;\n                // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_1_recv_buffers[__state->__rdistrarray_1_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_1_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_1_recv_buffers[__state->__rdistrarray_1_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_1_recv_types[__state->__rdistrarray_1_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_1_recv_types[__state->__rdistrarray_1_recvs]);\n                    __state->__rdistrarray_1_src_ranks[__state->__rdistrarray_1_recvs] = cart_rank;\n                    // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_1_src_ranks[__state->__rdistrarray_1_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_1_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_6_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_8_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R4G2, S0G2, S1G2, S2G2, R3G2};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_6_coords[4] * int(R4G2)) / int(R4G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_9_dims[4], int_ceil((__state->__pgrid_6_coords[4] + 1) * int(R4G2), int(R4G3)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 4;\n\n                    xi[0] = (idx0 * int(R4G3)) / int(R4G2);\n                    lambda[0] = idx0 * int(R4G3) % int(R4G2);\n                    kappa[0] = int_ceil(int(R4G3) + lambda[0], int(R4G2));\n                    int idx0_dst = __state->__pgrid_6_coords[4] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(R4G3) + lambda[0] - idx0_dst * int(R4G2) : int(R4G2));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_6_coords[0] * int(S0G2)) / int(S0G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_9_dims[0], int_ceil((__state->__pgrid_6_coords[0] + 1) * int(S0G2), int(S0G3)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 0;\n\n                    xi[1] = (idx1 * int(S0G3)) / int(S0G2);\n                    lambda[1] = idx1 * int(S0G3) % int(S0G2);\n                    kappa[1] = int_ceil(int(S0G3) + lambda[1], int(S0G2));\n                    int idx1_dst = __state->__pgrid_6_coords[0] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(S0G3) + lambda[1] - idx1_dst * int(S0G2) : int(S0G2));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_6_coords[1] * int(S1G2)) / int(S1G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_9_dims[1], int_ceil((__state->__pgrid_6_coords[1] + 1) * int(S1G2), int(S1G3)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 1;\n\n                    xi[2] = (idx2 * int(S1G3)) / int(S1G2);\n                    lambda[2] = idx2 * int(S1G3) % int(S1G2);\n                    kappa[2] = int_ceil(int(S1G3) + lambda[2], int(S1G2));\n                    int idx2_dst = __state->__pgrid_6_coords[1] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S1G3) + lambda[2] - idx2_dst * int(S1G2) : int(S1G2));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_6_coords[2] * int(S2G2)) / int(S2G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_9_dims[2], int_ceil((__state->__pgrid_6_coords[2] + 1) * int(S2G2), int(S2G3)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 2;\n\n                    xi[3] = (idx3 * int(S2G3)) / int(S2G2);\n                    lambda[3] = idx3 * int(S2G3) % int(S2G2);\n                    kappa[3] = int_ceil(int(S2G3) + lambda[3], int(S2G2));\n                    int idx3_dst = __state->__pgrid_6_coords[2] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S2G3) + lambda[3] - idx3_dst * int(S2G2) : int(S2G2));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_6_coords[3] * int(R3G2)) / int(R3G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_9_dims[3], int_ceil((__state->__pgrid_6_coords[3] + 1) * int(R3G2), int(R3G3)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 3;\n\n                    xi[4] = (idx4 * int(R3G3)) / int(R3G2);\n                    lambda[4] = idx4 * int(R3G3) % int(R3G2);\n                    kappa[4] = int_ceil(int(R3G3) + lambda[4], int(R3G2));\n                    int idx4_dst = __state->__pgrid_6_coords[3] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R3G3) + lambda[4] - idx4_dst * int(R3G2) : int(R3G2));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pgrid_exact_coords[3];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_8_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_1_send_buffers[__state->__rdistrarray_1_sends] = new double[__state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends]];\n                    //if (__state->__rdistrarray_1_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_1_send_buffers[__state->__rdistrarray_1_sends]), __state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_1_send_types[__state->__rdistrarray_1_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_1_send_types[__state->__rdistrarray_1_sends]);\n                    __state->__rdistrarray_1_dst_ranks[__state->__rdistrarray_1_sends] = cart_rank;\n                    // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_1_dst_ranks[__state->__rdistrarray_1_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_1_sends++;\n                }\n            }}}}}}}{\n            __state->__rdistrarray_2_sends = 0;\n            __state->__rdistrarray_2_recvs = 0;\n            __state->__rdistrarray_2_self_copies = 0;\n            __state->__rdistrarray_2_total_send_size = 0;\n            __state->__rdistrarray_2_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(R3G3) + int(R3G4) - 1, int(R3G4));\n                max_recvs *= int_ceil(int(R3G4) - 1, int(R3G3)) + 1;\n            \n                max_sends *= int_ceil(int(R4G3) + int(R4G4) - 1, int(R4G4));\n                max_recvs *= int_ceil(int(R4G4) - 1, int(R4G3)) + 1;\n            \n                max_sends *= int_ceil(int(S0G3) + int(S0G4) - 1, int(S0G4));\n                max_recvs *= int_ceil(int(S0G4) - 1, int(S0G3)) + 1;\n            \n                max_sends *= int_ceil(int(S1G3) + int(S1G4) - 1, int(S1G4));\n                max_recvs *= int_ceil(int(S1G4) - 1, int(S1G3)) + 1;\n            \n                max_sends *= int_ceil(int(R2G3) + int(R2G4) - 1, int(R2G4));\n                max_recvs *= int_ceil(int(R2G4) - 1, int(R2G3)) + 1;\n            \n            __state->__rdistrarray_2_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_2_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_2_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_2_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_2_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_2_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_2_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_2_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_2_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_2_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_2_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_2_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_2_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_2_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_2_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_2_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_2_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_2_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_14_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_8_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R3G4, R4G4, S0G4, S1G4, R2G4};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_14_coords[3] * int(R3G4)) / int(R3G3);\n                lambda[0] = __state->__pgrid_14_coords[3] * int(R3G4) % int(R3G3);\n                kappa[0] = int_ceil(int(R3G4) + lambda[0], int(R3G3));\n            \n                xi[1] = (__state->__pgrid_14_coords[4] * int(R4G4)) / int(R4G3);\n                lambda[1] = __state->__pgrid_14_coords[4] * int(R4G4) % int(R4G3);\n                kappa[1] = int_ceil(int(R4G4) + lambda[1], int(R4G3));\n            \n                xi[2] = (__state->__pgrid_14_coords[0] * int(S0G4)) / int(S0G3);\n                lambda[2] = __state->__pgrid_14_coords[0] * int(S0G4) % int(S0G3);\n                kappa[2] = int_ceil(int(S0G4) + lambda[2], int(S0G3));\n            \n                xi[3] = (__state->__pgrid_14_coords[1] * int(S1G4)) / int(S1G3);\n                lambda[3] = __state->__pgrid_14_coords[1] * int(S1G4) % int(S1G3);\n                kappa[3] = int_ceil(int(S1G4) + lambda[3], int(S1G3));\n            \n                xi[4] = (__state->__pgrid_14_coords[2] * int(R2G4)) / int(R2G3);\n                lambda[4] = __state->__pgrid_14_coords[2] * int(R2G4) % int(R2G3);\n                kappa[4] = int_ceil(int(R2G4) + lambda[4], int(R2G3));\n            \n                int rem0 = R3G4;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 3;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(R3G3), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = R3G4 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = R4G4;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 4;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(R4G3), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = R4G4 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S0G4;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 0;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S0G3), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S0G4 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S1G4;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 1;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S1G3), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S1G4 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R2G4;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 2;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R2G3), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R2G4 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pgrid_exact_coords[2];\npgrid_coords[3] = pcoords[2];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_8_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_2_self_copies++;\n                // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_2_recv_buffers[__state->__rdistrarray_2_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_2_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_2_recv_buffers[__state->__rdistrarray_2_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_2_recv_types[__state->__rdistrarray_2_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_2_recv_types[__state->__rdistrarray_2_recvs]);\n                    __state->__rdistrarray_2_src_ranks[__state->__rdistrarray_2_recvs] = cart_rank;\n                    // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_2_src_ranks[__state->__rdistrarray_2_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_2_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_11_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_13_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R3G3, R4G3, S0G3, S1G3, R2G3};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_11_coords[3] * int(R3G3)) / int(R3G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_14_dims[3], int_ceil((__state->__pgrid_11_coords[3] + 1) * int(R3G3), int(R3G4)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 3;\n\n                    xi[0] = (idx0 * int(R3G4)) / int(R3G3);\n                    lambda[0] = idx0 * int(R3G4) % int(R3G3);\n                    kappa[0] = int_ceil(int(R3G4) + lambda[0], int(R3G3));\n                    int idx0_dst = __state->__pgrid_11_coords[3] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(R3G4) + lambda[0] - idx0_dst * int(R3G3) : int(R3G3));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_11_coords[4] * int(R4G3)) / int(R4G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_14_dims[4], int_ceil((__state->__pgrid_11_coords[4] + 1) * int(R4G3), int(R4G4)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 4;\n\n                    xi[1] = (idx1 * int(R4G4)) / int(R4G3);\n                    lambda[1] = idx1 * int(R4G4) % int(R4G3);\n                    kappa[1] = int_ceil(int(R4G4) + lambda[1], int(R4G3));\n                    int idx1_dst = __state->__pgrid_11_coords[4] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(R4G4) + lambda[1] - idx1_dst * int(R4G3) : int(R4G3));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_11_coords[0] * int(S0G3)) / int(S0G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_14_dims[0], int_ceil((__state->__pgrid_11_coords[0] + 1) * int(S0G3), int(S0G4)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 0;\n\n                    xi[2] = (idx2 * int(S0G4)) / int(S0G3);\n                    lambda[2] = idx2 * int(S0G4) % int(S0G3);\n                    kappa[2] = int_ceil(int(S0G4) + lambda[2], int(S0G3));\n                    int idx2_dst = __state->__pgrid_11_coords[0] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S0G4) + lambda[2] - idx2_dst * int(S0G3) : int(S0G3));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_11_coords[1] * int(S1G3)) / int(S1G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_14_dims[1], int_ceil((__state->__pgrid_11_coords[1] + 1) * int(S1G3), int(S1G4)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 1;\n\n                    xi[3] = (idx3 * int(S1G4)) / int(S1G3);\n                    lambda[3] = idx3 * int(S1G4) % int(S1G3);\n                    kappa[3] = int_ceil(int(S1G4) + lambda[3], int(S1G3));\n                    int idx3_dst = __state->__pgrid_11_coords[1] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S1G4) + lambda[3] - idx3_dst * int(S1G3) : int(S1G3));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_11_coords[2] * int(R2G3)) / int(R2G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_14_dims[2], int_ceil((__state->__pgrid_11_coords[2] + 1) * int(R2G3), int(R2G4)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 2;\n\n                    xi[4] = (idx4 * int(R2G4)) / int(R2G3);\n                    lambda[4] = idx4 * int(R2G4) % int(R2G3);\n                    kappa[4] = int_ceil(int(R2G4) + lambda[4], int(R2G3));\n                    int idx4_dst = __state->__pgrid_11_coords[2] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R2G4) + lambda[4] - idx4_dst * int(R2G3) : int(R2G3));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pgrid_exact_coords[2];\npgrid_coords[3] = pcoords[2];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_13_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_2_send_buffers[__state->__rdistrarray_2_sends] = new double[__state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends]];\n                    //if (__state->__rdistrarray_2_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_2_send_buffers[__state->__rdistrarray_2_sends]), __state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_2_send_types[__state->__rdistrarray_2_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_2_send_types[__state->__rdistrarray_2_sends]);\n                    __state->__rdistrarray_2_dst_ranks[__state->__rdistrarray_2_sends] = cart_rank;\n                    // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_2_dst_ranks[__state->__rdistrarray_2_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_2_sends++;\n                }\n            }}}}}}}",
        "language": "CPP"
      }
    },
    "exit_code": {
      "frame": {
        "string_data": "\n            if (__state->__pgrid_0_valid) {\n                MPI_Group_free(&__state->__pgrid_0_group);\n                MPI_Comm_free(&__state->__pgrid_0_comm);\n            }\n        \n            if (__state->__pgrid_1_valid) {\n                MPI_Group_free(&__state->__pgrid_1_group);\n                MPI_Comm_free(&__state->__pgrid_1_comm);\n            }\n        \n            if (__state->__pgrid_2_valid) {\n                MPI_Group_free(&__state->__pgrid_2_group);\n                MPI_Comm_free(&__state->__pgrid_2_comm);\n            }\n        \n                if (__state->__pgrid_1_valid) {\n                    delete[] __state->__subarray_0_counts;\n                    delete[] __state->__subarray_0_displs;\n                    MPI_Type_free(&__state->__subarray_0);\n                }\n            \n            if (__state->__pgrid_3_valid) {\n                MPI_Group_free(&__state->__pgrid_3_group);\n                MPI_Comm_free(&__state->__pgrid_3_comm);\n            }\n        \n            if (__state->__pgrid_4_valid) {\n                MPI_Group_free(&__state->__pgrid_4_group);\n                MPI_Comm_free(&__state->__pgrid_4_comm);\n            }\n        \n            if (__state->__pgrid_5_valid) {\n                MPI_Group_free(&__state->__pgrid_5_group);\n                MPI_Comm_free(&__state->__pgrid_5_comm);\n            }\n        \n                if (__state->__pgrid_4_valid) {\n                    delete[] __state->__subarray_1_counts;\n                    delete[] __state->__subarray_1_displs;\n                    MPI_Type_free(&__state->__subarray_1);\n                }\n            \n            if (__state->__pgrid_6_valid) {\n                MPI_Group_free(&__state->__pgrid_6_group);\n                MPI_Comm_free(&__state->__pgrid_6_comm);\n            }\n        \n            if (__state->__pgrid_7_valid) {\n                MPI_Group_free(&__state->__pgrid_7_group);\n                MPI_Comm_free(&__state->__pgrid_7_comm);\n            }\n        \n                if (__state->__pgrid_6_valid) {\n                    delete[] __state->__subarray_2_counts;\n                    delete[] __state->__subarray_2_displs;\n                    MPI_Type_free(&__state->__subarray_2);\n                }\n            \n            if (__state->__pgrid_8_valid) {\n                MPI_Group_free(&__state->__pgrid_8_group);\n                MPI_Comm_free(&__state->__pgrid_8_comm);\n            }\n        \n            if (__state->__pgrid_9_valid) {\n                MPI_Group_free(&__state->__pgrid_9_group);\n                MPI_Comm_free(&__state->__pgrid_9_comm);\n            }\n        \n            if (__state->__pgrid_10_valid) {\n                MPI_Group_free(&__state->__pgrid_10_group);\n                MPI_Comm_free(&__state->__pgrid_10_comm);\n            }\n        \n                if (__state->__pgrid_9_valid) {\n                    delete[] __state->__subarray_3_counts;\n                    delete[] __state->__subarray_3_displs;\n                    MPI_Type_free(&__state->__subarray_3);\n                }\n            \n            if (__state->__pgrid_11_valid) {\n                MPI_Group_free(&__state->__pgrid_11_group);\n                MPI_Comm_free(&__state->__pgrid_11_comm);\n            }\n        \n            if (__state->__pgrid_12_valid) {\n                MPI_Group_free(&__state->__pgrid_12_group);\n                MPI_Comm_free(&__state->__pgrid_12_comm);\n            }\n        \n                if (__state->__pgrid_11_valid) {\n                    delete[] __state->__subarray_4_counts;\n                    delete[] __state->__subarray_4_displs;\n                    MPI_Type_free(&__state->__subarray_4);\n                }\n            \n            if (__state->__pgrid_13_valid) {\n                MPI_Group_free(&__state->__pgrid_13_group);\n                MPI_Comm_free(&__state->__pgrid_13_comm);\n            }\n        \n            if (__state->__pgrid_14_valid) {\n                MPI_Group_free(&__state->__pgrid_14_group);\n                MPI_Comm_free(&__state->__pgrid_14_comm);\n            }\n        \n            if (__state->__pgrid_15_valid) {\n                MPI_Group_free(&__state->__pgrid_15_group);\n                MPI_Comm_free(&__state->__pgrid_15_comm);\n            }\n        \n                if (__state->__pgrid_14_valid) {\n                    delete[] __state->__subarray_5_counts;\n                    delete[] __state->__subarray_5_displs;\n                    MPI_Type_free(&__state->__subarray_5);\n                }\n            \n            if (__state->__pgrid_16_valid) {\n                MPI_Group_free(&__state->__pgrid_16_group);\n                MPI_Comm_free(&__state->__pgrid_16_comm);\n            }\n        \n            if (__state->__pgrid_17_valid) {\n                MPI_Group_free(&__state->__pgrid_17_group);\n                MPI_Comm_free(&__state->__pgrid_17_comm);\n            }\n        \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_0_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_0_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_1_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_0_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_0_send_types;\n                delete[] __state->__rdistrarray_0_dst_ranks;\n                delete[] __state->__rdistrarray_0_recv_types;\n                delete[] __state->__rdistrarray_0_src_ranks;\n                delete[] __state->__rdistrarray_0_self_src;\n                delete[] __state->__rdistrarray_0_self_dst;\n                delete[] __state->__rdistrarray_0_self_size;\n                delete[] __state->__rdistrarray_0_send_sizes;\n                delete[] __state->__rdistrarray_0_send_req;\n                delete[] __state->__rdistrarray_0_recv_req;\n                delete[] __state->__rdistrarray_0_send_status;\n                delete[] __state->__rdistrarray_0_recv_status;\n                delete[] __state->__rdistrarray_0_fix_send_src;\n                delete[] __state->__rdistrarray_0_fix_send_size;\n                delete[] __state->__rdistrarray_0_fix_recv_dst;\n                delete[] __state->__rdistrarray_0_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_0_send_buffers[__idx];\n                        //if (__state->__rdistrarray_0_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_0_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_0_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_0_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_0_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_0_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_0_recv_buffers;\n            \n                }\n            \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_1_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_1_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_6_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_1_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_1_send_types;\n                delete[] __state->__rdistrarray_1_dst_ranks;\n                delete[] __state->__rdistrarray_1_recv_types;\n                delete[] __state->__rdistrarray_1_src_ranks;\n                delete[] __state->__rdistrarray_1_self_src;\n                delete[] __state->__rdistrarray_1_self_dst;\n                delete[] __state->__rdistrarray_1_self_size;\n                delete[] __state->__rdistrarray_1_send_sizes;\n                delete[] __state->__rdistrarray_1_send_req;\n                delete[] __state->__rdistrarray_1_recv_req;\n                delete[] __state->__rdistrarray_1_send_status;\n                delete[] __state->__rdistrarray_1_recv_status;\n                delete[] __state->__rdistrarray_1_fix_send_src;\n                delete[] __state->__rdistrarray_1_fix_send_size;\n                delete[] __state->__rdistrarray_1_fix_recv_dst;\n                delete[] __state->__rdistrarray_1_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_1_send_buffers[__idx];\n                        //if (__state->__rdistrarray_1_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_1_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_1_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_1_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_1_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_1_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_1_recv_buffers;\n            \n                }\n            \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_2_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_2_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_11_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_2_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_2_send_types;\n                delete[] __state->__rdistrarray_2_dst_ranks;\n                delete[] __state->__rdistrarray_2_recv_types;\n                delete[] __state->__rdistrarray_2_src_ranks;\n                delete[] __state->__rdistrarray_2_self_src;\n                delete[] __state->__rdistrarray_2_self_dst;\n                delete[] __state->__rdistrarray_2_self_size;\n                delete[] __state->__rdistrarray_2_send_sizes;\n                delete[] __state->__rdistrarray_2_send_req;\n                delete[] __state->__rdistrarray_2_recv_req;\n                delete[] __state->__rdistrarray_2_send_status;\n                delete[] __state->__rdistrarray_2_recv_status;\n                delete[] __state->__rdistrarray_2_fix_send_src;\n                delete[] __state->__rdistrarray_2_fix_send_size;\n                delete[] __state->__rdistrarray_2_fix_recv_dst;\n                delete[] __state->__rdistrarray_2_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_2_send_buffers[__idx];\n                        //if (__state->__rdistrarray_2_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_2_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_2_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_2_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_2_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_2_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_2_recv_buffers;\n            \n                }\n            ",
        "language": "CPP"
      }
    },
    "orig_sdfg": {
      "type": "SDFG",
      "attributes": {
        "arg_names": [
          "X",
          "JM",
          "KM",
          "LM",
          "MM"
        ],
        "constants_prop": {},
        "_arrays": {
          "X": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "S1G1*S2G1*S3G1*S4G1",
                "S2G1*S3G1*S4G1",
                "S3G1*S4G1",
                "S4G1",
                "1"
              ],
              "total_size": "S0G1*S1G1*S2G1*S3G1*S4G1",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S0G1",
                "S1G1",
                "S2G1",
                "S3G1",
                "S4G1"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "JM": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R1G4",
                "1"
              ],
              "total_size": "R1G4*S1G4",
              "offset": [
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S1G4",
                "R1G4"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "KM": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R2G3",
                "1"
              ],
              "total_size": "R2G3*S2G3",
              "offset": [
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S2G3",
                "R2G3"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "LM": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R3G2",
                "1"
              ],
              "total_size": "R3G2*S3G2",
              "offset": [
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S3G2",
                "R3G2"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "MM": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R4G1",
                "1"
              ],
              "total_size": "R4G1*S4G1",
              "offset": [
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S4G1",
                "R4G1"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__return": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R1G4*R2G4*R3G4*R4G4",
                "R2G4*R3G4*R4G4",
                "R3G4*R4G4",
                "R4G4",
                "1"
              ],
              "total_size": "R1G4*R2G4*R3G4*R4G4*S0G4",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S0G4",
                "R1G4",
                "R2G4",
                "R3G4",
                "R4G4"
              ],
              "transient": false,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp1": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__rdistrarray_0": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp3": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp6": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__rdistrarray_1": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp8": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp11": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__rdistrarray_2": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "__tmp13": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid1": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid1_out_gather": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid1_out_reduce": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid1_out_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_in_scatter": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_in_bcast": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_in_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_out_gather": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_out_reduce": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_out_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_in_scatter": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_in_bcast": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_in_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_out_gather": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_out_reduce": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_out_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_in_scatter": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_in_bcast": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_in_subarray": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_out_gather": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_out_reduce": {
            "type": "Scalar",
            "attributes": {
              "allow_conflicts": false,
              "dtype": "int32",
              "shape": [
                "1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid1_out": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R4G1*S1G1*S2G1*S3G1",
                "R4G1*S2G1*S3G1",
                "R4G1*S3G1",
                "R4G1",
                "1"
              ],
              "total_size": "R4G1*S0G1*S1G1*S2G1*S3G1",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S0G1",
                "S1G1",
                "S2G1",
                "S3G1",
                "R4G1"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_in": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R4G2*S1G2*S2G2*S3G2",
                "R4G2*S2G2*S3G2",
                "R4G2*S3G2",
                "R4G2",
                "1"
              ],
              "total_size": "R4G2*S0G2*S1G2*S2G2*S3G2",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "S0G2",
                "S1G2",
                "S2G2",
                "S3G2",
                "R4G2"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "tmp": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "S0G2*S1G2*S2G2*S3G2",
                "S1G2*S2G2*S3G2",
                "S2G2*S3G2",
                "S3G2",
                "1"
              ],
              "total_size": "R4G2*S0G2*S1G2*S2G2*S3G2",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R4G2",
                "S0G2",
                "S1G2",
                "S2G2",
                "S3G2"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid2_out": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R3G2*S0G2*S1G2*S2G2",
                "R3G2*S1G2*S2G2",
                "R3G2*S2G2",
                "R3G2",
                "1"
              ],
              "total_size": "R3G2*R4G2*S0G2*S1G2*S2G2",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R4G2",
                "S0G2",
                "S1G2",
                "S2G2",
                "R3G2"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_in": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R3G3*S0G3*S1G3*S2G3",
                "R3G3*S1G3*S2G3",
                "R3G3*S2G3",
                "R3G3",
                "1"
              ],
              "total_size": "R3G3*R4G3*S0G3*S1G3*S2G3",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R4G3",
                "S0G3",
                "S1G3",
                "S2G3",
                "R3G3"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "tmp2": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R4G3*S0G3*S1G3*S2G3",
                "S0G3*S1G3*S2G3",
                "S1G3*S2G3",
                "S2G3",
                "1"
              ],
              "total_size": "R3G3*R4G3*S0G3*S1G3*S2G3",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R3G3",
                "R4G3",
                "S0G3",
                "S1G3",
                "S2G3"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid3_out": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R2G3*R4G3*S0G3*S1G3",
                "R2G3*S0G3*S1G3",
                "R2G3*S1G3",
                "R2G3",
                "1"
              ],
              "total_size": "R2G3*R3G3*R4G3*S0G3*S1G3",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R3G3",
                "R4G3",
                "S0G3",
                "S1G3",
                "R2G3"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_in": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R2G4*R4G4*S0G4*S1G4",
                "R2G4*S0G4*S1G4",
                "R2G4*S1G4",
                "R2G4",
                "1"
              ],
              "total_size": "R2G4*R3G4*R4G4*S0G4*S1G4",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R3G4",
                "R4G4",
                "S0G4",
                "S1G4",
                "R2G4"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "tmp3": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R3G4*R4G4*S0G4*S1G4",
                "R4G4*S0G4*S1G4",
                "S0G4*S1G4",
                "S1G4",
                "1"
              ],
              "total_size": "R2G4*R3G4*R4G4*S0G4*S1G4",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R2G4",
                "R3G4",
                "R4G4",
                "S0G4",
                "S1G4"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          },
          "grid4_out": {
            "type": "Array",
            "attributes": {
              "allow_conflicts": false,
              "strides": [
                "R1G4*R3G4*R4G4*S0G4",
                "R1G4*R4G4*S0G4",
                "R1G4*S0G4",
                "R1G4",
                "1"
              ],
              "total_size": "R1G4*R2G4*R3G4*R4G4*S0G4",
              "offset": [
                "0",
                "0",
                "0",
                "0",
                "0"
              ],
              "may_alias": false,
              "alignment": 0,
              "start_offset": 0,
              "optional": false,
              "pool": false,
              "dtype": "float64",
              "shape": [
                "R2G4",
                "R3G4",
                "R4G4",
                "S0G4",
                "R1G4"
              ],
              "transient": true,
              "storage": "CPU_Heap",
              "lifetime": "Scope",
              "location": {},
              "debuginfo": null
            }
          }
        },
        "symbols": {
          "P0G1": "int32",
          "P0G2": "int32",
          "P0G3": "int32",
          "P0G4": "int32",
          "P1G1": "int32",
          "P1G2": "int32",
          "P1G3": "int32",
          "P1G4": "int32",
          "P2G1": "int32",
          "P2G2": "int32",
          "P2G3": "int32",
          "P3G1": "int32",
          "P3G2": "int32",
          "P4G1": "int32",
          "PR1G4": "int32",
          "PR2G3": "int32",
          "PR2G4": "int32",
          "PR3G2": "int32",
          "PR3G3": "int32",
          "PR3G4": "int32",
          "PR4G1": "int32",
          "PR4G2": "int32",
          "PR4G3": "int32",
          "PR4G4": "int32",
          "R1G4": "int32",
          "R2": "int32",
          "R2G3": "int32",
          "R2G4": "int32",
          "R3": "int32",
          "R3G2": "int32",
          "R3G3": "int32",
          "R3G4": "int32",
          "R4": "int32",
          "R4G1": "int32",
          "R4G2": "int32",
          "R4G3": "int32",
          "R4G4": "int32",
          "S0": "int32",
          "S0G1": "int32",
          "S0G2": "int32",
          "S0G3": "int32",
          "S0G4": "int32",
          "S1": "int32",
          "S1G1": "int32",
          "S1G2": "int32",
          "S1G3": "int32",
          "S1G4": "int32",
          "S2": "int32",
          "S2G1": "int32",
          "S2G2": "int32",
          "S2G3": "int32",
          "S3": "int32",
          "S3G1": "int32",
          "S3G2": "int32",
          "S4G1": "int32"
        },
        "instrument": "No_Instrumentation",
        "global_code": {
          "frame": {
            "string_data": "",
            "language": "CPP"
          }
        },
        "init_code": {
          "frame": {
            "string_data": "__state->__pgrid_0_dims[0] = P0G1;\n__state->__pgrid_0_dims[1] = P1G1;\n__state->__pgrid_0_dims[2] = P2G1;\n__state->__pgrid_0_dims[3] = P3G1;\n__state->__pgrid_0_dims[4] = P4G1;\n__state->__pgrid_0_dims[5] = PR4G1;\n\n                int __pgrid_0_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_0_dims, __pgrid_0_periods, 0, &__state->__pgrid_0_comm);\n                if (__state->__pgrid_0_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_0_comm, &__state->__pgrid_0_group);\n                    MPI_Comm_rank(__state->__pgrid_0_comm, &__state->__pgrid_0_rank);\n                    MPI_Comm_size(__state->__pgrid_0_comm, &__state->__pgrid_0_size);\n                    MPI_Cart_coords(__state->__pgrid_0_comm, __state->__pgrid_0_rank, 6, __state->__pgrid_0_coords);\n                    __state->__pgrid_0_valid = true;\n                } else {\n                    __state->__pgrid_0_group = MPI_GROUP_NULL;\n                    __state->__pgrid_0_rank = MPI_PROC_NULL;\n                    __state->__pgrid_0_size = 0;\n                    __state->__pgrid_0_valid = false;\n                }\n            __state->__pgrid_1_dims[0] = P0G1;\n__state->__pgrid_1_dims[1] = P1G1;\n__state->__pgrid_1_dims[2] = P2G1;\n__state->__pgrid_1_dims[3] = P3G1;\n__state->__pgrid_1_dims[4] = PR4G1;\n\n                __state->__pgrid_1_valid = false;\n                if (__state->__pgrid_0_valid) {\n                    int __pgrid_1_remain[6] = {1, 1, 1, 1, 0, 1};\n                    MPI_Cart_sub(__state->__pgrid_0_comm, __pgrid_1_remain, &__state->__pgrid_1_comm);\n                    MPI_Comm_group(__state->__pgrid_1_comm, &__state->__pgrid_1_group);\n                    MPI_Comm_rank(__state->__pgrid_1_comm, &__state->__pgrid_1_rank);\n                    MPI_Comm_size(__state->__pgrid_1_comm, &__state->__pgrid_1_size);\n                    MPI_Cart_coords(__state->__pgrid_1_comm, __state->__pgrid_1_rank, 5, __state->__pgrid_1_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_0_group, 1, ranks1, __state->__pgrid_1_group, ranks2);\n                    __state->__pgrid_1_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_2_dims[0] = P4G1;\n\n                __state->__pgrid_2_valid = false;\n                if (__state->__pgrid_0_valid) {\n                    int __pgrid_2_remain[6] = {0, 0, 0, 0, 1, 0};\n                    MPI_Cart_sub(__state->__pgrid_0_comm, __pgrid_2_remain, &__state->__pgrid_2_comm);\n                    MPI_Comm_group(__state->__pgrid_2_comm, &__state->__pgrid_2_group);\n                    MPI_Comm_rank(__state->__pgrid_2_comm, &__state->__pgrid_2_rank);\n                    MPI_Comm_size(__state->__pgrid_2_comm, &__state->__pgrid_2_size);\n                    MPI_Cart_coords(__state->__pgrid_2_comm, __state->__pgrid_2_rank, 1, __state->__pgrid_2_coords);\n            \n                    __state->__pgrid_2_valid = true;\n                }\n                \n                if (__state->__pgrid_1_valid) {\n                    int sizes[5] = {S0, S1, S2, S3, R4};\n                    int subsizes[5] = {S0G1, S1G1, S2G1, S3G1, R4G1};\n                    int corr[5] = {0, 1, 2, 3, 4};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_1_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_0);\n                    MPI_Type_commit(&__state->__subarray_0);\n\n                    __state->__subarray_0_counts = new int[__state->__pgrid_1_size];\n                    __state->__subarray_0_displs = new int[__state->__pgrid_1_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_1_size; ++i) {\n                        __state->__subarray_0_counts[i] = 1;\n                        __state->__subarray_0_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_1_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_1_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_1_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_3_dims[0] = P0G2;\n__state->__pgrid_3_dims[1] = P1G2;\n__state->__pgrid_3_dims[2] = P2G2;\n__state->__pgrid_3_dims[3] = P3G2;\n__state->__pgrid_3_dims[4] = PR3G2;\n__state->__pgrid_3_dims[5] = PR4G2;\n\n                int __pgrid_3_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_3_dims, __pgrid_3_periods, 0, &__state->__pgrid_3_comm);\n                if (__state->__pgrid_3_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_3_comm, &__state->__pgrid_3_group);\n                    MPI_Comm_rank(__state->__pgrid_3_comm, &__state->__pgrid_3_rank);\n                    MPI_Comm_size(__state->__pgrid_3_comm, &__state->__pgrid_3_size);\n                    MPI_Cart_coords(__state->__pgrid_3_comm, __state->__pgrid_3_rank, 6, __state->__pgrid_3_coords);\n                    __state->__pgrid_3_valid = true;\n                } else {\n                    __state->__pgrid_3_group = MPI_GROUP_NULL;\n                    __state->__pgrid_3_rank = MPI_PROC_NULL;\n                    __state->__pgrid_3_size = 0;\n                    __state->__pgrid_3_valid = false;\n                }\n            __state->__pgrid_4_dims[0] = P0G2;\n__state->__pgrid_4_dims[1] = P1G2;\n__state->__pgrid_4_dims[2] = P2G2;\n__state->__pgrid_4_dims[3] = P3G2;\n__state->__pgrid_4_dims[4] = PR4G2;\n\n                __state->__pgrid_4_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_4_remain[6] = {1, 1, 1, 1, 0, 1};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_4_remain, &__state->__pgrid_4_comm);\n                    MPI_Comm_group(__state->__pgrid_4_comm, &__state->__pgrid_4_group);\n                    MPI_Comm_rank(__state->__pgrid_4_comm, &__state->__pgrid_4_rank);\n                    MPI_Comm_size(__state->__pgrid_4_comm, &__state->__pgrid_4_size);\n                    MPI_Cart_coords(__state->__pgrid_4_comm, __state->__pgrid_4_rank, 5, __state->__pgrid_4_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_3_group, 1, ranks1, __state->__pgrid_4_group, ranks2);\n                    __state->__pgrid_4_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_5_dims[0] = PR3G2;\n\n                __state->__pgrid_5_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_5_remain[6] = {0, 0, 0, 0, 1, 0};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_5_remain, &__state->__pgrid_5_comm);\n                    MPI_Comm_group(__state->__pgrid_5_comm, &__state->__pgrid_5_group);\n                    MPI_Comm_rank(__state->__pgrid_5_comm, &__state->__pgrid_5_rank);\n                    MPI_Comm_size(__state->__pgrid_5_comm, &__state->__pgrid_5_size);\n                    MPI_Cart_coords(__state->__pgrid_5_comm, __state->__pgrid_5_rank, 1, __state->__pgrid_5_coords);\n            \n                    __state->__pgrid_5_valid = true;\n                }\n                \n                if (__state->__pgrid_4_valid) {\n                    int sizes[5] = {S0, S1, S2, S3, R4};\n                    int subsizes[5] = {S0G2, S1G2, S2G2, S3G2, R4G2};\n                    int corr[5] = {0, 1, 2, 3, 4};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_4_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_1);\n                    MPI_Type_commit(&__state->__subarray_1);\n\n                    __state->__subarray_1_counts = new int[__state->__pgrid_4_size];\n                    __state->__subarray_1_displs = new int[__state->__pgrid_4_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_4_size; ++i) {\n                        __state->__subarray_1_counts[i] = 1;\n                        __state->__subarray_1_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_4_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_4_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_4_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_6_dims[0] = P0G2;\n__state->__pgrid_6_dims[1] = P1G2;\n__state->__pgrid_6_dims[2] = P2G2;\n__state->__pgrid_6_dims[3] = PR3G2;\n__state->__pgrid_6_dims[4] = PR4G2;\n\n                __state->__pgrid_6_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_6_remain[6] = {1, 1, 1, 0, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_6_remain, &__state->__pgrid_6_comm);\n                    MPI_Comm_group(__state->__pgrid_6_comm, &__state->__pgrid_6_group);\n                    MPI_Comm_rank(__state->__pgrid_6_comm, &__state->__pgrid_6_rank);\n                    MPI_Comm_size(__state->__pgrid_6_comm, &__state->__pgrid_6_size);\n                    MPI_Cart_coords(__state->__pgrid_6_comm, __state->__pgrid_6_rank, 5, __state->__pgrid_6_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_3_group, 1, ranks1, __state->__pgrid_6_group, ranks2);\n                    __state->__pgrid_6_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_7_dims[0] = P3G2;\n\n                __state->__pgrid_7_valid = false;\n                if (__state->__pgrid_3_valid) {\n                    int __pgrid_7_remain[6] = {0, 0, 0, 1, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_3_comm, __pgrid_7_remain, &__state->__pgrid_7_comm);\n                    MPI_Comm_group(__state->__pgrid_7_comm, &__state->__pgrid_7_group);\n                    MPI_Comm_rank(__state->__pgrid_7_comm, &__state->__pgrid_7_rank);\n                    MPI_Comm_size(__state->__pgrid_7_comm, &__state->__pgrid_7_size);\n                    MPI_Cart_coords(__state->__pgrid_7_comm, __state->__pgrid_7_rank, 1, __state->__pgrid_7_coords);\n            \n                    __state->__pgrid_7_valid = true;\n                }\n                \n                if (__state->__pgrid_6_valid) {\n                    int sizes[5] = {R4, S0, S1, S2, R3};\n                    int subsizes[5] = {R4G2, S0G2, S1G2, S2G2, R3G2};\n                    int corr[5] = {4, 0, 1, 2, 3};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_6_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_2);\n                    MPI_Type_commit(&__state->__subarray_2);\n\n                    __state->__subarray_2_counts = new int[__state->__pgrid_6_size];\n                    __state->__subarray_2_displs = new int[__state->__pgrid_6_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_6_size; ++i) {\n                        __state->__subarray_2_counts[i] = 1;\n                        __state->__subarray_2_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_6_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_6_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_6_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_8_dims[0] = P0G3;\n__state->__pgrid_8_dims[1] = P1G3;\n__state->__pgrid_8_dims[2] = P2G3;\n__state->__pgrid_8_dims[3] = PR2G3;\n__state->__pgrid_8_dims[4] = PR3G3;\n__state->__pgrid_8_dims[5] = PR4G3;\n\n                int __pgrid_8_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_8_dims, __pgrid_8_periods, 0, &__state->__pgrid_8_comm);\n                if (__state->__pgrid_8_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_8_comm, &__state->__pgrid_8_group);\n                    MPI_Comm_rank(__state->__pgrid_8_comm, &__state->__pgrid_8_rank);\n                    MPI_Comm_size(__state->__pgrid_8_comm, &__state->__pgrid_8_size);\n                    MPI_Cart_coords(__state->__pgrid_8_comm, __state->__pgrid_8_rank, 6, __state->__pgrid_8_coords);\n                    __state->__pgrid_8_valid = true;\n                } else {\n                    __state->__pgrid_8_group = MPI_GROUP_NULL;\n                    __state->__pgrid_8_rank = MPI_PROC_NULL;\n                    __state->__pgrid_8_size = 0;\n                    __state->__pgrid_8_valid = false;\n                }\n            __state->__pgrid_9_dims[0] = P0G3;\n__state->__pgrid_9_dims[1] = P1G3;\n__state->__pgrid_9_dims[2] = P2G3;\n__state->__pgrid_9_dims[3] = PR3G3;\n__state->__pgrid_9_dims[4] = PR4G3;\n\n                __state->__pgrid_9_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_9_remain[6] = {1, 1, 1, 0, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_9_remain, &__state->__pgrid_9_comm);\n                    MPI_Comm_group(__state->__pgrid_9_comm, &__state->__pgrid_9_group);\n                    MPI_Comm_rank(__state->__pgrid_9_comm, &__state->__pgrid_9_rank);\n                    MPI_Comm_size(__state->__pgrid_9_comm, &__state->__pgrid_9_size);\n                    MPI_Cart_coords(__state->__pgrid_9_comm, __state->__pgrid_9_rank, 5, __state->__pgrid_9_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_8_group, 1, ranks1, __state->__pgrid_9_group, ranks2);\n                    __state->__pgrid_9_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_10_dims[0] = PR2G3;\n\n                __state->__pgrid_10_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_10_remain[6] = {0, 0, 0, 1, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_10_remain, &__state->__pgrid_10_comm);\n                    MPI_Comm_group(__state->__pgrid_10_comm, &__state->__pgrid_10_group);\n                    MPI_Comm_rank(__state->__pgrid_10_comm, &__state->__pgrid_10_rank);\n                    MPI_Comm_size(__state->__pgrid_10_comm, &__state->__pgrid_10_size);\n                    MPI_Cart_coords(__state->__pgrid_10_comm, __state->__pgrid_10_rank, 1, __state->__pgrid_10_coords);\n            \n                    __state->__pgrid_10_valid = true;\n                }\n                \n                if (__state->__pgrid_9_valid) {\n                    int sizes[5] = {R4, S0, S1, S2, R3};\n                    int subsizes[5] = {R4G3, S0G3, S1G3, S2G3, R3G3};\n                    int corr[5] = {4, 0, 1, 2, 3};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_9_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_3);\n                    MPI_Type_commit(&__state->__subarray_3);\n\n                    __state->__subarray_3_counts = new int[__state->__pgrid_9_size];\n                    __state->__subarray_3_displs = new int[__state->__pgrid_9_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_9_size; ++i) {\n                        __state->__subarray_3_counts[i] = 1;\n                        __state->__subarray_3_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_9_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_9_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_9_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_11_dims[0] = P0G3;\n__state->__pgrid_11_dims[1] = P1G3;\n__state->__pgrid_11_dims[2] = PR2G3;\n__state->__pgrid_11_dims[3] = PR3G3;\n__state->__pgrid_11_dims[4] = PR4G3;\n\n                __state->__pgrid_11_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_11_remain[6] = {1, 1, 0, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_11_remain, &__state->__pgrid_11_comm);\n                    MPI_Comm_group(__state->__pgrid_11_comm, &__state->__pgrid_11_group);\n                    MPI_Comm_rank(__state->__pgrid_11_comm, &__state->__pgrid_11_rank);\n                    MPI_Comm_size(__state->__pgrid_11_comm, &__state->__pgrid_11_size);\n                    MPI_Cart_coords(__state->__pgrid_11_comm, __state->__pgrid_11_rank, 5, __state->__pgrid_11_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_8_group, 1, ranks1, __state->__pgrid_11_group, ranks2);\n                    __state->__pgrid_11_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_12_dims[0] = P2G3;\n\n                __state->__pgrid_12_valid = false;\n                if (__state->__pgrid_8_valid) {\n                    int __pgrid_12_remain[6] = {0, 0, 1, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_8_comm, __pgrid_12_remain, &__state->__pgrid_12_comm);\n                    MPI_Comm_group(__state->__pgrid_12_comm, &__state->__pgrid_12_group);\n                    MPI_Comm_rank(__state->__pgrid_12_comm, &__state->__pgrid_12_rank);\n                    MPI_Comm_size(__state->__pgrid_12_comm, &__state->__pgrid_12_size);\n                    MPI_Cart_coords(__state->__pgrid_12_comm, __state->__pgrid_12_rank, 1, __state->__pgrid_12_coords);\n            \n                    __state->__pgrid_12_valid = true;\n                }\n                \n                if (__state->__pgrid_11_valid) {\n                    int sizes[5] = {R3, R4, S0, S1, R2};\n                    int subsizes[5] = {R3G3, R4G3, S0G3, S1G3, R2G3};\n                    int corr[5] = {3, 4, 0, 1, 2};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_11_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_4);\n                    MPI_Type_commit(&__state->__subarray_4);\n\n                    __state->__subarray_4_counts = new int[__state->__pgrid_11_size];\n                    __state->__subarray_4_displs = new int[__state->__pgrid_11_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_11_size; ++i) {\n                        __state->__subarray_4_counts[i] = 1;\n                        __state->__subarray_4_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_11_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_11_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_11_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_13_dims[0] = P0G4;\n__state->__pgrid_13_dims[1] = P1G4;\n__state->__pgrid_13_dims[2] = PR1G4;\n__state->__pgrid_13_dims[3] = PR2G4;\n__state->__pgrid_13_dims[4] = PR3G4;\n__state->__pgrid_13_dims[5] = PR4G4;\n\n                int __pgrid_13_periods[6] = {0};\n                MPI_Cart_create(MPI_COMM_WORLD, 6, __state->__pgrid_13_dims, __pgrid_13_periods, 0, &__state->__pgrid_13_comm);\n                if (__state->__pgrid_13_comm != MPI_COMM_NULL) {\n                    MPI_Comm_group(__state->__pgrid_13_comm, &__state->__pgrid_13_group);\n                    MPI_Comm_rank(__state->__pgrid_13_comm, &__state->__pgrid_13_rank);\n                    MPI_Comm_size(__state->__pgrid_13_comm, &__state->__pgrid_13_size);\n                    MPI_Cart_coords(__state->__pgrid_13_comm, __state->__pgrid_13_rank, 6, __state->__pgrid_13_coords);\n                    __state->__pgrid_13_valid = true;\n                } else {\n                    __state->__pgrid_13_group = MPI_GROUP_NULL;\n                    __state->__pgrid_13_rank = MPI_PROC_NULL;\n                    __state->__pgrid_13_size = 0;\n                    __state->__pgrid_13_valid = false;\n                }\n            __state->__pgrid_14_dims[0] = P0G4;\n__state->__pgrid_14_dims[1] = P1G4;\n__state->__pgrid_14_dims[2] = PR2G4;\n__state->__pgrid_14_dims[3] = PR3G4;\n__state->__pgrid_14_dims[4] = PR4G4;\n\n                __state->__pgrid_14_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_14_remain[6] = {1, 1, 0, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_14_remain, &__state->__pgrid_14_comm);\n                    MPI_Comm_group(__state->__pgrid_14_comm, &__state->__pgrid_14_group);\n                    MPI_Comm_rank(__state->__pgrid_14_comm, &__state->__pgrid_14_rank);\n                    MPI_Comm_size(__state->__pgrid_14_comm, &__state->__pgrid_14_size);\n                    MPI_Cart_coords(__state->__pgrid_14_comm, __state->__pgrid_14_rank, 5, __state->__pgrid_14_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_13_group, 1, ranks1, __state->__pgrid_14_group, ranks2);\n                    __state->__pgrid_14_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_15_dims[0] = PR1G4;\n\n                __state->__pgrid_15_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_15_remain[6] = {0, 0, 1, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_15_remain, &__state->__pgrid_15_comm);\n                    MPI_Comm_group(__state->__pgrid_15_comm, &__state->__pgrid_15_group);\n                    MPI_Comm_rank(__state->__pgrid_15_comm, &__state->__pgrid_15_rank);\n                    MPI_Comm_size(__state->__pgrid_15_comm, &__state->__pgrid_15_size);\n                    MPI_Cart_coords(__state->__pgrid_15_comm, __state->__pgrid_15_rank, 1, __state->__pgrid_15_coords);\n            \n                    __state->__pgrid_15_valid = true;\n                }\n                \n                if (__state->__pgrid_14_valid) {\n                    int sizes[5] = {R3, R4, S0, S1, R2};\n                    int subsizes[5] = {R3G4, R4G4, S0G4, S1G4, R2G4};\n                    int corr[5] = {3, 4, 0, 1, 2};\n\n                    int basic_stride = subsizes[5 - 1];\n\n                    int process_strides[5];\n                    int block_strides[5];\n                    int data_strides[5];\n\n                    process_strides[5 - 1] = 1;\n                    block_strides[5 - 1] = subsizes[5 - 1];\n                    data_strides[5 - 1] = 1;\n\n                    for (auto i = 5 - 2; i >= 0; --i) {\n                        block_strides[i] = block_strides[i+1] * subsizes[i];\n                        process_strides[i] = process_strides[i+1] * __state->__pgrid_14_dims[corr[i+1]];\n                        data_strides[i] = block_strides[i] * process_strides[i] / basic_stride;\n                    }\n\n                    MPI_Datatype type;\n                    int origin[5] = {0,0,0,0,0};\n                    MPI_Type_create_subarray(5, sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &type);\n                    MPI_Type_create_resized(type, 0, basic_stride*sizeof(double), &__state->__subarray_5);\n                    MPI_Type_commit(&__state->__subarray_5);\n\n                    __state->__subarray_5_counts = new int[__state->__pgrid_14_size];\n                    __state->__subarray_5_displs = new int[__state->__pgrid_14_size];\n                    int block_id[5] = {0};\n                    int displ = 0;\n                    for (auto i = 0; i < __state->__pgrid_14_size; ++i) {\n                        __state->__subarray_5_counts[i] = 1;\n                        __state->__subarray_5_displs[i] = displ;\n                        int idx = 5 - 1;\n                        while (idx >= 0 && block_id[idx] + 1 >= __state->__pgrid_14_dims[corr[idx]]) {\n                            block_id[idx] = 0;\n                            displ -= data_strides[idx] * (__state->__pgrid_14_dims[corr[idx]] - 1);\n                            idx--;\n                        }\n                        if (idx >= 0) { \n                            block_id[idx] += 1;\n                            displ += data_strides[idx];\n                        } else {\n                            assert(i == __state->__pgrid_14_size - 1);\n                        }\n                    }\n                }\n            __state->__pgrid_16_dims[0] = P0G4;\n__state->__pgrid_16_dims[1] = PR1G4;\n__state->__pgrid_16_dims[2] = PR2G4;\n__state->__pgrid_16_dims[3] = PR3G4;\n__state->__pgrid_16_dims[4] = PR4G4;\n\n                __state->__pgrid_16_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_16_remain[6] = {1, 0, 1, 1, 1, 1};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_16_remain, &__state->__pgrid_16_comm);\n                    MPI_Comm_group(__state->__pgrid_16_comm, &__state->__pgrid_16_group);\n                    MPI_Comm_rank(__state->__pgrid_16_comm, &__state->__pgrid_16_rank);\n                    MPI_Comm_size(__state->__pgrid_16_comm, &__state->__pgrid_16_size);\n                    MPI_Cart_coords(__state->__pgrid_16_comm, __state->__pgrid_16_rank, 5, __state->__pgrid_16_coords);\n            \n                    int ranks1[1] = {0};\n                    int ranks2[1];\n                    MPI_Group_translate_ranks(__state->__pgrid_13_group, 1, ranks1, __state->__pgrid_16_group, ranks2);\n                    __state->__pgrid_16_valid = (ranks2[0] != MPI_PROC_NULL && ranks2[0] != MPI_UNDEFINED);\n                }\n                __state->__pgrid_17_dims[0] = P1G4;\n\n                __state->__pgrid_17_valid = false;\n                if (__state->__pgrid_13_valid) {\n                    int __pgrid_17_remain[6] = {0, 1, 0, 0, 0, 0};\n                    MPI_Cart_sub(__state->__pgrid_13_comm, __pgrid_17_remain, &__state->__pgrid_17_comm);\n                    MPI_Comm_group(__state->__pgrid_17_comm, &__state->__pgrid_17_group);\n                    MPI_Comm_rank(__state->__pgrid_17_comm, &__state->__pgrid_17_rank);\n                    MPI_Comm_size(__state->__pgrid_17_comm, &__state->__pgrid_17_size);\n                    MPI_Cart_coords(__state->__pgrid_17_comm, __state->__pgrid_17_rank, 1, __state->__pgrid_17_coords);\n            \n                    __state->__pgrid_17_valid = true;\n                }\n                {\n            __state->__rdistrarray_0_sends = 0;\n            __state->__rdistrarray_0_recvs = 0;\n            __state->__rdistrarray_0_self_copies = 0;\n            __state->__rdistrarray_0_total_send_size = 0;\n            __state->__rdistrarray_0_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(S0G1) + int(S0G2) - 1, int(S0G2));\n                max_recvs *= int_ceil(int(S0G2) - 1, int(S0G1)) + 1;\n            \n                max_sends *= int_ceil(int(S1G1) + int(S1G2) - 1, int(S1G2));\n                max_recvs *= int_ceil(int(S1G2) - 1, int(S1G1)) + 1;\n            \n                max_sends *= int_ceil(int(S2G1) + int(S2G2) - 1, int(S2G2));\n                max_recvs *= int_ceil(int(S2G2) - 1, int(S2G1)) + 1;\n            \n                max_sends *= int_ceil(int(S3G1) + int(S3G2) - 1, int(S3G2));\n                max_recvs *= int_ceil(int(S3G2) - 1, int(S3G1)) + 1;\n            \n                max_sends *= int_ceil(int(R4G1) + int(R4G2) - 1, int(R4G2));\n                max_recvs *= int_ceil(int(R4G2) - 1, int(R4G1)) + 1;\n            \n            __state->__rdistrarray_0_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_0_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_0_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_0_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_0_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_0_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_0_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_0_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_0_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_0_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_0_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_0_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_0_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_0_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_0_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_0_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_0_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_0_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_4_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_0_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {S0G2, S1G2, S2G2, S3G2, R4G2};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_4_coords[0] * int(S0G2)) / int(S0G1);\n                lambda[0] = __state->__pgrid_4_coords[0] * int(S0G2) % int(S0G1);\n                kappa[0] = int_ceil(int(S0G2) + lambda[0], int(S0G1));\n            \n                xi[1] = (__state->__pgrid_4_coords[1] * int(S1G2)) / int(S1G1);\n                lambda[1] = __state->__pgrid_4_coords[1] * int(S1G2) % int(S1G1);\n                kappa[1] = int_ceil(int(S1G2) + lambda[1], int(S1G1));\n            \n                xi[2] = (__state->__pgrid_4_coords[2] * int(S2G2)) / int(S2G1);\n                lambda[2] = __state->__pgrid_4_coords[2] * int(S2G2) % int(S2G1);\n                kappa[2] = int_ceil(int(S2G2) + lambda[2], int(S2G1));\n            \n                xi[3] = (__state->__pgrid_4_coords[3] * int(S3G2)) / int(S3G1);\n                lambda[3] = __state->__pgrid_4_coords[3] * int(S3G2) % int(S3G1);\n                kappa[3] = int_ceil(int(S3G2) + lambda[3], int(S3G1));\n            \n                xi[4] = (__state->__pgrid_4_coords[4] * int(R4G2)) / int(R4G1);\n                lambda[4] = __state->__pgrid_4_coords[4] * int(R4G2) % int(R4G1);\n                kappa[4] = int_ceil(int(R4G2) + lambda[4], int(R4G1));\n            \n                int rem0 = S0G2;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 0;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(S0G1), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = S0G2 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = S1G2;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 1;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(S1G1), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = S1G2 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S2G2;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 2;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S2G1), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S2G2 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S3G2;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 3;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S3G1), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S3G2 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R4G2;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 4;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R4G1), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R4G2 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pcoords[3];\npgrid_coords[4] = pgrid_exact_coords[4];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_0_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_0_self_src[__state->__rdistrarray_0_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_0_self_dst[__state->__rdistrarray_0_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_self_size[__state->__rdistrarray_0_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_0_self_copies++;\n                // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_0_fix_recv_dst[__state->__rdistrarray_0_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_fix_recv_size[__state->__rdistrarray_0_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_0_recv_buffers[__state->__rdistrarray_0_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_0_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_0_recv_buffers[__state->__rdistrarray_0_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_0_recv_types[__state->__rdistrarray_0_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_0_recv_types[__state->__rdistrarray_0_recvs]);\n                    __state->__rdistrarray_0_src_ranks[__state->__rdistrarray_0_recvs] = cart_rank;\n                    // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_0_src_ranks[__state->__rdistrarray_0_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_0_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_1_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_3_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {S0G1, S1G1, S2G1, S3G1, R4G1};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_1_coords[0] * int(S0G1)) / int(S0G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_4_dims[0], int_ceil((__state->__pgrid_1_coords[0] + 1) * int(S0G1), int(S0G2)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 0;\n\n                    xi[0] = (idx0 * int(S0G2)) / int(S0G1);\n                    lambda[0] = idx0 * int(S0G2) % int(S0G1);\n                    kappa[0] = int_ceil(int(S0G2) + lambda[0], int(S0G1));\n                    int idx0_dst = __state->__pgrid_1_coords[0] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(S0G2) + lambda[0] - idx0_dst * int(S0G1) : int(S0G1));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_1_coords[1] * int(S1G1)) / int(S1G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_4_dims[1], int_ceil((__state->__pgrid_1_coords[1] + 1) * int(S1G1), int(S1G2)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 1;\n\n                    xi[1] = (idx1 * int(S1G2)) / int(S1G1);\n                    lambda[1] = idx1 * int(S1G2) % int(S1G1);\n                    kappa[1] = int_ceil(int(S1G2) + lambda[1], int(S1G1));\n                    int idx1_dst = __state->__pgrid_1_coords[1] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(S1G2) + lambda[1] - idx1_dst * int(S1G1) : int(S1G1));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_1_coords[2] * int(S2G1)) / int(S2G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_4_dims[2], int_ceil((__state->__pgrid_1_coords[2] + 1) * int(S2G1), int(S2G2)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 2;\n\n                    xi[2] = (idx2 * int(S2G2)) / int(S2G1);\n                    lambda[2] = idx2 * int(S2G2) % int(S2G1);\n                    kappa[2] = int_ceil(int(S2G2) + lambda[2], int(S2G1));\n                    int idx2_dst = __state->__pgrid_1_coords[2] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S2G2) + lambda[2] - idx2_dst * int(S2G1) : int(S2G1));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_1_coords[3] * int(S3G1)) / int(S3G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_4_dims[3], int_ceil((__state->__pgrid_1_coords[3] + 1) * int(S3G1), int(S3G2)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 3;\n\n                    xi[3] = (idx3 * int(S3G2)) / int(S3G1);\n                    lambda[3] = idx3 * int(S3G2) % int(S3G1);\n                    kappa[3] = int_ceil(int(S3G2) + lambda[3], int(S3G1));\n                    int idx3_dst = __state->__pgrid_1_coords[3] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S3G2) + lambda[3] - idx3_dst * int(S3G1) : int(S3G1));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_1_coords[4] * int(R4G1)) / int(R4G2)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_4_dims[4], int_ceil((__state->__pgrid_1_coords[4] + 1) * int(R4G1), int(R4G2)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 4;\n\n                    xi[4] = (idx4 * int(R4G2)) / int(R4G1);\n                    lambda[4] = idx4 * int(R4G2) % int(R4G1);\n                    kappa[4] = int_ceil(int(R4G2) + lambda[4], int(R4G1));\n                    int idx4_dst = __state->__pgrid_1_coords[4] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R4G2) + lambda[4] - idx4_dst * int(R4G1) : int(R4G1));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pcoords[3];\npgrid_coords[4] = pgrid_exact_coords[4];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_3_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_0_fix_send_src[__state->__rdistrarray_0_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_0_fix_send_size[__state->__rdistrarray_0_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_0_send_buffers[__state->__rdistrarray_0_sends] = new double[__state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends]];\n                    //if (__state->__rdistrarray_0_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_0_send_buffers[__state->__rdistrarray_0_sends]), __state->__rdistrarray_0_send_sizes[__state->__rdistrarray_0_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_0_send_types[__state->__rdistrarray_0_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_0_send_types[__state->__rdistrarray_0_sends]);\n                    __state->__rdistrarray_0_dst_ranks[__state->__rdistrarray_0_sends] = cart_rank;\n                    // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_0_dst_ranks[__state->__rdistrarray_0_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_0_sends++;\n                }\n            }}}}}}}{\n            __state->__rdistrarray_1_sends = 0;\n            __state->__rdistrarray_1_recvs = 0;\n            __state->__rdistrarray_1_self_copies = 0;\n            __state->__rdistrarray_1_total_send_size = 0;\n            __state->__rdistrarray_1_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(R4G2) + int(R4G3) - 1, int(R4G3));\n                max_recvs *= int_ceil(int(R4G3) - 1, int(R4G2)) + 1;\n            \n                max_sends *= int_ceil(int(S0G2) + int(S0G3) - 1, int(S0G3));\n                max_recvs *= int_ceil(int(S0G3) - 1, int(S0G2)) + 1;\n            \n                max_sends *= int_ceil(int(S1G2) + int(S1G3) - 1, int(S1G3));\n                max_recvs *= int_ceil(int(S1G3) - 1, int(S1G2)) + 1;\n            \n                max_sends *= int_ceil(int(S2G2) + int(S2G3) - 1, int(S2G3));\n                max_recvs *= int_ceil(int(S2G3) - 1, int(S2G2)) + 1;\n            \n                max_sends *= int_ceil(int(R3G2) + int(R3G3) - 1, int(R3G3));\n                max_recvs *= int_ceil(int(R3G3) - 1, int(R3G2)) + 1;\n            \n            __state->__rdistrarray_1_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_1_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_1_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_1_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_1_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_1_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_1_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_1_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_1_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_1_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_1_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_1_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_1_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_1_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_1_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_1_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_1_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_1_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_9_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_3_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R4G3, S0G3, S1G3, S2G3, R3G3};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_9_coords[4] * int(R4G3)) / int(R4G2);\n                lambda[0] = __state->__pgrid_9_coords[4] * int(R4G3) % int(R4G2);\n                kappa[0] = int_ceil(int(R4G3) + lambda[0], int(R4G2));\n            \n                xi[1] = (__state->__pgrid_9_coords[0] * int(S0G3)) / int(S0G2);\n                lambda[1] = __state->__pgrid_9_coords[0] * int(S0G3) % int(S0G2);\n                kappa[1] = int_ceil(int(S0G3) + lambda[1], int(S0G2));\n            \n                xi[2] = (__state->__pgrid_9_coords[1] * int(S1G3)) / int(S1G2);\n                lambda[2] = __state->__pgrid_9_coords[1] * int(S1G3) % int(S1G2);\n                kappa[2] = int_ceil(int(S1G3) + lambda[2], int(S1G2));\n            \n                xi[3] = (__state->__pgrid_9_coords[2] * int(S2G3)) / int(S2G2);\n                lambda[3] = __state->__pgrid_9_coords[2] * int(S2G3) % int(S2G2);\n                kappa[3] = int_ceil(int(S2G3) + lambda[3], int(S2G2));\n            \n                xi[4] = (__state->__pgrid_9_coords[3] * int(R3G3)) / int(R3G2);\n                lambda[4] = __state->__pgrid_9_coords[3] * int(R3G3) % int(R3G2);\n                kappa[4] = int_ceil(int(R3G3) + lambda[4], int(R3G2));\n            \n                int rem0 = R4G3;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 4;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(R4G2), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = R4G3 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = S0G3;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 0;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(S0G2), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = S0G3 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S1G3;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 1;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S1G2), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S1G3 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S2G3;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 2;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S2G2), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S2G3 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R3G3;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 3;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R3G2), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R3G3 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pgrid_exact_coords[3];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_3_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_1_self_src[__state->__rdistrarray_1_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_1_self_dst[__state->__rdistrarray_1_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_self_size[__state->__rdistrarray_1_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_1_self_copies++;\n                // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_1_fix_recv_dst[__state->__rdistrarray_1_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_fix_recv_size[__state->__rdistrarray_1_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_1_recv_buffers[__state->__rdistrarray_1_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_1_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_1_recv_buffers[__state->__rdistrarray_1_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_1_recv_types[__state->__rdistrarray_1_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_1_recv_types[__state->__rdistrarray_1_recvs]);\n                    __state->__rdistrarray_1_src_ranks[__state->__rdistrarray_1_recvs] = cart_rank;\n                    // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_1_src_ranks[__state->__rdistrarray_1_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_1_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_6_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_8_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R4G2, S0G2, S1G2, S2G2, R3G2};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_6_coords[4] * int(R4G2)) / int(R4G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_9_dims[4], int_ceil((__state->__pgrid_6_coords[4] + 1) * int(R4G2), int(R4G3)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 4;\n\n                    xi[0] = (idx0 * int(R4G3)) / int(R4G2);\n                    lambda[0] = idx0 * int(R4G3) % int(R4G2);\n                    kappa[0] = int_ceil(int(R4G3) + lambda[0], int(R4G2));\n                    int idx0_dst = __state->__pgrid_6_coords[4] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(R4G3) + lambda[0] - idx0_dst * int(R4G2) : int(R4G2));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_6_coords[0] * int(S0G2)) / int(S0G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_9_dims[0], int_ceil((__state->__pgrid_6_coords[0] + 1) * int(S0G2), int(S0G3)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 0;\n\n                    xi[1] = (idx1 * int(S0G3)) / int(S0G2);\n                    lambda[1] = idx1 * int(S0G3) % int(S0G2);\n                    kappa[1] = int_ceil(int(S0G3) + lambda[1], int(S0G2));\n                    int idx1_dst = __state->__pgrid_6_coords[0] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(S0G3) + lambda[1] - idx1_dst * int(S0G2) : int(S0G2));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_6_coords[1] * int(S1G2)) / int(S1G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_9_dims[1], int_ceil((__state->__pgrid_6_coords[1] + 1) * int(S1G2), int(S1G3)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 1;\n\n                    xi[2] = (idx2 * int(S1G3)) / int(S1G2);\n                    lambda[2] = idx2 * int(S1G3) % int(S1G2);\n                    kappa[2] = int_ceil(int(S1G3) + lambda[2], int(S1G2));\n                    int idx2_dst = __state->__pgrid_6_coords[1] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S1G3) + lambda[2] - idx2_dst * int(S1G2) : int(S1G2));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_6_coords[2] * int(S2G2)) / int(S2G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_9_dims[2], int_ceil((__state->__pgrid_6_coords[2] + 1) * int(S2G2), int(S2G3)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 2;\n\n                    xi[3] = (idx3 * int(S2G3)) / int(S2G2);\n                    lambda[3] = idx3 * int(S2G3) % int(S2G2);\n                    kappa[3] = int_ceil(int(S2G3) + lambda[3], int(S2G2));\n                    int idx3_dst = __state->__pgrid_6_coords[2] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S2G3) + lambda[3] - idx3_dst * int(S2G2) : int(S2G2));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_6_coords[3] * int(R3G2)) / int(R3G3)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_9_dims[3], int_ceil((__state->__pgrid_6_coords[3] + 1) * int(R3G2), int(R3G3)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 3;\n\n                    xi[4] = (idx4 * int(R3G3)) / int(R3G2);\n                    lambda[4] = idx4 * int(R3G3) % int(R3G2);\n                    kappa[4] = int_ceil(int(R3G3) + lambda[4], int(R3G2));\n                    int idx4_dst = __state->__pgrid_6_coords[3] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R3G3) + lambda[4] - idx4_dst * int(R3G2) : int(R3G2));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pcoords[2];\npgrid_coords[3] = pgrid_exact_coords[3];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_8_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_1_fix_send_src[__state->__rdistrarray_1_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_1_fix_send_size[__state->__rdistrarray_1_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_1_send_buffers[__state->__rdistrarray_1_sends] = new double[__state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends]];\n                    //if (__state->__rdistrarray_1_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_1_send_buffers[__state->__rdistrarray_1_sends]), __state->__rdistrarray_1_send_sizes[__state->__rdistrarray_1_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_1_send_types[__state->__rdistrarray_1_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_1_send_types[__state->__rdistrarray_1_sends]);\n                    __state->__rdistrarray_1_dst_ranks[__state->__rdistrarray_1_sends] = cart_rank;\n                    // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_1_dst_ranks[__state->__rdistrarray_1_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_1_sends++;\n                }\n            }}}}}}}{\n            __state->__rdistrarray_2_sends = 0;\n            __state->__rdistrarray_2_recvs = 0;\n            __state->__rdistrarray_2_self_copies = 0;\n            __state->__rdistrarray_2_total_send_size = 0;\n            __state->__rdistrarray_2_total_copy_size = 0;\n            int max_sends = 1;\n            int max_recvs = 1;\n\n            int kappa[5];\n            int lambda[5];\n            int xi[5];\n            int pcoords[5];\n\n            int myrank;\n            MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n        \n                max_sends *= int_ceil(int(R3G3) + int(R3G4) - 1, int(R3G4));\n                max_recvs *= int_ceil(int(R3G4) - 1, int(R3G3)) + 1;\n            \n                max_sends *= int_ceil(int(R4G3) + int(R4G4) - 1, int(R4G4));\n                max_recvs *= int_ceil(int(R4G4) - 1, int(R4G3)) + 1;\n            \n                max_sends *= int_ceil(int(S0G3) + int(S0G4) - 1, int(S0G4));\n                max_recvs *= int_ceil(int(S0G4) - 1, int(S0G3)) + 1;\n            \n                max_sends *= int_ceil(int(S1G3) + int(S1G4) - 1, int(S1G4));\n                max_recvs *= int_ceil(int(S1G4) - 1, int(S1G3)) + 1;\n            \n                max_sends *= int_ceil(int(R2G3) + int(R2G4) - 1, int(R2G4));\n                max_recvs *= int_ceil(int(R2G4) - 1, int(R2G3)) + 1;\n            \n            __state->__rdistrarray_2_send_types = new MPI_Datatype[max_sends];\n            __state->__rdistrarray_2_dst_ranks = new int[max_sends];\n            __state->__rdistrarray_2_recv_types = new MPI_Datatype[max_recvs];\n            __state->__rdistrarray_2_src_ranks = new int[max_recvs];\n            __state->__rdistrarray_2_self_src = new int[max_sends * 5];\n            __state->__rdistrarray_2_self_dst = new int[max_sends * 5];\n            __state->__rdistrarray_2_self_size = new int[max_sends * 5];\n            __state->__rdistrarray_2_send_sizes = new long long int[max_sends];\n            __state->__rdistrarray_2_send_req = new MPI_Request[max_sends];\n            __state->__rdistrarray_2_recv_req = new MPI_Request[max_recvs];\n            __state->__rdistrarray_2_send_status = new MPI_Status[max_sends];\n            __state->__rdistrarray_2_recv_status = new MPI_Status[max_recvs];\n            __state->__rdistrarray_2_fix_send_src = new int[max_sends * 5];\n            __state->__rdistrarray_2_fix_send_size = new int[max_sends * 5];\n            __state->__rdistrarray_2_send_buffers = new double*[max_sends];\n            __state->__rdistrarray_2_fix_recv_dst = new int[max_recvs * 5];\n            __state->__rdistrarray_2_fix_recv_size = new int[max_recvs * 5];\n            __state->__rdistrarray_2_recv_buffers = new double*[max_recvs];\n        \n            if (__state->__pgrid_14_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_8_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R3G4, R4G4, S0G4, S1G4, R2G4};\n            int subsizes[5];\n            int origin[5];\n        \n                xi[0] = (__state->__pgrid_14_coords[3] * int(R3G4)) / int(R3G3);\n                lambda[0] = __state->__pgrid_14_coords[3] * int(R3G4) % int(R3G3);\n                kappa[0] = int_ceil(int(R3G4) + lambda[0], int(R3G3));\n            \n                xi[1] = (__state->__pgrid_14_coords[4] * int(R4G4)) / int(R4G3);\n                lambda[1] = __state->__pgrid_14_coords[4] * int(R4G4) % int(R4G3);\n                kappa[1] = int_ceil(int(R4G4) + lambda[1], int(R4G3));\n            \n                xi[2] = (__state->__pgrid_14_coords[0] * int(S0G4)) / int(S0G3);\n                lambda[2] = __state->__pgrid_14_coords[0] * int(S0G4) % int(S0G3);\n                kappa[2] = int_ceil(int(S0G4) + lambda[2], int(S0G3));\n            \n                xi[3] = (__state->__pgrid_14_coords[1] * int(S1G4)) / int(S1G3);\n                lambda[3] = __state->__pgrid_14_coords[1] * int(S1G4) % int(S1G3);\n                kappa[3] = int_ceil(int(S1G4) + lambda[3], int(S1G3));\n            \n                xi[4] = (__state->__pgrid_14_coords[2] * int(R2G4)) / int(R2G3);\n                lambda[4] = __state->__pgrid_14_coords[2] * int(R2G4) % int(R2G3);\n                kappa[4] = int_ceil(int(R2G4) + lambda[4], int(R2G3));\n            \n                int rem0 = R3G4;\n                for (auto idx0 = 0; idx0 < kappa[0]; ++idx0) {\n                    int actual_idx0 = 3;\n                    pcoords[actual_idx0] = xi[0] + idx0;\n                    int lo0 = (idx0 == 0 ? lambda[0] : 0);\n                    int uo0 = std::min(int(R3G3), lo0 + rem0);\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = R3G4 - rem0;\n                    rem0 -= uo0 - lo0;\n            \n                int rem1 = R4G4;\n                for (auto idx1 = 0; idx1 < kappa[1]; ++idx1) {\n                    int actual_idx1 = 4;\n                    pcoords[actual_idx1] = xi[1] + idx1;\n                    int lo1 = (idx1 == 0 ? lambda[1] : 0);\n                    int uo1 = std::min(int(R4G3), lo1 + rem1);\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = R4G4 - rem1;\n                    rem1 -= uo1 - lo1;\n            \n                int rem2 = S0G4;\n                for (auto idx2 = 0; idx2 < kappa[2]; ++idx2) {\n                    int actual_idx2 = 0;\n                    pcoords[actual_idx2] = xi[2] + idx2;\n                    int lo2 = (idx2 == 0 ? lambda[2] : 0);\n                    int uo2 = std::min(int(S0G3), lo2 + rem2);\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = S0G4 - rem2;\n                    rem2 -= uo2 - lo2;\n            \n                int rem3 = S1G4;\n                for (auto idx3 = 0; idx3 < kappa[3]; ++idx3) {\n                    int actual_idx3 = 1;\n                    pcoords[actual_idx3] = xi[3] + idx3;\n                    int lo3 = (idx3 == 0 ? lambda[3] : 0);\n                    int uo3 = std::min(int(S1G3), lo3 + rem3);\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = S1G4 - rem3;\n                    rem3 -= uo3 - lo3;\n            \n                int rem4 = R2G4;\n                for (auto idx4 = 0; idx4 < kappa[4]; ++idx4) {\n                    int actual_idx4 = 2;\n                    pcoords[actual_idx4] = xi[4] + idx4;\n                    int lo4 = (idx4 == 0 ? lambda[4] : 0);\n                    int uo4 = std::min(int(R2G3), lo4 + rem4);\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = R2G4 - rem4;\n                    rem4 -= uo4 - lo4;\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pgrid_exact_coords[2];\npgrid_coords[3] = pcoords[2];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_8_dims, pgrid_coords);\nif (myrank == cart_rank) { // self-copy\n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 0] = lo0;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 1] = lo1;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 2] = lo2;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 3] = lo3;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_2_self_src[__state->__rdistrarray_2_self_copies * 5 + 4] = lo4;\n                __state->__rdistrarray_2_self_dst[__state->__rdistrarray_2_self_copies * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_self_size[__state->__rdistrarray_2_self_copies * 5 + 4] = subsizes[4];\n            \n                __state->__rdistrarray_2_self_copies++;\n                // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I self-copy {I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d)} \\n\", myrank, pcoords[0], pcoords[1], cart_rank, cart_rank, origin[0], origin[1], subsizes[0], subsizes[1]);\n            } else {\n                int total_size = 1;\n        \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 0] = subsizes[0];\n                total_size *= subsizes[0];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 1] = subsizes[1];\n                total_size *= subsizes[1];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 2] = subsizes[2];\n                total_size *= subsizes[2];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 3] = subsizes[3];\n                total_size *= subsizes[3];\n            \n                __state->__rdistrarray_2_fix_recv_dst[__state->__rdistrarray_2_recvs * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_fix_recv_size[__state->__rdistrarray_2_recvs * 5 + 4] = subsizes[4];\n                total_size *= subsizes[4];\n            \n\n                    __state->__rdistrarray_2_recv_buffers[__state->__rdistrarray_2_recvs] = new double[total_size];\n                    //if (__state->__rdistrarray_2_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_2_recv_buffers[__state->__rdistrarray_2_recvs]), total_size * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_2_recv_types[__state->__rdistrarray_2_recvs]);\n                    MPI_Type_commit(&__state->__rdistrarray_2_recv_types[__state->__rdistrarray_2_recvs]);\n                    __state->__rdistrarray_2_src_ranks[__state->__rdistrarray_2_recvs] = cart_rank;\n                    // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I receive from %d%d (%d - %d) in (%d, %d) size (%d, %d) \\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_2_src_ranks[__state->__rdistrarray_2_recvs], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_2_recvs++;\n                }\n            }}}}}}\n            if (__state->__pgrid_11_valid) {\n        \n                int pgrid_exact_coords[6];\n                dace::comm::cart_coords(0, 6, __state->__pgrid_13_dims, pgrid_exact_coords);\n                int pgrid_coords[6];\n            \n            int sizes[5] = {R3G3, R4G3, S0G3, S1G3, R2G3};\n            int subsizes[5];\n            int origin[5];\n        \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp0 = std::max(0, (__state->__pgrid_11_coords[3] * int(R3G3)) / int(R3G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up0 = std::min(__state->__pgrid_14_dims[3], int_ceil((__state->__pgrid_11_coords[3] + 1) * int(R3G3), int(R3G4)));\n                // printf(\"I am rank %d and I have 0-th bounds [%d, %d)\\n\", myrank, lp0, up0);\n                for (auto idx0 = lp0; idx0 < up0; ++idx0) {\n                    int actual_idx0 = 3;\n\n                    xi[0] = (idx0 * int(R3G4)) / int(R3G3);\n                    lambda[0] = idx0 * int(R3G4) % int(R3G3);\n                    kappa[0] = int_ceil(int(R3G4) + lambda[0], int(R3G3));\n                    int idx0_dst = __state->__pgrid_11_coords[3] - xi[0];\n\n                    if (idx0_dst < 0 || idx0_dst >= kappa[0]) continue;\n                    int lo0 = (idx0_dst == 0 ? lambda[0] : 0);\n                    int uo0 = (idx0_dst == kappa[0] - 1 ? int(R3G4) + lambda[0] - idx0_dst * int(R3G3) : int(R3G3));\n                    subsizes[0] = uo0 - lo0;\n                    origin[0] = lo0;\n                    pcoords[actual_idx0] = idx0;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp1 = std::max(0, (__state->__pgrid_11_coords[4] * int(R4G3)) / int(R4G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up1 = std::min(__state->__pgrid_14_dims[4], int_ceil((__state->__pgrid_11_coords[4] + 1) * int(R4G3), int(R4G4)));\n                // printf(\"I am rank %d and I have 1-th bounds [%d, %d)\\n\", myrank, lp1, up1);\n                for (auto idx1 = lp1; idx1 < up1; ++idx1) {\n                    int actual_idx1 = 4;\n\n                    xi[1] = (idx1 * int(R4G4)) / int(R4G3);\n                    lambda[1] = idx1 * int(R4G4) % int(R4G3);\n                    kappa[1] = int_ceil(int(R4G4) + lambda[1], int(R4G3));\n                    int idx1_dst = __state->__pgrid_11_coords[4] - xi[1];\n\n                    if (idx1_dst < 0 || idx1_dst >= kappa[1]) continue;\n                    int lo1 = (idx1_dst == 0 ? lambda[1] : 0);\n                    int uo1 = (idx1_dst == kappa[1] - 1 ? int(R4G4) + lambda[1] - idx1_dst * int(R4G3) : int(R4G3));\n                    subsizes[1] = uo1 - lo1;\n                    origin[1] = lo1;\n                    pcoords[actual_idx1] = idx1;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp2 = std::max(0, (__state->__pgrid_11_coords[0] * int(S0G3)) / int(S0G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up2 = std::min(__state->__pgrid_14_dims[0], int_ceil((__state->__pgrid_11_coords[0] + 1) * int(S0G3), int(S0G4)));\n                // printf(\"I am rank %d and I have 2-th bounds [%d, %d)\\n\", myrank, lp2, up2);\n                for (auto idx2 = lp2; idx2 < up2; ++idx2) {\n                    int actual_idx2 = 0;\n\n                    xi[2] = (idx2 * int(S0G4)) / int(S0G3);\n                    lambda[2] = idx2 * int(S0G4) % int(S0G3);\n                    kappa[2] = int_ceil(int(S0G4) + lambda[2], int(S0G3));\n                    int idx2_dst = __state->__pgrid_11_coords[0] - xi[2];\n\n                    if (idx2_dst < 0 || idx2_dst >= kappa[2]) continue;\n                    int lo2 = (idx2_dst == 0 ? lambda[2] : 0);\n                    int uo2 = (idx2_dst == kappa[2] - 1 ? int(S0G4) + lambda[2] - idx2_dst * int(S0G3) : int(S0G3));\n                    subsizes[2] = uo2 - lo2;\n                    origin[2] = lo2;\n                    pcoords[actual_idx2] = idx2;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp3 = std::max(0, (__state->__pgrid_11_coords[1] * int(S1G3)) / int(S1G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up3 = std::min(__state->__pgrid_14_dims[1], int_ceil((__state->__pgrid_11_coords[1] + 1) * int(S1G3), int(S1G4)));\n                // printf(\"I am rank %d and I have 3-th bounds [%d, %d)\\n\", myrank, lp3, up3);\n                for (auto idx3 = lp3; idx3 < up3; ++idx3) {\n                    int actual_idx3 = 1;\n\n                    xi[3] = (idx3 * int(S1G4)) / int(S1G3);\n                    lambda[3] = idx3 * int(S1G4) % int(S1G3);\n                    kappa[3] = int_ceil(int(S1G4) + lambda[3], int(S1G3));\n                    int idx3_dst = __state->__pgrid_11_coords[1] - xi[3];\n\n                    if (idx3_dst < 0 || idx3_dst >= kappa[3]) continue;\n                    int lo3 = (idx3_dst == 0 ? lambda[3] : 0);\n                    int uo3 = (idx3_dst == kappa[3] - 1 ? int(S1G4) + lambda[3] - idx3_dst * int(S1G3) : int(S1G3));\n                    subsizes[3] = uo3 - lo3;\n                    origin[3] = lo3;\n                    pcoords[actual_idx3] = idx3;\n\n            \n                // int_ceil(x, y) := (x + y - 1) / y\n                // int_ceil(pcoord * sa - sb + 1, sb) = (pcoord * sa) / sb\n                int lp4 = std::max(0, (__state->__pgrid_11_coords[2] * int(R2G3)) / int(R2G4)); // int_ceil(x, y) := (x + y - 1) / y\n                int up4 = std::min(__state->__pgrid_14_dims[2], int_ceil((__state->__pgrid_11_coords[2] + 1) * int(R2G3), int(R2G4)));\n                // printf(\"I am rank %d and I have 4-th bounds [%d, %d)\\n\", myrank, lp4, up4);\n                for (auto idx4 = lp4; idx4 < up4; ++idx4) {\n                    int actual_idx4 = 2;\n\n                    xi[4] = (idx4 * int(R2G4)) / int(R2G3);\n                    lambda[4] = idx4 * int(R2G4) % int(R2G3);\n                    kappa[4] = int_ceil(int(R2G4) + lambda[4], int(R2G3));\n                    int idx4_dst = __state->__pgrid_11_coords[2] - xi[4];\n\n                    if (idx4_dst < 0 || idx4_dst >= kappa[4]) continue;\n                    int lo4 = (idx4_dst == 0 ? lambda[4] : 0);\n                    int uo4 = (idx4_dst == kappa[4] - 1 ? int(R2G4) + lambda[4] - idx4_dst * int(R2G3) : int(R2G3));\n                    subsizes[4] = uo4 - lo4;\n                    origin[4] = lo4;\n                    pcoords[actual_idx4] = idx4;\n\n            pgrid_coords[0] = pcoords[0];\npgrid_coords[1] = pcoords[1];\npgrid_coords[2] = pgrid_exact_coords[2];\npgrid_coords[3] = pcoords[2];\npgrid_coords[4] = pcoords[3];\npgrid_coords[5] = pcoords[4];\nint cart_rank = dace::comm::cart_rank(6, __state->__pgrid_13_dims, pgrid_coords);\n\n            if (myrank != cart_rank) { // not self-copy\n        \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 0] = origin[0];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 0] = subsizes[0];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 1] = origin[1];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 1] = subsizes[1];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 2] = origin[2];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 2] = subsizes[2];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 3] = origin[3];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 3] = subsizes[3];\n            \n                __state->__rdistrarray_2_fix_send_src[__state->__rdistrarray_2_sends * 5 + 4] = origin[4];\n                __state->__rdistrarray_2_fix_send_size[__state->__rdistrarray_2_sends * 5 + 4] = subsizes[4];\n            \n\n                    __state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends] = std::accumulate(subsizes, subsizes + 5, 1, std::multiplies<long long int>());\n                    \n                    \n                    __state->__rdistrarray_2_send_buffers[__state->__rdistrarray_2_sends] = new double[__state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends]];\n                    //if (__state->__rdistrarray_2_send_buffers == __state->__rdistrarray_0_send_buffers)\n                    //cudaMalloc((void**)&(__state->__rdistrarray_2_send_buffers[__state->__rdistrarray_2_sends]), __state->__rdistrarray_2_send_sizes[__state->__rdistrarray_2_sends] * sizeof(double));\n\n                    MPI_Type_create_subarray(5,  sizes, subsizes, origin, MPI_ORDER_C, MPI_DOUBLE, &__state->__rdistrarray_2_send_types[__state->__rdistrarray_2_sends]);\n                    MPI_Type_commit(&__state->__rdistrarray_2_send_types[__state->__rdistrarray_2_sends]);\n                    __state->__rdistrarray_2_dst_ranks[__state->__rdistrarray_2_sends] = cart_rank;\n                    // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I send to %d%d (%d - %d) from (%d, %d) size (%d, %d)\\n\", myrank, pcoords[0], pcoords[1], cart_rank, __state->__rdistrarray_2_dst_ranks[__state->__rdistrarray_2_sends], origin[0], origin[1], subsizes[0], subsizes[1]);\n                    __state->__rdistrarray_2_sends++;\n                }\n            }}}}}}}",
            "language": "CPP"
          }
        },
        "exit_code": {
          "frame": {
            "string_data": "\n            if (__state->__pgrid_0_valid) {\n                MPI_Group_free(&__state->__pgrid_0_group);\n                MPI_Comm_free(&__state->__pgrid_0_comm);\n            }\n        \n            if (__state->__pgrid_1_valid) {\n                MPI_Group_free(&__state->__pgrid_1_group);\n                MPI_Comm_free(&__state->__pgrid_1_comm);\n            }\n        \n            if (__state->__pgrid_2_valid) {\n                MPI_Group_free(&__state->__pgrid_2_group);\n                MPI_Comm_free(&__state->__pgrid_2_comm);\n            }\n        \n                if (__state->__pgrid_1_valid) {\n                    delete[] __state->__subarray_0_counts;\n                    delete[] __state->__subarray_0_displs;\n                    MPI_Type_free(&__state->__subarray_0);\n                }\n            \n            if (__state->__pgrid_3_valid) {\n                MPI_Group_free(&__state->__pgrid_3_group);\n                MPI_Comm_free(&__state->__pgrid_3_comm);\n            }\n        \n            if (__state->__pgrid_4_valid) {\n                MPI_Group_free(&__state->__pgrid_4_group);\n                MPI_Comm_free(&__state->__pgrid_4_comm);\n            }\n        \n            if (__state->__pgrid_5_valid) {\n                MPI_Group_free(&__state->__pgrid_5_group);\n                MPI_Comm_free(&__state->__pgrid_5_comm);\n            }\n        \n                if (__state->__pgrid_4_valid) {\n                    delete[] __state->__subarray_1_counts;\n                    delete[] __state->__subarray_1_displs;\n                    MPI_Type_free(&__state->__subarray_1);\n                }\n            \n            if (__state->__pgrid_6_valid) {\n                MPI_Group_free(&__state->__pgrid_6_group);\n                MPI_Comm_free(&__state->__pgrid_6_comm);\n            }\n        \n            if (__state->__pgrid_7_valid) {\n                MPI_Group_free(&__state->__pgrid_7_group);\n                MPI_Comm_free(&__state->__pgrid_7_comm);\n            }\n        \n                if (__state->__pgrid_6_valid) {\n                    delete[] __state->__subarray_2_counts;\n                    delete[] __state->__subarray_2_displs;\n                    MPI_Type_free(&__state->__subarray_2);\n                }\n            \n            if (__state->__pgrid_8_valid) {\n                MPI_Group_free(&__state->__pgrid_8_group);\n                MPI_Comm_free(&__state->__pgrid_8_comm);\n            }\n        \n            if (__state->__pgrid_9_valid) {\n                MPI_Group_free(&__state->__pgrid_9_group);\n                MPI_Comm_free(&__state->__pgrid_9_comm);\n            }\n        \n            if (__state->__pgrid_10_valid) {\n                MPI_Group_free(&__state->__pgrid_10_group);\n                MPI_Comm_free(&__state->__pgrid_10_comm);\n            }\n        \n                if (__state->__pgrid_9_valid) {\n                    delete[] __state->__subarray_3_counts;\n                    delete[] __state->__subarray_3_displs;\n                    MPI_Type_free(&__state->__subarray_3);\n                }\n            \n            if (__state->__pgrid_11_valid) {\n                MPI_Group_free(&__state->__pgrid_11_group);\n                MPI_Comm_free(&__state->__pgrid_11_comm);\n            }\n        \n            if (__state->__pgrid_12_valid) {\n                MPI_Group_free(&__state->__pgrid_12_group);\n                MPI_Comm_free(&__state->__pgrid_12_comm);\n            }\n        \n                if (__state->__pgrid_11_valid) {\n                    delete[] __state->__subarray_4_counts;\n                    delete[] __state->__subarray_4_displs;\n                    MPI_Type_free(&__state->__subarray_4);\n                }\n            \n            if (__state->__pgrid_13_valid) {\n                MPI_Group_free(&__state->__pgrid_13_group);\n                MPI_Comm_free(&__state->__pgrid_13_comm);\n            }\n        \n            if (__state->__pgrid_14_valid) {\n                MPI_Group_free(&__state->__pgrid_14_group);\n                MPI_Comm_free(&__state->__pgrid_14_comm);\n            }\n        \n            if (__state->__pgrid_15_valid) {\n                MPI_Group_free(&__state->__pgrid_15_group);\n                MPI_Comm_free(&__state->__pgrid_15_comm);\n            }\n        \n                if (__state->__pgrid_14_valid) {\n                    delete[] __state->__subarray_5_counts;\n                    delete[] __state->__subarray_5_displs;\n                    MPI_Type_free(&__state->__subarray_5);\n                }\n            \n            if (__state->__pgrid_16_valid) {\n                MPI_Group_free(&__state->__pgrid_16_group);\n                MPI_Comm_free(&__state->__pgrid_16_comm);\n            }\n        \n            if (__state->__pgrid_17_valid) {\n                MPI_Group_free(&__state->__pgrid_17_group);\n                MPI_Comm_free(&__state->__pgrid_17_comm);\n            }\n        \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_0_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_0_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_1_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_0_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_0_send_types;\n                delete[] __state->__rdistrarray_0_dst_ranks;\n                delete[] __state->__rdistrarray_0_recv_types;\n                delete[] __state->__rdistrarray_0_src_ranks;\n                delete[] __state->__rdistrarray_0_self_src;\n                delete[] __state->__rdistrarray_0_self_dst;\n                delete[] __state->__rdistrarray_0_self_size;\n                delete[] __state->__rdistrarray_0_send_sizes;\n                delete[] __state->__rdistrarray_0_send_req;\n                delete[] __state->__rdistrarray_0_recv_req;\n                delete[] __state->__rdistrarray_0_send_status;\n                delete[] __state->__rdistrarray_0_recv_status;\n                delete[] __state->__rdistrarray_0_fix_send_src;\n                delete[] __state->__rdistrarray_0_fix_send_size;\n                delete[] __state->__rdistrarray_0_fix_recv_dst;\n                delete[] __state->__rdistrarray_0_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_0_send_buffers[__idx];\n                        //if (__state->__rdistrarray_0_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_0_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_0_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_0_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_0_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_0_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_0_recv_buffers;\n            \n                }\n            \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_1_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_1_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_6_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_1_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_1_send_types;\n                delete[] __state->__rdistrarray_1_dst_ranks;\n                delete[] __state->__rdistrarray_1_recv_types;\n                delete[] __state->__rdistrarray_1_src_ranks;\n                delete[] __state->__rdistrarray_1_self_src;\n                delete[] __state->__rdistrarray_1_self_dst;\n                delete[] __state->__rdistrarray_1_self_size;\n                delete[] __state->__rdistrarray_1_send_sizes;\n                delete[] __state->__rdistrarray_1_send_req;\n                delete[] __state->__rdistrarray_1_recv_req;\n                delete[] __state->__rdistrarray_1_send_status;\n                delete[] __state->__rdistrarray_1_recv_status;\n                delete[] __state->__rdistrarray_1_fix_send_src;\n                delete[] __state->__rdistrarray_1_fix_send_size;\n                delete[] __state->__rdistrarray_1_fix_recv_dst;\n                delete[] __state->__rdistrarray_1_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_1_send_buffers[__idx];\n                        //if (__state->__rdistrarray_1_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_1_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_1_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_1_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_1_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_1_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_1_recv_buffers;\n            \n                }\n            \n            {\n                int myrank;\n                MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                if (myrank == 0) printf(\"Rank %d total send %f GB\\nRank %d total copy %f GB\\n\", myrank, __state->__rdistrarray_2_total_send_size * 8.0 / 1e9, myrank, __state->__rdistrarray_2_total_copy_size * 8.0 / 1e9);\n                if (__state->__pgrid_11_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_sends; ++__idx) {\n                        MPI_Type_free(&__state->__rdistrarray_2_send_types[__idx]);\n                    }\n                }\n                delete[] __state->__rdistrarray_2_send_types;\n                delete[] __state->__rdistrarray_2_dst_ranks;\n                delete[] __state->__rdistrarray_2_recv_types;\n                delete[] __state->__rdistrarray_2_src_ranks;\n                delete[] __state->__rdistrarray_2_self_src;\n                delete[] __state->__rdistrarray_2_self_dst;\n                delete[] __state->__rdistrarray_2_self_size;\n                delete[] __state->__rdistrarray_2_send_sizes;\n                delete[] __state->__rdistrarray_2_send_req;\n                delete[] __state->__rdistrarray_2_recv_req;\n                delete[] __state->__rdistrarray_2_send_status;\n                delete[] __state->__rdistrarray_2_recv_status;\n                delete[] __state->__rdistrarray_2_fix_send_src;\n                delete[] __state->__rdistrarray_2_fix_send_size;\n                delete[] __state->__rdistrarray_2_fix_recv_dst;\n                delete[] __state->__rdistrarray_2_fix_recv_size;\n        \n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_sends; ++__idx) {\n                        delete[] __state->__rdistrarray_2_send_buffers[__idx];\n                        //if (__state->__rdistrarray_2_send_buffers == __state->__rdistrarray_0_send_buffers)\n                        //cudaFree(__state->__rdistrarray_2_send_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_2_send_buffers;\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_recvs; ++__idx) {\n                        delete[] __state->__rdistrarray_2_recv_buffers[__idx];\n                        //if (__state->__rdistrarray_2_recv_buffers == __state->__rdistrarray_0_recv_buffers)\n                        //cudaFree(__state->__rdistrarray_2_recv_buffers[__idx]);\n                    }\n                    delete[] __state->__rdistrarray_2_recv_buffers;\n            \n                }\n            ",
            "language": "CPP"
          }
        },
        "orig_sdfg": null,
        "transformation_hist": [],
        "logical_groups": [],
        "openmp_sections": false,
        "debuginfo": {
          "type": "DebugInfo",
          "start_line": 190,
          "end_line": 261,
          "start_column": 0,
          "end_column": 0,
          "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
        },
        "_pgrids": {
          "__pgrid_0": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_0",
              "is_subgrid": false,
              "shape": [
                "P0G1",
                "P1G1",
                "P2G1",
                "P3G1",
                "P4G1",
                "PR4G1"
              ],
              "parent_grid": null,
              "color": null,
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_1": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_1",
              "is_subgrid": true,
              "shape": [
                "P0G1",
                "P1G1",
                "P2G1",
                "P3G1",
                "PR4G1"
              ],
              "parent_grid": "__pgrid_0",
              "color": [
                1,
                1,
                1,
                1,
                0,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_10": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_10",
              "is_subgrid": true,
              "shape": [
                "PR2G3"
              ],
              "parent_grid": "__pgrid_8",
              "color": [
                0,
                0,
                0,
                1,
                0,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_11": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_11",
              "is_subgrid": true,
              "shape": [
                "P0G3",
                "P1G3",
                "PR2G3",
                "PR3G3",
                "PR4G3"
              ],
              "parent_grid": "__pgrid_8",
              "color": [
                1,
                1,
                0,
                1,
                1,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_12": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_12",
              "is_subgrid": true,
              "shape": [
                "P2G3"
              ],
              "parent_grid": "__pgrid_8",
              "color": [
                0,
                0,
                1,
                0,
                0,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_13": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_13",
              "is_subgrid": false,
              "shape": [
                "P0G4",
                "P1G4",
                "PR1G4",
                "PR2G4",
                "PR3G4",
                "PR4G4"
              ],
              "parent_grid": null,
              "color": null,
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_14": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_14",
              "is_subgrid": true,
              "shape": [
                "P0G4",
                "P1G4",
                "PR2G4",
                "PR3G4",
                "PR4G4"
              ],
              "parent_grid": "__pgrid_13",
              "color": [
                1,
                1,
                0,
                1,
                1,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_15": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_15",
              "is_subgrid": true,
              "shape": [
                "PR1G4"
              ],
              "parent_grid": "__pgrid_13",
              "color": [
                0,
                0,
                1,
                0,
                0,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_16": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_16",
              "is_subgrid": true,
              "shape": [
                "P0G4",
                "PR1G4",
                "PR2G4",
                "PR3G4",
                "PR4G4"
              ],
              "parent_grid": "__pgrid_13",
              "color": [
                1,
                0,
                1,
                1,
                1,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_17": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_17",
              "is_subgrid": true,
              "shape": [
                "P1G4"
              ],
              "parent_grid": "__pgrid_13",
              "color": [
                0,
                1,
                0,
                0,
                0,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_2": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_2",
              "is_subgrid": true,
              "shape": [
                "P4G1"
              ],
              "parent_grid": "__pgrid_0",
              "color": [
                0,
                0,
                0,
                0,
                1,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_3": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_3",
              "is_subgrid": false,
              "shape": [
                "P0G2",
                "P1G2",
                "P2G2",
                "P3G2",
                "PR3G2",
                "PR4G2"
              ],
              "parent_grid": null,
              "color": null,
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_4": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_4",
              "is_subgrid": true,
              "shape": [
                "P0G2",
                "P1G2",
                "P2G2",
                "P3G2",
                "PR4G2"
              ],
              "parent_grid": "__pgrid_3",
              "color": [
                1,
                1,
                1,
                1,
                0,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_5": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_5",
              "is_subgrid": true,
              "shape": [
                "PR3G2"
              ],
              "parent_grid": "__pgrid_3",
              "color": [
                0,
                0,
                0,
                0,
                1,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_6": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_6",
              "is_subgrid": true,
              "shape": [
                "P0G2",
                "P1G2",
                "P2G2",
                "PR3G2",
                "PR4G2"
              ],
              "parent_grid": "__pgrid_3",
              "color": [
                1,
                1,
                1,
                0,
                1,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          },
          "__pgrid_7": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_7",
              "is_subgrid": true,
              "shape": [
                "P3G2"
              ],
              "parent_grid": "__pgrid_3",
              "color": [
                0,
                0,
                0,
                1,
                0,
                0
              ],
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_8": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_8",
              "is_subgrid": false,
              "shape": [
                "P0G3",
                "P1G3",
                "P2G3",
                "PR2G3",
                "PR3G3",
                "PR4G3"
              ],
              "parent_grid": null,
              "color": null,
              "exact_grid": null,
              "root": "0"
            }
          },
          "__pgrid_9": {
            "type": "ProcessGrid",
            "attributes": {
              "name": "__pgrid_9",
              "is_subgrid": true,
              "shape": [
                "P0G3",
                "P1G3",
                "P2G3",
                "PR3G3",
                "PR4G3"
              ],
              "parent_grid": "__pgrid_8",
              "color": [
                1,
                1,
                1,
                0,
                1,
                1
              ],
              "exact_grid": "0",
              "root": "0"
            }
          }
        },
        "_subarrays": {
          "__subarray_0": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_0",
              "dtype": "float64",
              "shape": [
                "S0",
                "S1",
                "S2",
                "S3",
                "R4"
              ],
              "subshape": [
                "S0G1",
                "S1G1",
                "S2G1",
                "S3G1",
                "R4G1"
              ],
              "pgrid": "__pgrid_1",
              "correspondence": [
                0,
                1,
                2,
                3,
                4
              ]
            }
          },
          "__subarray_1": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_1",
              "dtype": "float64",
              "shape": [
                "S0",
                "S1",
                "S2",
                "S3",
                "R4"
              ],
              "subshape": [
                "S0G2",
                "S1G2",
                "S2G2",
                "S3G2",
                "R4G2"
              ],
              "pgrid": "__pgrid_4",
              "correspondence": [
                0,
                1,
                2,
                3,
                4
              ]
            }
          },
          "__subarray_2": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_2",
              "dtype": "float64",
              "shape": [
                "R4",
                "S0",
                "S1",
                "S2",
                "R3"
              ],
              "subshape": [
                "R4G2",
                "S0G2",
                "S1G2",
                "S2G2",
                "R3G2"
              ],
              "pgrid": "__pgrid_6",
              "correspondence": [
                4,
                0,
                1,
                2,
                3
              ]
            }
          },
          "__subarray_3": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_3",
              "dtype": "float64",
              "shape": [
                "R4",
                "S0",
                "S1",
                "S2",
                "R3"
              ],
              "subshape": [
                "R4G3",
                "S0G3",
                "S1G3",
                "S2G3",
                "R3G3"
              ],
              "pgrid": "__pgrid_9",
              "correspondence": [
                4,
                0,
                1,
                2,
                3
              ]
            }
          },
          "__subarray_4": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_4",
              "dtype": "float64",
              "shape": [
                "R3",
                "R4",
                "S0",
                "S1",
                "R2"
              ],
              "subshape": [
                "R3G3",
                "R4G3",
                "S0G3",
                "S1G3",
                "R2G3"
              ],
              "pgrid": "__pgrid_11",
              "correspondence": [
                3,
                4,
                0,
                1,
                2
              ]
            }
          },
          "__subarray_5": {
            "type": "SubArray",
            "attributes": {
              "name": "__subarray_5",
              "dtype": "float64",
              "shape": [
                "R3",
                "R4",
                "S0",
                "S1",
                "R2"
              ],
              "subshape": [
                "R3G4",
                "R4G4",
                "S0G4",
                "S1G4",
                "R2G4"
              ],
              "pgrid": "__pgrid_14",
              "correspondence": [
                3,
                4,
                0,
                1,
                2
              ]
            }
          }
        },
        "_rdistrarrays": {
          "__rdistrarray_0": {
            "type": "RedistrArray",
            "attributes": {
              "name": "__rdistrarray_0",
              "array_a": "__subarray_0",
              "array_b": "__subarray_1",
              "contiguous": false
            }
          },
          "__rdistrarray_1": {
            "type": "RedistrArray",
            "attributes": {
              "name": "__rdistrarray_1",
              "array_a": "__subarray_2",
              "array_b": "__subarray_3",
              "contiguous": false
            }
          },
          "__rdistrarray_2": {
            "type": "RedistrArray",
            "attributes": {
              "name": "__rdistrarray_2",
              "array_a": "__subarray_4",
              "array_b": "__subarray_5",
              "contiguous": false
            }
          }
        },
        "callback_mapping": {},
        "name": "mode_0_four_grids"
      },
      "nodes": [
        {
          "type": "SDFGState",
          "label": "call_198",
          "id": 0,
          "collapsed": false,
          "scope_dict": {
            "-1": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106
            ]
          },
          "nodes": [
            {
              "type": "LibraryNode",
              "label": "__pgrid_0",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_0_comm;",
                  "MPI_Group __pgrid_0_group;",
                  "int __pgrid_0_coords[6];",
                  "int __pgrid_0_dims[6];",
                  "int __pgrid_0_rank;",
                  "int __pgrid_0_size;",
                  "bool __pgrid_0_valid;"
                ],
                "name": "__pgrid_0",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_0",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 0,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid1",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 198,
                  "end_line": 198,
                  "start_column": 66,
                  "end_column": 66,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 1,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_1",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_1_comm;",
                  "MPI_Group __pgrid_1_group;",
                  "int __pgrid_1_coords[5];",
                  "int __pgrid_1_dims[5];",
                  "int __pgrid_1_rank;",
                  "int __pgrid_1_size;",
                  "bool __pgrid_1_valid;"
                ],
                "name": "__pgrid_1",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_1",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 2,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid1_out_gather",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 200,
                  "end_line": 200,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1_out_gather",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 3,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_2",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_2_comm;",
                  "MPI_Group __pgrid_2_group;",
                  "int __pgrid_2_coords[1];",
                  "int __pgrid_2_dims[1];",
                  "int __pgrid_2_rank;",
                  "int __pgrid_2_size;",
                  "bool __pgrid_2_valid;"
                ],
                "name": "__pgrid_2",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_2",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 4,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid1_out_reduce",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 201,
                  "end_line": 201,
                  "start_column": 84,
                  "end_column": 84,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1_out_reduce",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 5,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_0",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_0;",
                  "int* __subarray_0_counts;",
                  "int* __subarray_0_displs;"
                ],
                "name": "__subarray_0",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_0",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 6,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid1_out_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 202,
                  "end_line": 202,
                  "start_column": 125,
                  "end_column": 125,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1_out_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 7,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_3",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_3_comm;",
                  "MPI_Group __pgrid_3_group;",
                  "int __pgrid_3_coords[6];",
                  "int __pgrid_3_dims[6];",
                  "int __pgrid_3_rank;",
                  "int __pgrid_3_size;",
                  "bool __pgrid_3_valid;"
                ],
                "name": "__pgrid_3",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_3",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 8,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 205,
                  "end_line": 205,
                  "start_column": 67,
                  "end_column": 67,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 9,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_4",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_4_comm;",
                  "MPI_Group __pgrid_4_group;",
                  "int __pgrid_4_coords[5];",
                  "int __pgrid_4_dims[5];",
                  "int __pgrid_4_rank;",
                  "int __pgrid_4_size;",
                  "bool __pgrid_4_valid;"
                ],
                "name": "__pgrid_4",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_4",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 10,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_in_scatter",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 207,
                  "end_line": 207,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_in_scatter",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 11,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_5",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_5_comm;",
                  "MPI_Group __pgrid_5_group;",
                  "int __pgrid_5_coords[1];",
                  "int __pgrid_5_dims[1];",
                  "int __pgrid_5_rank;",
                  "int __pgrid_5_size;",
                  "bool __pgrid_5_valid;"
                ],
                "name": "__pgrid_5",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_5",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 12,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_in_bcast",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 208,
                  "end_line": 208,
                  "start_column": 82,
                  "end_column": 82,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_in_bcast",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 13,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_1",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_1;",
                  "int* __subarray_1_counts;",
                  "int* __subarray_1_displs;"
                ],
                "name": "__subarray_1",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_1",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 14,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_in_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 209,
                  "end_line": 209,
                  "start_column": 124,
                  "end_column": 124,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_in_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 15,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_6",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_6_comm;",
                  "MPI_Group __pgrid_6_group;",
                  "int __pgrid_6_coords[5];",
                  "int __pgrid_6_dims[5];",
                  "int __pgrid_6_rank;",
                  "int __pgrid_6_size;",
                  "bool __pgrid_6_valid;"
                ],
                "name": "__pgrid_6",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_6",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 16,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_out_gather",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 211,
                  "end_line": 211,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_out_gather",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 17,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_7",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_7_comm;",
                  "MPI_Group __pgrid_7_group;",
                  "int __pgrid_7_coords[1];",
                  "int __pgrid_7_dims[1];",
                  "int __pgrid_7_rank;",
                  "int __pgrid_7_size;",
                  "bool __pgrid_7_valid;"
                ],
                "name": "__pgrid_7",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_7",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 18,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_out_reduce",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 212,
                  "end_line": 212,
                  "start_column": 84,
                  "end_column": 84,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_out_reduce",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 19,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_2",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_2;",
                  "int* __subarray_2_counts;",
                  "int* __subarray_2_displs;"
                ],
                "name": "__subarray_2",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_2",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 20,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid2_out_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 213,
                  "end_line": 213,
                  "start_column": 171,
                  "end_column": 171,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_out_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 21,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_8",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_8_comm;",
                  "MPI_Group __pgrid_8_group;",
                  "int __pgrid_8_coords[6];",
                  "int __pgrid_8_dims[6];",
                  "int __pgrid_8_rank;",
                  "int __pgrid_8_size;",
                  "bool __pgrid_8_valid;"
                ],
                "name": "__pgrid_8",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_8",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 22,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 216,
                  "end_line": 216,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 23,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_9",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_9_comm;",
                  "MPI_Group __pgrid_9_group;",
                  "int __pgrid_9_coords[5];",
                  "int __pgrid_9_dims[5];",
                  "int __pgrid_9_rank;",
                  "int __pgrid_9_size;",
                  "bool __pgrid_9_valid;"
                ],
                "name": "__pgrid_9",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_9",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 24,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_in_scatter",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 218,
                  "end_line": 218,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_in_scatter",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 25,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_10",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_10_comm;",
                  "MPI_Group __pgrid_10_group;",
                  "int __pgrid_10_coords[1];",
                  "int __pgrid_10_dims[1];",
                  "int __pgrid_10_rank;",
                  "int __pgrid_10_size;",
                  "bool __pgrid_10_valid;"
                ],
                "name": "__pgrid_10",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_10",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 26,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_in_bcast",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 219,
                  "end_line": 219,
                  "start_column": 82,
                  "end_column": 82,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_in_bcast",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 27,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_3",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_3;",
                  "int* __subarray_3_counts;",
                  "int* __subarray_3_displs;"
                ],
                "name": "__subarray_3",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_3",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 28,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_in_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 220,
                  "end_line": 220,
                  "start_column": 170,
                  "end_column": 170,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_in_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 29,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_11",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_11_comm;",
                  "MPI_Group __pgrid_11_group;",
                  "int __pgrid_11_coords[5];",
                  "int __pgrid_11_dims[5];",
                  "int __pgrid_11_rank;",
                  "int __pgrid_11_size;",
                  "bool __pgrid_11_valid;"
                ],
                "name": "__pgrid_11",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_11",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 30,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_out_gather",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 222,
                  "end_line": 222,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_out_gather",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 31,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_12",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_12_comm;",
                  "MPI_Group __pgrid_12_group;",
                  "int __pgrid_12_coords[1];",
                  "int __pgrid_12_dims[1];",
                  "int __pgrid_12_rank;",
                  "int __pgrid_12_size;",
                  "bool __pgrid_12_valid;"
                ],
                "name": "__pgrid_12",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_12",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 32,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_out_reduce",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 223,
                  "end_line": 223,
                  "start_column": 84,
                  "end_column": 84,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_out_reduce",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 33,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_4",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_4;",
                  "int* __subarray_4_counts;",
                  "int* __subarray_4_displs;"
                ],
                "name": "__subarray_4",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_4",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 34,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid3_out_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 224,
                  "end_line": 224,
                  "start_column": 171,
                  "end_column": 171,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_out_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 35,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_13",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_13_comm;",
                  "MPI_Group __pgrid_13_group;",
                  "int __pgrid_13_coords[6];",
                  "int __pgrid_13_dims[6];",
                  "int __pgrid_13_rank;",
                  "int __pgrid_13_size;",
                  "bool __pgrid_13_valid;"
                ],
                "name": "__pgrid_13",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_13",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 36,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 227,
                  "end_line": 227,
                  "start_column": 69,
                  "end_column": 69,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 37,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_14",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_14_comm;",
                  "MPI_Group __pgrid_14_group;",
                  "int __pgrid_14_coords[5];",
                  "int __pgrid_14_dims[5];",
                  "int __pgrid_14_rank;",
                  "int __pgrid_14_size;",
                  "bool __pgrid_14_valid;"
                ],
                "name": "__pgrid_14",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_14",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 38,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4_in_scatter",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 229,
                  "end_line": 229,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_in_scatter",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 39,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_15",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_15_comm;",
                  "MPI_Group __pgrid_15_group;",
                  "int __pgrid_15_coords[1];",
                  "int __pgrid_15_dims[1];",
                  "int __pgrid_15_rank;",
                  "int __pgrid_15_size;",
                  "bool __pgrid_15_valid;"
                ],
                "name": "__pgrid_15",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_15",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 40,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4_in_bcast",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 230,
                  "end_line": 230,
                  "start_column": 82,
                  "end_column": 82,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_in_bcast",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 41,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__subarray_5",
              "attributes": {
                "fields": [
                  "MPI_Datatype __subarray_5;",
                  "int* __subarray_5_counts;",
                  "int* __subarray_5_displs;"
                ],
                "name": "__subarray_5",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__subarray_5",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 42,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4_in_subarray",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 231,
                  "end_line": 231,
                  "start_column": 170,
                  "end_column": 170,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_in_subarray",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 43,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_16",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_16_comm;",
                  "MPI_Group __pgrid_16_group;",
                  "int __pgrid_16_coords[5];",
                  "int __pgrid_16_dims[5];",
                  "int __pgrid_16_rank;",
                  "int __pgrid_16_size;",
                  "bool __pgrid_16_valid;"
                ],
                "name": "__pgrid_16",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_16",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 44,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4_out_gather",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 233,
                  "end_line": 233,
                  "start_column": 99,
                  "end_column": 99,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_out_gather",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 45,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "__pgrid_17",
              "attributes": {
                "fields": [
                  "MPI_Comm __pgrid_17_comm;",
                  "MPI_Group __pgrid_17_group;",
                  "int __pgrid_17_coords[1];",
                  "int __pgrid_17_dims[1];",
                  "int __pgrid_17_rank;",
                  "int __pgrid_17_size;",
                  "bool __pgrid_17_valid;"
                ],
                "name": "__pgrid_17",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__pgrid_17",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 46,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "grid4_out_reduce",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 234,
                  "end_line": 234,
                  "start_column": 84,
                  "end_column": 84,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_out_reduce",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 47,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "X",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 237,
                  "end_line": 237,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "X",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 48,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "MM",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 237,
                  "end_line": 237,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "MM",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 49,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid1_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 237,
                  "end_line": 237,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 50,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorDot_",
              "attributes": {
                "left_axes": [
                  4
                ],
                "right_axes": [
                  0
                ],
                "permutation": null,
                "name": "_TensorDot_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorDot_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_left_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_right_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 51,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.linalg.nodes.tensordot.TensorDot"
            },
            {
              "type": "AccessNode",
              "label": "grid1_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 238,
                  "end_line": 238,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid1_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 52,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp1",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 238,
                  "end_line": 238,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp1",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 53,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 238,
                  "end_line": 238,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 54,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Reduce_",
              "attributes": {
                "op": "MPI_SUM",
                "grid": "__pgrid_2",
                "name": "_Reduce_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Reduce_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 55,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.reduce.Reduce"
            },
            {
              "type": "LibraryNode",
              "label": "__rdistrarray_0",
              "attributes": {
                "fields": [
                  "MPI_Datatype __rdistrarray_0;",
                  "int __rdistrarray_0_sends;",
                  "MPI_Datatype* __rdistrarray_0_send_types;",
                  "int* __rdistrarray_0_dst_ranks;",
                  "int __rdistrarray_0_recvs;",
                  "MPI_Datatype* __rdistrarray_0_recv_types;",
                  "int* __rdistrarray_0_src_ranks;",
                  "int __rdistrarray_0_self_copies;",
                  "int* __rdistrarray_0_self_src;",
                  "int* __rdistrarray_0_self_dst;",
                  "int* __rdistrarray_0_self_size;",
                  "long long int* __rdistrarray_0_send_sizes;",
                  "double __rdistrarray_0_total_send_size;",
                  "double __rdistrarray_0_total_copy_size;",
                  "MPI_Request* __rdistrarray_0_send_req;",
                  "MPI_Request* __rdistrarray_0_recv_req;",
                  "MPI_Status* __rdistrarray_0_send_status;",
                  "MPI_Status* __rdistrarray_0_recv_status;",
                  "int* __rdistrarray_0_fix_send_src;",
                  "int* __rdistrarray_0_fix_send_size;",
                  "int* __rdistrarray_0_fix_recv_dst;",
                  "int* __rdistrarray_0_fix_recv_size;",
                  "double** __rdistrarray_0_send_buffers;",
                  "double** __rdistrarray_0_recv_buffers;"
                ],
                "name": "__rdistrarray_0",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__rdistrarray_0",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 56,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "__rdistrarray_0",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 240,
                  "end_line": 240,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__rdistrarray_0",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 57,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid2_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 240,
                  "end_line": 240,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 58,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Redistribute_",
              "attributes": {
                "redistr": "__rdistrarray_0",
                "contiguous": false,
                "name": "_Redistribute_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Redistribute_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 59,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.redistribute.Redistribute"
            },
            {
              "type": "AccessNode",
              "label": "grid2_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 241,
                  "end_line": 241,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 60,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp3",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 241,
                  "end_line": 241,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp3",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 61,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 241,
                  "end_line": 241,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 62,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Bcast_",
              "attributes": {
                "grid": "__pgrid_5",
                "name": "_Bcast_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Bcast_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 63,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.bcast.Bcast"
            },
            {
              "type": "AccessNode",
              "label": "tmp",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 243,
                  "end_line": 243,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "tmp",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 64,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorTranspose",
              "attributes": {
                "axes": [
                  4,
                  0,
                  1,
                  2,
                  3
                ],
                "alpha": 1,
                "beta": 0,
                "name": "_TensorTranspose",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorTranspose",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 65,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.ttranspose.nodes.ttranspose.TensorTranspose"
            },
            {
              "type": "AccessNode",
              "label": "LM",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 244,
                  "end_line": 244,
                  "start_column": 50,
                  "end_column": 50,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "LM",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 66,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid2_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 244,
                  "end_line": 244,
                  "start_column": 50,
                  "end_column": 50,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 67,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorDot_",
              "attributes": {
                "left_axes": [
                  4
                ],
                "right_axes": [
                  0
                ],
                "permutation": null,
                "name": "_TensorDot_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorDot_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_left_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_right_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 68,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.linalg.nodes.tensordot.TensorDot"
            },
            {
              "type": "AccessNode",
              "label": "grid2_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 245,
                  "end_line": 245,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid2_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 69,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp6",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 245,
                  "end_line": 245,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp6",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 70,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 245,
                  "end_line": 245,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 71,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Reduce_",
              "attributes": {
                "op": "MPI_SUM",
                "grid": "__pgrid_7",
                "name": "_Reduce_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Reduce_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 72,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.reduce.Reduce"
            },
            {
              "type": "LibraryNode",
              "label": "__rdistrarray_1",
              "attributes": {
                "fields": [
                  "MPI_Datatype __rdistrarray_1;",
                  "int __rdistrarray_1_sends;",
                  "MPI_Datatype* __rdistrarray_1_send_types;",
                  "int* __rdistrarray_1_dst_ranks;",
                  "int __rdistrarray_1_recvs;",
                  "MPI_Datatype* __rdistrarray_1_recv_types;",
                  "int* __rdistrarray_1_src_ranks;",
                  "int __rdistrarray_1_self_copies;",
                  "int* __rdistrarray_1_self_src;",
                  "int* __rdistrarray_1_self_dst;",
                  "int* __rdistrarray_1_self_size;",
                  "long long int* __rdistrarray_1_send_sizes;",
                  "double __rdistrarray_1_total_send_size;",
                  "double __rdistrarray_1_total_copy_size;",
                  "MPI_Request* __rdistrarray_1_send_req;",
                  "MPI_Request* __rdistrarray_1_recv_req;",
                  "MPI_Status* __rdistrarray_1_send_status;",
                  "MPI_Status* __rdistrarray_1_recv_status;",
                  "int* __rdistrarray_1_fix_send_src;",
                  "int* __rdistrarray_1_fix_send_size;",
                  "int* __rdistrarray_1_fix_recv_dst;",
                  "int* __rdistrarray_1_fix_recv_size;",
                  "double** __rdistrarray_1_send_buffers;",
                  "double** __rdistrarray_1_recv_buffers;"
                ],
                "name": "__rdistrarray_1",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__rdistrarray_1",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 73,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "__rdistrarray_1",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 247,
                  "end_line": 247,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__rdistrarray_1",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 74,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid3_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 247,
                  "end_line": 247,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 75,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Redistribute_",
              "attributes": {
                "redistr": "__rdistrarray_1",
                "contiguous": false,
                "name": "_Redistribute_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Redistribute_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 76,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.redistribute.Redistribute"
            },
            {
              "type": "AccessNode",
              "label": "grid3_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 248,
                  "end_line": 248,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 77,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp8",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 248,
                  "end_line": 248,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp8",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 78,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 248,
                  "end_line": 248,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 79,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Bcast_",
              "attributes": {
                "grid": "__pgrid_10",
                "name": "_Bcast_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Bcast_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 80,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.bcast.Bcast"
            },
            {
              "type": "AccessNode",
              "label": "tmp2",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 250,
                  "end_line": 250,
                  "start_column": 52,
                  "end_column": 52,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "tmp2",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 81,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorTranspose",
              "attributes": {
                "axes": [
                  4,
                  0,
                  1,
                  2,
                  3
                ],
                "alpha": 1,
                "beta": 0,
                "name": "_TensorTranspose",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorTranspose",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 82,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.ttranspose.nodes.ttranspose.TensorTranspose"
            },
            {
              "type": "AccessNode",
              "label": "KM",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 251,
                  "end_line": 251,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "KM",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 83,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid3_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 251,
                  "end_line": 251,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 84,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorDot_",
              "attributes": {
                "left_axes": [
                  4
                ],
                "right_axes": [
                  0
                ],
                "permutation": null,
                "name": "_TensorDot_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorDot_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_left_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_right_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 85,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.linalg.nodes.tensordot.TensorDot"
            },
            {
              "type": "AccessNode",
              "label": "grid3_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 252,
                  "end_line": 252,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid3_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 86,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp11",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 252,
                  "end_line": 252,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp11",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 87,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 252,
                  "end_line": 252,
                  "start_column": 48,
                  "end_column": 48,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 88,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Reduce_",
              "attributes": {
                "op": "MPI_SUM",
                "grid": "__pgrid_12",
                "name": "_Reduce_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Reduce_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 89,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.reduce.Reduce"
            },
            {
              "type": "LibraryNode",
              "label": "__rdistrarray_2",
              "attributes": {
                "fields": [
                  "MPI_Datatype __rdistrarray_2;",
                  "int __rdistrarray_2_sends;",
                  "MPI_Datatype* __rdistrarray_2_send_types;",
                  "int* __rdistrarray_2_dst_ranks;",
                  "int __rdistrarray_2_recvs;",
                  "MPI_Datatype* __rdistrarray_2_recv_types;",
                  "int* __rdistrarray_2_src_ranks;",
                  "int __rdistrarray_2_self_copies;",
                  "int* __rdistrarray_2_self_src;",
                  "int* __rdistrarray_2_self_dst;",
                  "int* __rdistrarray_2_self_size;",
                  "long long int* __rdistrarray_2_send_sizes;",
                  "double __rdistrarray_2_total_send_size;",
                  "double __rdistrarray_2_total_copy_size;",
                  "MPI_Request* __rdistrarray_2_send_req;",
                  "MPI_Request* __rdistrarray_2_recv_req;",
                  "MPI_Status* __rdistrarray_2_send_status;",
                  "MPI_Status* __rdistrarray_2_recv_status;",
                  "int* __rdistrarray_2_fix_send_src;",
                  "int* __rdistrarray_2_fix_send_size;",
                  "int* __rdistrarray_2_fix_recv_dst;",
                  "int* __rdistrarray_2_fix_recv_size;",
                  "double** __rdistrarray_2_send_buffers;",
                  "double** __rdistrarray_2_recv_buffers;"
                ],
                "name": "__rdistrarray_2",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "__rdistrarray_2",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 90,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.dummy.Dummy"
            },
            {
              "type": "AccessNode",
              "label": "__rdistrarray_2",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 254,
                  "end_line": 254,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__rdistrarray_2",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 91,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid4_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 254,
                  "end_line": 254,
                  "start_column": 68,
                  "end_column": 68,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 92,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Redistribute_",
              "attributes": {
                "redistr": "__rdistrarray_2",
                "contiguous": false,
                "name": "_Redistribute_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Redistribute_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_buffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 93,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.redistribute.Redistribute"
            },
            {
              "type": "AccessNode",
              "label": "grid4_in",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 255,
                  "end_line": 255,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_in",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 94,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "__tmp13",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 255,
                  "end_line": 255,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__tmp13",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 95,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "Tasklet",
              "label": "_set_root_",
              "attributes": {
                "code": {
                  "string_data": "__out = 0",
                  "language": "Python"
                },
                "state_fields": [],
                "code_global": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_init": {
                  "string_data": "",
                  "language": "CPP"
                },
                "code_exit": {
                  "string_data": "",
                  "language": "CPP"
                },
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 255,
                  "end_line": 255,
                  "start_column": 35,
                  "end_column": 35,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "instrument": "No_Instrumentation",
                "side_effects": null,
                "label": "_set_root_",
                "location": {},
                "environments": [],
                "in_connectors": {},
                "out_connectors": {
                  "__out": "int32"
                }
              },
              "id": 96,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Bcast_",
              "attributes": {
                "grid": "__pgrid_15",
                "name": "_Bcast_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Bcast_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_root": "int32"
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 97,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.bcast.Bcast"
            },
            {
              "type": "AccessNode",
              "label": "tmp3",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 257,
                  "end_line": 257,
                  "start_column": 52,
                  "end_column": 52,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "tmp3",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 98,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorTranspose",
              "attributes": {
                "axes": [
                  4,
                  0,
                  1,
                  2,
                  3
                ],
                "alpha": 1,
                "beta": 0,
                "name": "_TensorTranspose",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorTranspose",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 99,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.ttranspose.nodes.ttranspose.TensorTranspose"
            },
            {
              "type": "AccessNode",
              "label": "JM",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 258,
                  "end_line": 258,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "JM",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 100,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "AccessNode",
              "label": "grid4_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 258,
                  "end_line": 258,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 101,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_TensorDot_",
              "attributes": {
                "left_axes": [
                  4
                ],
                "right_axes": [
                  0
                ],
                "permutation": null,
                "name": "_TensorDot_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorDot_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_left_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  },
                  "_right_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 102,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.linalg.nodes.tensordot.TensorDot"
            },
            {
              "type": "AccessNode",
              "label": "grid4_out",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 259,
                  "end_line": 259,
                  "start_column": 51,
                  "end_column": 51,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "grid4_out",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 103,
              "scope_entry": null,
              "scope_exit": null
            },
            {
              "type": "LibraryNode",
              "label": "_Allreduce_",
              "attributes": {
                "op": "MPI_SUM",
                "grid": "__pgrid_17",
                "name": "_Allreduce_",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_Allreduce_",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_outbuffer": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 104,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.mpi.nodes.allreduce.Allreduce"
            },
            {
              "type": "LibraryNode",
              "label": "_TensorTranspose",
              "attributes": {
                "axes": [
                  3,
                  4,
                  0,
                  1,
                  2
                ],
                "alpha": 1,
                "beta": 0,
                "name": "_TensorTranspose",
                "implementation": null,
                "schedule": "CPU_Multicore",
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "label": "_TensorTranspose",
                "location": {},
                "environments": [],
                "in_connectors": {
                  "_inp_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                },
                "out_connectors": {
                  "_out_tensor": {
                    "type": "pointer",
                    "dtype": "float64"
                  }
                }
              },
              "id": 105,
              "scope_entry": null,
              "scope_exit": null,
              "classpath": "dace.libraries.ttranspose.nodes.ttranspose.TensorTranspose"
            },
            {
              "type": "AccessNode",
              "label": "__return",
              "attributes": {
                "setzero": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 261,
                  "end_line": 261,
                  "start_column": 53,
                  "end_column": 53,
                  "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
                },
                "data": "__return",
                "instrument": "No_Instrumentation",
                "in_connectors": {},
                "out_connectors": {}
              },
              "id": 106,
              "scope_entry": null,
              "scope_exit": null
            }
          ],
          "edges": [
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                  }
                }
              },
              "src": "50",
              "dst": "55",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "58",
              "dst": "63",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "75",
              "dst": "80",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                  }
                }
              },
              "src": "84",
              "dst": "89",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "92",
              "dst": "97",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                  }
                }
              },
              "src": "101",
              "dst": "104",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                  }
                }
              },
              "src": "67",
              "dst": "72",
              "dst_connector": "_inbuffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                  }
                }
              },
              "src": "52",
              "dst": "59",
              "dst_connector": "_inp_buffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                  }
                }
              },
              "src": "69",
              "dst": "76",
              "dst_connector": "_inp_buffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                  }
                }
              },
              "src": "86",
              "dst": "93",
              "dst_connector": "_inp_buffer",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "60",
              "dst": "65",
              "dst_connector": "_inp_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "77",
              "dst": "82",
              "dst_connector": "_inp_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "94",
              "dst": "99",
              "dst_connector": "_inp_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                  }
                }
              },
              "src": "103",
              "dst": "105",
              "dst_connector": "_inp_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "X",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                  }
                }
              },
              "src": "48",
              "dst": "51",
              "dst_connector": "_left_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "64",
              "dst": "68",
              "dst_connector": "_left_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp2",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "81",
              "dst": "85",
              "dst_connector": "_left_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp3",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "98",
              "dst": "102",
              "dst_connector": "_left_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G1*S4G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "MM",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R4G1*S4G1"
                  }
                }
              },
              "src": "49",
              "dst": "51",
              "dst_connector": "_right_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "LM",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R3G2*S3G2"
                  }
                }
              },
              "src": "66",
              "dst": "68",
              "dst_connector": "_right_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "KM",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R2G3*S2G3"
                  }
                }
              },
              "src": "83",
              "dst": "85",
              "dst_connector": "_right_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "JM",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "R1G4*S1G4"
                  }
                }
              },
              "src": "100",
              "dst": "102",
              "dst_connector": "_right_tensor",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp1",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "53",
              "dst": "55",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp3",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "61",
              "dst": "63",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp6",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "70",
              "dst": "72",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp8",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "78",
              "dst": "80",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp11",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "87",
              "dst": "89",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp13",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "dst_subset": null,
                    "num_accesses": "1"
                  }
                }
              },
              "src": "95",
              "dst": "97",
              "dst_connector": "_root",
              "src_connector": null
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "0",
              "dst": "1",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out_gather",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "2",
              "dst": "3",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out_reduce",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "4",
              "dst": "5",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "6",
              "dst": "7",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "8",
              "dst": "9",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in_scatter",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "10",
              "dst": "11",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in_bcast",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "12",
              "dst": "13",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "14",
              "dst": "15",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out_gather",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "16",
              "dst": "17",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out_reduce",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "18",
              "dst": "19",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "20",
              "dst": "21",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "22",
              "dst": "23",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in_scatter",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "24",
              "dst": "25",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in_bcast",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "26",
              "dst": "27",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "28",
              "dst": "29",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out_gather",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "30",
              "dst": "31",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out_reduce",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "32",
              "dst": "33",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "34",
              "dst": "35",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "36",
              "dst": "37",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in_scatter",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "38",
              "dst": "39",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in_bcast",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "40",
              "dst": "41",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in_subarray",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "42",
              "dst": "43",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out_gather",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "44",
              "dst": "45",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out_reduce",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "46",
              "dst": "47",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp1",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "54",
              "dst": "53",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__rdistrarray_0",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "56",
              "dst": "57",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp3",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "62",
              "dst": "61",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp6",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "71",
              "dst": "70",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__rdistrarray_1",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "73",
              "dst": "74",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp8",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "79",
              "dst": "78",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp11",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "88",
              "dst": "87",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__rdistrarray_2",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "90",
              "dst": "91",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__tmp13",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "0",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "1"
                  }
                }
              },
              "src": "96",
              "dst": "95",
              "dst_connector": null,
              "src_connector": "__out"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "59",
              "dst": "58",
              "dst_connector": null,
              "src_connector": "_out_buffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "76",
              "dst": "75",
              "dst_connector": null,
              "src_connector": "_out_buffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "93",
              "dst": "92",
              "dst_connector": null,
              "src_connector": "_out_buffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                  }
                }
              },
              "src": "51",
              "dst": "50",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "65",
              "dst": "64",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                  }
                }
              },
              "src": "68",
              "dst": "67",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp2",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "82",
              "dst": "81",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                  }
                }
              },
              "src": "85",
              "dst": "84",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "tmp3",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "99",
              "dst": "98",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                  }
                }
              },
              "src": "102",
              "dst": "101",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "__return",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                  }
                }
              },
              "src": "105",
              "dst": "106",
              "dst_connector": null,
              "src_connector": "_out_tensor"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid1_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G1 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G1 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                  }
                }
              },
              "src": "55",
              "dst": "52",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                  }
                }
              },
              "src": "63",
              "dst": "60",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid2_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G2 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G2 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                  }
                }
              },
              "src": "72",
              "dst": "69",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                  }
                }
              },
              "src": "80",
              "dst": "77",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid3_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G3 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G3 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                  }
                }
              },
              "src": "89",
              "dst": "86",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_in",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                  }
                }
              },
              "src": "97",
              "dst": "94",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            },
            {
              "type": "MultiConnectorEdge",
              "attributes": {
                "data": {
                  "type": "Memlet",
                  "attributes": {
                    "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                    "dynamic": false,
                    "subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "other_subset": null,
                    "data": "grid4_out",
                    "wcr": null,
                    "debuginfo": null,
                    "wcr_nonatomic": false,
                    "allow_oob": false,
                    "src_subset": null,
                    "dst_subset": {
                      "type": "Range",
                      "ranges": [
                        {
                          "start": "0",
                          "end": "R2G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R3G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R4G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "S0G4 - 1",
                          "step": "1",
                          "tile": "1"
                        },
                        {
                          "start": "0",
                          "end": "R1G4 - 1",
                          "step": "1",
                          "tile": "1"
                        }
                      ]
                    },
                    "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                  }
                }
              },
              "src": "104",
              "dst": "103",
              "dst_connector": null,
              "src_connector": "_outbuffer"
            }
          ],
          "attributes": {
            "is_collapsed": false,
            "nosync": false,
            "instrument": "No_Instrumentation",
            "executions": "1",
            "dynamic_executions": false,
            "ranges": {},
            "location": {}
          }
        }
      ],
      "edges": [],
      "sdfg_list_id": 0,
      "start_state": 0,
      "dace_version": "0.14.1"
    },
    "transformation_hist": [
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 0
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 1
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 2
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 3
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 5
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 6
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 7
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 8
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 9
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 10
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 11
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 12
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 13
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 14
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 15
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 16
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 17
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 18
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 19
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 20
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 21
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 22
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 23
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandTTGT",
        "classpath": "dace.libraries.linalg.nodes.tensordot.ExpandTTGT",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 27
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandReduceMPI",
        "classpath": "dace.libraries.mpi.nodes.reduce.ExpandReduceMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 30
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 30
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandRedistribute",
        "classpath": "dace.libraries.mpi.nodes.redistribute.ExpandRedistribute",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 32
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandBcastMPI",
        "classpath": "dace.libraries.mpi.nodes.bcast.ExpandBcastMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 35
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 36
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandTTGT",
        "classpath": "dace.libraries.linalg.nodes.tensordot.ExpandTTGT",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 38
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandReduceMPI",
        "classpath": "dace.libraries.mpi.nodes.reduce.ExpandReduceMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 41
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 41
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandRedistribute",
        "classpath": "dace.libraries.mpi.nodes.redistribute.ExpandRedistribute",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 43
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandBcastMPI",
        "classpath": "dace.libraries.mpi.nodes.bcast.ExpandBcastMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 46
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 47
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandTTGT",
        "classpath": "dace.libraries.linalg.nodes.tensordot.ExpandTTGT",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 49
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandReduceMPI",
        "classpath": "dace.libraries.mpi.nodes.reduce.ExpandReduceMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 52
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandDummyMPI",
        "classpath": "dace.libraries.mpi.nodes.dummy.ExpandDummyMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 52
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandRedistribute",
        "classpath": "dace.libraries.mpi.nodes.redistribute.ExpandRedistribute",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 54
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandBcastMPI",
        "classpath": "dace.libraries.mpi.nodes.bcast.ExpandBcastMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 57
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 58
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandTTGT",
        "classpath": "dace.libraries.linalg.nodes.tensordot.ExpandTTGT",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 60
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandAllreduceMPI",
        "classpath": "dace.libraries.mpi.nodes.allreduce.ExpandAllreduceMPI",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 61
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 0,
        "state_id": 0,
        "_subgraph": {
          "0": 61
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandGemmPure",
        "classpath": "dace.libraries.blas.nodes.gemm.ExpandGemmPure",
        "sdfg_id": 1,
        "state_id": 1,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 1,
        "state_id": 0,
        "_subgraph": {
          "0": 2
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 1,
        "state_id": 0,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandGemmPure",
        "classpath": "dace.libraries.blas.nodes.gemm.ExpandGemmPure",
        "sdfg_id": 3,
        "state_id": 1,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 3,
        "state_id": 0,
        "_subgraph": {
          "0": 2
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 3,
        "state_id": 0,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandGemmPure",
        "classpath": "dace.libraries.blas.nodes.gemm.ExpandGemmPure",
        "sdfg_id": 5,
        "state_id": 1,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 5,
        "state_id": 0,
        "_subgraph": {
          "0": 2
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 5,
        "state_id": 0,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandGemmPure",
        "classpath": "dace.libraries.blas.nodes.gemm.ExpandGemmPure",
        "sdfg_id": 7,
        "state_id": 1,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 7,
        "state_id": 0,
        "_subgraph": {
          "0": 2
        },
        "expr_index": 0
      },
      {
        "type": "ExpandTransformation",
        "transformation": "ExpandPure",
        "classpath": "dace.libraries.ttranspose.nodes.ttranspose.ExpandPure",
        "sdfg_id": 7,
        "state_id": 0,
        "_subgraph": {
          "0": 4
        },
        "expr_index": 0
      }
    ],
    "logical_groups": [],
    "openmp_sections": false,
    "debuginfo": {
      "type": "DebugInfo",
      "start_line": 190,
      "end_line": 261,
      "start_column": 0,
      "end_column": 0,
      "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
    },
    "_pgrids": {
      "__pgrid_0": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_0",
          "is_subgrid": false,
          "shape": [
            "P0G1",
            "P1G1",
            "P2G1",
            "P3G1",
            "P4G1",
            "PR4G1"
          ],
          "parent_grid": null,
          "color": null,
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_1": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_1",
          "is_subgrid": true,
          "shape": [
            "P0G1",
            "P1G1",
            "P2G1",
            "P3G1",
            "PR4G1"
          ],
          "parent_grid": "__pgrid_0",
          "color": [
            1,
            1,
            1,
            1,
            0,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_10": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_10",
          "is_subgrid": true,
          "shape": [
            "PR2G3"
          ],
          "parent_grid": "__pgrid_8",
          "color": [
            0,
            0,
            0,
            1,
            0,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_11": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_11",
          "is_subgrid": true,
          "shape": [
            "P0G3",
            "P1G3",
            "PR2G3",
            "PR3G3",
            "PR4G3"
          ],
          "parent_grid": "__pgrid_8",
          "color": [
            1,
            1,
            0,
            1,
            1,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_12": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_12",
          "is_subgrid": true,
          "shape": [
            "P2G3"
          ],
          "parent_grid": "__pgrid_8",
          "color": [
            0,
            0,
            1,
            0,
            0,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_13": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_13",
          "is_subgrid": false,
          "shape": [
            "P0G4",
            "P1G4",
            "PR1G4",
            "PR2G4",
            "PR3G4",
            "PR4G4"
          ],
          "parent_grid": null,
          "color": null,
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_14": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_14",
          "is_subgrid": true,
          "shape": [
            "P0G4",
            "P1G4",
            "PR2G4",
            "PR3G4",
            "PR4G4"
          ],
          "parent_grid": "__pgrid_13",
          "color": [
            1,
            1,
            0,
            1,
            1,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_15": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_15",
          "is_subgrid": true,
          "shape": [
            "PR1G4"
          ],
          "parent_grid": "__pgrid_13",
          "color": [
            0,
            0,
            1,
            0,
            0,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_16": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_16",
          "is_subgrid": true,
          "shape": [
            "P0G4",
            "PR1G4",
            "PR2G4",
            "PR3G4",
            "PR4G4"
          ],
          "parent_grid": "__pgrid_13",
          "color": [
            1,
            0,
            1,
            1,
            1,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_17": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_17",
          "is_subgrid": true,
          "shape": [
            "P1G4"
          ],
          "parent_grid": "__pgrid_13",
          "color": [
            0,
            1,
            0,
            0,
            0,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_2": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_2",
          "is_subgrid": true,
          "shape": [
            "P4G1"
          ],
          "parent_grid": "__pgrid_0",
          "color": [
            0,
            0,
            0,
            0,
            1,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_3": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_3",
          "is_subgrid": false,
          "shape": [
            "P0G2",
            "P1G2",
            "P2G2",
            "P3G2",
            "PR3G2",
            "PR4G2"
          ],
          "parent_grid": null,
          "color": null,
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_4": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_4",
          "is_subgrid": true,
          "shape": [
            "P0G2",
            "P1G2",
            "P2G2",
            "P3G2",
            "PR4G2"
          ],
          "parent_grid": "__pgrid_3",
          "color": [
            1,
            1,
            1,
            1,
            0,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_5": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_5",
          "is_subgrid": true,
          "shape": [
            "PR3G2"
          ],
          "parent_grid": "__pgrid_3",
          "color": [
            0,
            0,
            0,
            0,
            1,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_6": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_6",
          "is_subgrid": true,
          "shape": [
            "P0G2",
            "P1G2",
            "P2G2",
            "PR3G2",
            "PR4G2"
          ],
          "parent_grid": "__pgrid_3",
          "color": [
            1,
            1,
            1,
            0,
            1,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      },
      "__pgrid_7": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_7",
          "is_subgrid": true,
          "shape": [
            "P3G2"
          ],
          "parent_grid": "__pgrid_3",
          "color": [
            0,
            0,
            0,
            1,
            0,
            0
          ],
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_8": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_8",
          "is_subgrid": false,
          "shape": [
            "P0G3",
            "P1G3",
            "P2G3",
            "PR2G3",
            "PR3G3",
            "PR4G3"
          ],
          "parent_grid": null,
          "color": null,
          "exact_grid": null,
          "root": "0"
        }
      },
      "__pgrid_9": {
        "type": "ProcessGrid",
        "attributes": {
          "name": "__pgrid_9",
          "is_subgrid": true,
          "shape": [
            "P0G3",
            "P1G3",
            "P2G3",
            "PR3G3",
            "PR4G3"
          ],
          "parent_grid": "__pgrid_8",
          "color": [
            1,
            1,
            1,
            0,
            1,
            1
          ],
          "exact_grid": "0",
          "root": "0"
        }
      }
    },
    "_subarrays": {
      "__subarray_0": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_0",
          "dtype": "float64",
          "shape": [
            "S0",
            "S1",
            "S2",
            "S3",
            "R4"
          ],
          "subshape": [
            "S0G1",
            "S1G1",
            "S2G1",
            "S3G1",
            "R4G1"
          ],
          "pgrid": "__pgrid_1",
          "correspondence": [
            0,
            1,
            2,
            3,
            4
          ]
        }
      },
      "__subarray_1": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_1",
          "dtype": "float64",
          "shape": [
            "S0",
            "S1",
            "S2",
            "S3",
            "R4"
          ],
          "subshape": [
            "S0G2",
            "S1G2",
            "S2G2",
            "S3G2",
            "R4G2"
          ],
          "pgrid": "__pgrid_4",
          "correspondence": [
            0,
            1,
            2,
            3,
            4
          ]
        }
      },
      "__subarray_2": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_2",
          "dtype": "float64",
          "shape": [
            "R4",
            "S0",
            "S1",
            "S2",
            "R3"
          ],
          "subshape": [
            "R4G2",
            "S0G2",
            "S1G2",
            "S2G2",
            "R3G2"
          ],
          "pgrid": "__pgrid_6",
          "correspondence": [
            4,
            0,
            1,
            2,
            3
          ]
        }
      },
      "__subarray_3": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_3",
          "dtype": "float64",
          "shape": [
            "R4",
            "S0",
            "S1",
            "S2",
            "R3"
          ],
          "subshape": [
            "R4G3",
            "S0G3",
            "S1G3",
            "S2G3",
            "R3G3"
          ],
          "pgrid": "__pgrid_9",
          "correspondence": [
            4,
            0,
            1,
            2,
            3
          ]
        }
      },
      "__subarray_4": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_4",
          "dtype": "float64",
          "shape": [
            "R3",
            "R4",
            "S0",
            "S1",
            "R2"
          ],
          "subshape": [
            "R3G3",
            "R4G3",
            "S0G3",
            "S1G3",
            "R2G3"
          ],
          "pgrid": "__pgrid_11",
          "correspondence": [
            3,
            4,
            0,
            1,
            2
          ]
        }
      },
      "__subarray_5": {
        "type": "SubArray",
        "attributes": {
          "name": "__subarray_5",
          "dtype": "float64",
          "shape": [
            "R3",
            "R4",
            "S0",
            "S1",
            "R2"
          ],
          "subshape": [
            "R3G4",
            "R4G4",
            "S0G4",
            "S1G4",
            "R2G4"
          ],
          "pgrid": "__pgrid_14",
          "correspondence": [
            3,
            4,
            0,
            1,
            2
          ]
        }
      }
    },
    "_rdistrarrays": {
      "__rdistrarray_0": {
        "type": "RedistrArray",
        "attributes": {
          "name": "__rdistrarray_0",
          "array_a": "__subarray_0",
          "array_b": "__subarray_1",
          "contiguous": false
        }
      },
      "__rdistrarray_1": {
        "type": "RedistrArray",
        "attributes": {
          "name": "__rdistrarray_1",
          "array_a": "__subarray_2",
          "array_b": "__subarray_3",
          "contiguous": false
        }
      },
      "__rdistrarray_2": {
        "type": "RedistrArray",
        "attributes": {
          "name": "__rdistrarray_2",
          "array_a": "__subarray_4",
          "array_b": "__subarray_5",
          "contiguous": false
        }
      }
    },
    "callback_mapping": {},
    "name": "mode_0_four_grids",
    "hash": "e07f4bc8598aaf5529ad517faa44f2e29b4116cd93ee4edd314654e01e64d0f9"
  },
  "nodes": [
    {
      "type": "SDFGState",
      "label": "call_198",
      "id": 0,
      "collapsed": false,
      "scope_dict": {
        "-1": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          94,
          95,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          104,
          105,
          106
        ]
      },
      "nodes": [
        {
          "type": "AccessNode",
          "label": "grid1",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 198,
              "end_line": 198,
              "start_column": 66,
              "end_column": 66,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 0,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid1_out_gather",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 200,
              "end_line": 200,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1_out_gather",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 1,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid1_out_reduce",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 201,
              "end_line": 201,
              "start_column": 84,
              "end_column": 84,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1_out_reduce",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 2,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid1_out_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 202,
              "end_line": 202,
              "start_column": 125,
              "end_column": 125,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1_out_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 3,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 205,
              "end_line": 205,
              "start_column": 67,
              "end_column": 67,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 4,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_in_scatter",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 207,
              "end_line": 207,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_in_scatter",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 5,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_in_bcast",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 208,
              "end_line": 208,
              "start_column": 82,
              "end_column": 82,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_in_bcast",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 6,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_in_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 209,
              "end_line": 209,
              "start_column": 124,
              "end_column": 124,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_in_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 7,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_out_gather",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 211,
              "end_line": 211,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_out_gather",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 8,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_out_reduce",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 212,
              "end_line": 212,
              "start_column": 84,
              "end_column": 84,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_out_reduce",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 9,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_out_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 213,
              "end_line": 213,
              "start_column": 171,
              "end_column": 171,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_out_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 10,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 216,
              "end_line": 216,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 11,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_in_scatter",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 218,
              "end_line": 218,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_in_scatter",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 12,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_in_bcast",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 219,
              "end_line": 219,
              "start_column": 82,
              "end_column": 82,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_in_bcast",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 13,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_in_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 220,
              "end_line": 220,
              "start_column": 170,
              "end_column": 170,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_in_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 14,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_out_gather",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 222,
              "end_line": 222,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_out_gather",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 15,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_out_reduce",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 223,
              "end_line": 223,
              "start_column": 84,
              "end_column": 84,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_out_reduce",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 16,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_out_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 224,
              "end_line": 224,
              "start_column": 171,
              "end_column": 171,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_out_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 17,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 227,
              "end_line": 227,
              "start_column": 69,
              "end_column": 69,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 18,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_in_scatter",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 229,
              "end_line": 229,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_in_scatter",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 19,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_in_bcast",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 230,
              "end_line": 230,
              "start_column": 82,
              "end_column": 82,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_in_bcast",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 20,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_in_subarray",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 231,
              "end_line": 231,
              "start_column": 170,
              "end_column": 170,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_in_subarray",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 21,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_out_gather",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 233,
              "end_line": 233,
              "start_column": 99,
              "end_column": 99,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_out_gather",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 22,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_out_reduce",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 234,
              "end_line": 234,
              "start_column": 84,
              "end_column": 84,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_out_reduce",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 23,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "X",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 237,
              "end_line": 237,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "X",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 24,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "MM",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 237,
              "end_line": 237,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "MM",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 25,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid1_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 237,
              "end_line": 237,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 26,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid1_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 238,
              "end_line": 238,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid1_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 27,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp1",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 238,
              "end_line": 238,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp1",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 28,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 238,
              "end_line": 238,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 29,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__rdistrarray_0",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 240,
              "end_line": 240,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__rdistrarray_0",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 30,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 240,
              "end_line": 240,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 31,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 241,
              "end_line": 241,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 32,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp3",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 241,
              "end_line": 241,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp3",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 33,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 241,
              "end_line": 241,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 34,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "tmp",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 243,
              "end_line": 243,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "tmp",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 35,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "LM",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 244,
              "end_line": 244,
              "start_column": 50,
              "end_column": 50,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "LM",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 36,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 244,
              "end_line": 244,
              "start_column": 50,
              "end_column": 50,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 37,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid2_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 245,
              "end_line": 245,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid2_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 38,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp6",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 245,
              "end_line": 245,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp6",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 39,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 245,
              "end_line": 245,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 40,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__rdistrarray_1",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 247,
              "end_line": 247,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__rdistrarray_1",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 41,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 247,
              "end_line": 247,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 42,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 248,
              "end_line": 248,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 43,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp8",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 248,
              "end_line": 248,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp8",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 44,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 248,
              "end_line": 248,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 45,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "tmp2",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 250,
              "end_line": 250,
              "start_column": 52,
              "end_column": 52,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "tmp2",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 46,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "KM",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 251,
              "end_line": 251,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "KM",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 47,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 251,
              "end_line": 251,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 48,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid3_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 252,
              "end_line": 252,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid3_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 49,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp11",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 252,
              "end_line": 252,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp11",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 50,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 252,
              "end_line": 252,
              "start_column": 48,
              "end_column": 48,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 51,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__rdistrarray_2",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 254,
              "end_line": 254,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__rdistrarray_2",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 52,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 254,
              "end_line": 254,
              "start_column": 68,
              "end_column": 68,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 53,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_in",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 255,
              "end_line": 255,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_in",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 54,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__tmp13",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 255,
              "end_line": 255,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__tmp13",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 55,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_set_root_",
          "attributes": {
            "code": {
              "string_data": "__out = 0",
              "language": "Python"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 255,
              "end_line": 255,
              "start_column": 35,
              "end_column": 35,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_set_root_",
            "location": {},
            "environments": [],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 56,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "tmp3",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 257,
              "end_line": 257,
              "start_column": 52,
              "end_column": 52,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "tmp3",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 57,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "JM",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 258,
              "end_line": 258,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "JM",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 58,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 258,
              "end_line": 258,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 59,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "grid4_out",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 259,
              "end_line": 259,
              "start_column": 51,
              "end_column": 51,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "grid4_out",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 60,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "AccessNode",
          "label": "__return",
          "attributes": {
            "setzero": false,
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 261,
              "end_line": 261,
              "start_column": 53,
              "end_column": 53,
              "filename": "/home/alziogas/Projects/dace/samples/distributed/ttmc_testing.py"
            },
            "data": "__return",
            "instrument": "No_Instrumentation",
            "in_connectors": {},
            "out_connectors": {}
          },
          "id": 61,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_0",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_0_comm;",
              "MPI_Group __pgrid_0_group;",
              "int __pgrid_0_coords[6];",
              "int __pgrid_0_dims[6];",
              "int __pgrid_0_rank;",
              "int __pgrid_0_size;",
              "bool __pgrid_0_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_0",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 62,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_1",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_1_comm;",
              "MPI_Group __pgrid_1_group;",
              "int __pgrid_1_coords[5];",
              "int __pgrid_1_dims[5];",
              "int __pgrid_1_rank;",
              "int __pgrid_1_size;",
              "bool __pgrid_1_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_1",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 63,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_2",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_2_comm;",
              "MPI_Group __pgrid_2_group;",
              "int __pgrid_2_coords[1];",
              "int __pgrid_2_dims[1];",
              "int __pgrid_2_rank;",
              "int __pgrid_2_size;",
              "bool __pgrid_2_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_2",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 64,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_0",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_0;",
              "int* __subarray_0_counts;",
              "int* __subarray_0_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_0",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 65,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_3",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_3_comm;",
              "MPI_Group __pgrid_3_group;",
              "int __pgrid_3_coords[6];",
              "int __pgrid_3_dims[6];",
              "int __pgrid_3_rank;",
              "int __pgrid_3_size;",
              "bool __pgrid_3_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_3",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 66,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_4",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_4_comm;",
              "MPI_Group __pgrid_4_group;",
              "int __pgrid_4_coords[5];",
              "int __pgrid_4_dims[5];",
              "int __pgrid_4_rank;",
              "int __pgrid_4_size;",
              "bool __pgrid_4_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_4",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 67,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_5",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_5_comm;",
              "MPI_Group __pgrid_5_group;",
              "int __pgrid_5_coords[1];",
              "int __pgrid_5_dims[1];",
              "int __pgrid_5_rank;",
              "int __pgrid_5_size;",
              "bool __pgrid_5_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_5",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 68,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_1",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_1;",
              "int* __subarray_1_counts;",
              "int* __subarray_1_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_1",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 69,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_6",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_6_comm;",
              "MPI_Group __pgrid_6_group;",
              "int __pgrid_6_coords[5];",
              "int __pgrid_6_dims[5];",
              "int __pgrid_6_rank;",
              "int __pgrid_6_size;",
              "bool __pgrid_6_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_6",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 70,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_7",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_7_comm;",
              "MPI_Group __pgrid_7_group;",
              "int __pgrid_7_coords[1];",
              "int __pgrid_7_dims[1];",
              "int __pgrid_7_rank;",
              "int __pgrid_7_size;",
              "bool __pgrid_7_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_7",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 71,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_2",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_2;",
              "int* __subarray_2_counts;",
              "int* __subarray_2_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_2",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 72,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_8",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_8_comm;",
              "MPI_Group __pgrid_8_group;",
              "int __pgrid_8_coords[6];",
              "int __pgrid_8_dims[6];",
              "int __pgrid_8_rank;",
              "int __pgrid_8_size;",
              "bool __pgrid_8_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_8",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 73,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_9",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_9_comm;",
              "MPI_Group __pgrid_9_group;",
              "int __pgrid_9_coords[5];",
              "int __pgrid_9_dims[5];",
              "int __pgrid_9_rank;",
              "int __pgrid_9_size;",
              "bool __pgrid_9_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_9",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 74,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_10",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_10_comm;",
              "MPI_Group __pgrid_10_group;",
              "int __pgrid_10_coords[1];",
              "int __pgrid_10_dims[1];",
              "int __pgrid_10_rank;",
              "int __pgrid_10_size;",
              "bool __pgrid_10_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_10",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 75,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_3",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_3;",
              "int* __subarray_3_counts;",
              "int* __subarray_3_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_3",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 76,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_11",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_11_comm;",
              "MPI_Group __pgrid_11_group;",
              "int __pgrid_11_coords[5];",
              "int __pgrid_11_dims[5];",
              "int __pgrid_11_rank;",
              "int __pgrid_11_size;",
              "bool __pgrid_11_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_11",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 77,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_12",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_12_comm;",
              "MPI_Group __pgrid_12_group;",
              "int __pgrid_12_coords[1];",
              "int __pgrid_12_dims[1];",
              "int __pgrid_12_rank;",
              "int __pgrid_12_size;",
              "bool __pgrid_12_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_12",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 78,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_4",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_4;",
              "int* __subarray_4_counts;",
              "int* __subarray_4_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_4",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 79,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_13",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_13_comm;",
              "MPI_Group __pgrid_13_group;",
              "int __pgrid_13_coords[6];",
              "int __pgrid_13_dims[6];",
              "int __pgrid_13_rank;",
              "int __pgrid_13_size;",
              "bool __pgrid_13_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_13",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 80,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_14",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_14_comm;",
              "MPI_Group __pgrid_14_group;",
              "int __pgrid_14_coords[5];",
              "int __pgrid_14_dims[5];",
              "int __pgrid_14_rank;",
              "int __pgrid_14_size;",
              "bool __pgrid_14_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_14",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 81,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_15",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_15_comm;",
              "MPI_Group __pgrid_15_group;",
              "int __pgrid_15_coords[1];",
              "int __pgrid_15_dims[1];",
              "int __pgrid_15_rank;",
              "int __pgrid_15_size;",
              "bool __pgrid_15_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_15",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 82,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__subarray_5",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __subarray_5;",
              "int* __subarray_5_counts;",
              "int* __subarray_5_displs;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__subarray_5",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 83,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_16",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_16_comm;",
              "MPI_Group __pgrid_16_group;",
              "int __pgrid_16_coords[5];",
              "int __pgrid_16_dims[5];",
              "int __pgrid_16_rank;",
              "int __pgrid_16_size;",
              "bool __pgrid_16_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_16",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 84,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__pgrid_17",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Comm __pgrid_17_comm;",
              "MPI_Group __pgrid_17_group;",
              "int __pgrid_17_coords[1];",
              "int __pgrid_17_dims[1];",
              "int __pgrid_17_rank;",
              "int __pgrid_17_size;",
              "bool __pgrid_17_valid;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__pgrid_17",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 85,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorDot_",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_left_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S1G1*S2G1*S3G1*S4G1",
                        "S2G1*S3G1*S4G1",
                        "S3G1*S4G1",
                        "S4G1",
                        "1"
                      ],
                      "total_size": "S1G1*S2G1*S3G1*S4G1*(S0G1 - 1) + S2G1*S3G1*S4G1*(S1G1 - 1) + S3G1*S4G1*(S2G1 - 1) + S4G1*(S3G1 - 1) + S4G1",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G1",
                        "S1G1",
                        "S2G1",
                        "S3G1",
                        "S4G1"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_right_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G1",
                        "1"
                      ],
                      "total_size": "R4G1*(S4G1 - 1) + R4G1",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S4G1",
                        "R4G1"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G1*S1G1*S2G1*S3G1",
                        "R4G1*S2G1*S3G1",
                        "R4G1*S3G1",
                        "R4G1",
                        "1"
                      ],
                      "total_size": "R4G1*S1G1*S2G1*S3G1*(S0G1 - 1) + R4G1*S2G1*S3G1*(S1G1 - 1) + R4G1*S3G1*(S2G1 - 1) + R4G1*(S3G1 - 1) + R4G1",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G1",
                        "S1G1",
                        "S2G1",
                        "S3G1",
                        "R4G1"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S1G1*S2G1*S3G1*S4G1",
                        "S2G1*S3G1*S4G1",
                        "S3G1*S4G1",
                        "S4G1",
                        "1"
                      ],
                      "total_size": "S0G1*S1G1*S2G1*S3G1*S4G1",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G1",
                        "S1G1",
                        "S2G1",
                        "S3G1",
                        "S4G1"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G1",
                        "1"
                      ],
                      "total_size": "R4G1*S4G1",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S4G1",
                        "R4G1"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S4G1",
                        "1"
                      ],
                      "total_size": "S4G1*(S0G1*S1G1*S2G1*S3G1 - 1) + S4G1",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G1*S1G1*S2G1*S3G1",
                        "S4G1"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G1",
                        "1"
                      ],
                      "total_size": "R4G1*(S4G1 - 1) + R4G1",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S4G1",
                        "R4G1"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__gemm_out": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G1",
                        "1"
                      ],
                      "total_size": "R4G1*(S0G1*S1G1*S2G1*S3G1 - 1) + R4G1",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G1*S1G1*S2G1*S3G1",
                        "R4G1"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R4G1": "int32",
                  "S0G1": "int32",
                  "S1G1": "int32",
                  "S2G1": "int32",
                  "S3G1": "int32",
                  "S4G1": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorDot__sdfg_1"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__inp_transpose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "_left_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_left_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_right_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_right_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S1G1*S2G1*S3G1*S4G1",
                                    "S2G1*S3G1*S4G1",
                                    "S3G1*S4G1",
                                    "S4G1",
                                    "1"
                                  ],
                                  "total_size": "S1G1*S2G1*S3G1*S4G1*(S0G1 - 1) + S2G1*S3G1*S4G1*(S1G1 - 1) + S3G1*S4G1*(S2G1 - 1) + S4G1*(S3G1 - 1) + S4G1",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S0G1",
                                    "S1G1",
                                    "S2G1",
                                    "S3G1",
                                    "S4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S1G1*S2G1*S3G1*S4G1",
                                    "S2G1*S3G1*S4G1",
                                    "S3G1*S4G1",
                                    "S4G1",
                                    "1"
                                  ],
                                  "total_size": "S1G1*S2G1*S3G1*S4G1*(S0G1 - 1) + S2G1*S3G1*S4G1*(S1G1 - 1) + S3G1*S4G1*(S2G1 - 1) + S4G1*(S3G1 - 1) + S4G1",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S0G1",
                                    "S1G1",
                                    "S2G1",
                                    "S3G1",
                                    "S4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "S0G1": "int32",
                              "S1G1": "int32",
                              "S2G1": "int32",
                              "S3G1": "int32",
                              "S4G1": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_1"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S0G1, __i1=0:S1G1, __i2=0:S2G1, __i3=0:S3G1, __i4=0:S4G1]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2",
                                      "__i3",
                                      "__i4"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S0G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S1G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S2G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S3G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S0G1, __i1=0:S1G1, __i2=0:S2G1, __i3=0:S3G1, __i4=0:S4G1]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 2,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "S0G1": "S0G1",
                          "S1G1": "S1G1",
                          "S2G1": "S2G1",
                          "S3G1": "S3G1",
                          "S4G1": "S4G1"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G1",
                                    "1"
                                  ],
                                  "total_size": "R4G1*(S4G1 - 1) + R4G1",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S4G1",
                                    "R4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G1",
                                    "1"
                                  ],
                                  "total_size": "R4G1*(S4G1 - 1) + R4G1",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S4G1",
                                    "R4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R4G1": "int32",
                              "S4G1": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_2"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S4G1, __i1=0:R4G1]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S4G1, __i1=0:R4G1]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R4G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R4G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 3,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R4G1": "R4G1",
                          "S4G1": "S4G1"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_left_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "4",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_right_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G1*S4G1"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "5",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                          }
                        }
                      },
                      "src": "4",
                      "dst": "1",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R4G1*S4G1"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "3",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                },
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__gemm_state",
                  "id": 1,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 139,
                          "end_line": 139,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 140,
                          "end_line": 140,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 150,
                          "end_line": 150,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 151,
                          "end_line": 151,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 186,
                          "end_line": 186,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__gemm_out",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 187,
                          "end_line": 187,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__gemm_out",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_GEMM_",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_a": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S4G1",
                                    "1"
                                  ],
                                  "total_size": "S4G1*(S0G1*S1G1*S2G1*S3G1 - 1) + S4G1",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S0G1*S1G1*S2G1*S3G1",
                                    "S4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_b": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G1",
                                    "1"
                                  ],
                                  "total_size": "R4G1*(S4G1 - 1) + R4G1",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S4G1",
                                    "R4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_c": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G1",
                                    "1"
                                  ],
                                  "total_size": "R4G1*(S0G1*S1G1*S2G1*S3G1 - 1) + R4G1",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S0G1*S1G1*S2G1*S3G1",
                                    "R4G1"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R4G1": "int32",
                              "S0G1": "int32",
                              "S1G1": "int32",
                              "S2G1": "int32",
                              "S3G1": "int32",
                              "S4G1": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_GEMM__sdfg_1"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__initstate",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_init_map[_o0=0:S0G1*S1G1*S2G1*S3G1, _o1=0:R4G1]",
                                  "attributes": {
                                    "label": "gemm_init_map",
                                    "params": [
                                      "_o0",
                                      "_o1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm_init",
                                  "attributes": {
                                    "code": {
                                      "string_data": "out = 0",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm_init",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {},
                                    "out_connectors": {
                                      "out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_init_map[_o0=0:S0G1*S1G1*S2G1*S3G1, _o1=0:R4G1]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": null,
                                        "other_subset": null,
                                        "data": null,
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": null,
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "3",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            },
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__state",
                              "id": 1,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4,
                                  5
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_map[__i0=0:S0G1*S1G1*S2G1*S3G1, __i1=0:R4G1, __i2=0:S4G1]",
                                  "attributes": {
                                    "label": "gemm_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S4G1 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__a": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      },
                                      "IN__b": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__a": "float64",
                                      "OUT__b": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm",
                                  "attributes": {
                                    "code": {
                                      "string_data": "__out = (__a * __b)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "__a": "float64",
                                      "__b": "float64"
                                    },
                                    "out_connectors": {
                                      "__out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_map[__i0=0:S0G1*S1G1*S2G1*S3G1, __i1=0:R4G1, __i2=0:S4G1]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_a",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_a",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_b",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_b",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 5,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__a",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "4",
                                  "dst": "0",
                                  "dst_connector": "IN__b",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__a",
                                  "src_connector": "OUT__a"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__b",
                                  "src_connector": "OUT__b"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G1 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1*S4G1"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "5",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "__out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [
                            {
                              "type": "Edge",
                              "attributes": {
                                "data": {
                                  "type": "InterstateEdge",
                                  "attributes": {
                                    "assignments": {},
                                    "condition": {
                                      "string_data": "1",
                                      "language": "Python"
                                    }
                                  },
                                  "label": ""
                                }
                              },
                              "src": "0",
                              "dst": "1"
                            }
                          ],
                          "sdfg_list_id": 4,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R4G1": "R4G1",
                          "S0G1": "S0G1",
                          "S1G1": "S1G1",
                          "S2G1": "S2G1",
                          "S3G1": "S3G1",
                          "S4G1": "S4G1"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_GEMM_",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_a": {
                            "type": "pointer",
                            "dtype": "float64"
                          },
                          "_b": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_c": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 6,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "6",
                      "dst_connector": "_a",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G1*S4G1"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "6",
                      "dst_connector": "_b",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S4G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G1*S4G1"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "3",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__gemm_out",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1*S1G1*S2G1*S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                          }
                        }
                      },
                      "src": "6",
                      "dst": "5",
                      "dst_connector": null,
                      "src_connector": "_c"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G1 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "views"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [
                {
                  "type": "Edge",
                  "attributes": {
                    "data": {
                      "type": "InterstateEdge",
                      "attributes": {
                        "assignments": {},
                        "condition": {
                          "string_data": "1",
                          "language": "Python"
                        }
                      },
                      "label": ""
                    }
                  },
                  "src": "0",
                  "dst": "1"
                }
              ],
              "sdfg_list_id": 1,
              "start_state": 0
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R4G1": "R4G1",
              "S0G1": "S0G1",
              "S1G1": "S1G1",
              "S2G1": "S2G1",
              "S3G1": "S3G1",
              "S4G1": "S4G1"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorDot_",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_left_tensor": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_right_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 86,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Reduce_",
          "attributes": {
            "code": {
              "string_data": "if (__state->__pgrid_2_size > 1) {\n                    if (__state->__pgrid_2_rank == _root) {\n                \n                    MPI_Reduce(MPI_IN_PLACE, _outbuffer, S0G1*S1G1*S2G1*S3G1*R4G1, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_2_comm);\n                } else {            \n            MPI_Reduce(_inbuffer, _outbuffer, S0G1*S1G1*S2G1*S3G1*R4G1, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_2_comm);}}",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Reduce_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 87,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__rdistrarray_0",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __rdistrarray_0;",
              "int __rdistrarray_0_sends;",
              "MPI_Datatype* __rdistrarray_0_send_types;",
              "int* __rdistrarray_0_dst_ranks;",
              "int __rdistrarray_0_recvs;",
              "MPI_Datatype* __rdistrarray_0_recv_types;",
              "int* __rdistrarray_0_src_ranks;",
              "int __rdistrarray_0_self_copies;",
              "int* __rdistrarray_0_self_src;",
              "int* __rdistrarray_0_self_dst;",
              "int* __rdistrarray_0_self_size;",
              "long long int* __rdistrarray_0_send_sizes;",
              "double __rdistrarray_0_total_send_size;",
              "double __rdistrarray_0_total_copy_size;",
              "MPI_Request* __rdistrarray_0_send_req;",
              "MPI_Request* __rdistrarray_0_recv_req;",
              "MPI_Status* __rdistrarray_0_send_status;",
              "MPI_Status* __rdistrarray_0_recv_status;",
              "int* __rdistrarray_0_fix_send_src;",
              "int* __rdistrarray_0_fix_send_size;",
              "int* __rdistrarray_0_fix_recv_dst;",
              "int* __rdistrarray_0_fix_recv_size;",
              "double** __rdistrarray_0_send_buffers;",
              "double** __rdistrarray_0_recv_buffers;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__rdistrarray_0",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 88,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Redistribute_",
          "attributes": {
            "code": {
              "string_data": "\n                // int myrank;\n                // MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                // MPI_Status recv_status;\n                if (__state->__pgrid_1_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_sends; ++__idx) {\n                        // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I send to %d\\n\", myrank, __state->__rdistrarray_0_dst_ranks[__idx]);\n                        // fflush(stdout);\n                        __state->__rdistrarray_0_total_send_size += __state->__rdistrarray_0_send_sizes[__idx];\n                        // MPI_Isend(_inp_buffer, 1, __state->__rdistrarray_0_send_types[__idx], __state->__rdistrarray_0_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_0_send_req[__idx]);\n                        int __inp_s0 = __state->__rdistrarray_0_fix_send_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_0_fix_send_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_0_fix_send_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_0_fix_send_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_0_fix_send_src[__idx * 5 + 4];\n\n                        int __send_strides[5];\n__send_strides[5 - 1] = 1;\n__send_strides[3] = __send_strides[4] * __state->__rdistrarray_0_fix_send_size[__idx * 5 + 4];\n__send_strides[2] = __send_strides[3] * __state->__rdistrarray_0_fix_send_size[__idx * 5 + 3];\n__send_strides[1] = __send_strides[2] * __state->__rdistrarray_0_fix_send_size[__idx * 5 + 2];\n__send_strides[0] = __send_strides[1] * __state->__rdistrarray_0_fix_send_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_0_fix_send_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R4G1 * S1G1) * S2G1) * S3G1) * __inp_s0) + (((R4G1 * S2G1) * S3G1) * __inp_s1)) + ((R4G1 * S3G1) * __inp_s2)) + (R4G1 * __inp_s3)) + __inp_s4) + __m0_idx * R4G1*S1G1*S2G1*S3G1,\n                        __state->__rdistrarray_0_send_buffers[__idx] + __m0_idx * __send_strides[0],\n                        __state->__rdistrarray_0_fix_send_size[__idx * 5 + 1], R4G1*S2G1*S3G1, __send_strides[1], __state->__rdistrarray_0_fix_send_size[__idx * 5 + 2], R4G1*S3G1, __send_strides[2], __state->__rdistrarray_0_fix_send_size[__idx * 5 + 3], R4G1, __send_strides[3], __state->__rdistrarray_0_fix_send_size[__idx * 5 + 4], 1, __send_strides[4]\n                    );\n                }\n            \n                        MPI_Isend(__state->__rdistrarray_0_send_buffers[__idx], __state->__rdistrarray_0_send_sizes[__idx], MPI_DOUBLE, __state->__rdistrarray_0_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_0_send_req[__idx]);\n                    }\n                }\n                if (__state->__pgrid_4_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_recvs; ++__idx) {\n                        // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I receive from %d\\n\", myrank, __state->__rdistrarray_0_src_ranks[__idx]);\n                        // fflush(stdout);\n                        // MPI_Recv(_out_buffer, 1, __state->__rdistrarray_0_recv_types[__idx], __state->__rdistrarray_0_src_ranks[__idx], 0, MPI_COMM_WORLD, &recv_status);\n                        // MPI_Irecv(_out_buffer, 1, __state->__rdistrarray_0_recv_types[__idx], __state->__rdistrarray_0_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_0_recv_req[__idx]);\n                        int __recv_len = __state->__rdistrarray_0_fix_recv_size[(__idx + 1) * 5 - 1];\n__recv_len *= __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 3];\n__recv_len *= __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 2];\n__recv_len *= __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 1];\n__recv_len *= __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 0];\n\n                        MPI_Irecv(__state->__rdistrarray_0_recv_buffers[__idx], __recv_len, MPI_DOUBLE, __state->__rdistrarray_0_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_0_recv_req[__idx]);\n                    }\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_self_copies; ++__idx) {\n                        // printf(\"(__subarray_0 -> __subarray_1) I am rank %d and I self-copy\\n\", myrank);\n                        // fflush(stdout);\n                        int __inp_s0 = __state->__rdistrarray_0_self_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_0_self_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_0_self_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_0_self_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_0_self_src[__idx * 5 + 4];\n\n                        int __out_s0 = __state->__rdistrarray_0_self_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_0_self_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_0_self_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_0_self_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_0_self_dst[__idx * 5 + 4];\n\n                        __state->__rdistrarray_0_total_copy_size += __state->__rdistrarray_0_self_size[__idx * 5 + 0]* __state->__rdistrarray_0_self_size[__idx * 5 + 1]* __state->__rdistrarray_0_self_size[__idx * 5 + 2]* __state->__rdistrarray_0_self_size[__idx * 5 + 3]* __state->__rdistrarray_0_self_size[__idx * 5 + 4];\n                        \n                int __m0_size = __state->__rdistrarray_0_self_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R4G1 * S1G1) * S2G1) * S3G1) * __inp_s0) + (((R4G1 * S2G1) * S3G1) * __inp_s1)) + ((R4G1 * S3G1) * __inp_s2)) + (R4G1 * __inp_s3)) + __inp_s4) + __m0_idx * R4G1*S1G1*S2G1*S3G1,\n                        _out_buffer + ((((((((R4G2 * S1G2) * S2G2) * S3G2) * __out_s0) + (((R4G2 * S2G2) * S3G2) * __out_s1)) + ((R4G2 * S3G2) * __out_s2)) + (R4G2 * __out_s3)) + __out_s4) + __m0_idx * R4G2*S1G2*S2G2*S3G2,\n                        __state->__rdistrarray_0_self_size[__idx * 5 + 1], R4G1*S2G1*S3G1, R4G2*S2G2*S3G2, __state->__rdistrarray_0_self_size[__idx * 5 + 2], R4G1*S3G1, R4G2*S3G2, __state->__rdistrarray_0_self_size[__idx * 5 + 3], R4G1, R4G2, __state->__rdistrarray_0_self_size[__idx * 5 + 4], 1, 1\n                    );\n                }\n            \n                    }\n                    MPI_Waitall(__state->__rdistrarray_0_recvs, __state->__rdistrarray_0_recv_req, __state->__rdistrarray_0_recv_status);\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_0_recvs; ++__idx) {\n                        int __out_s0 = __state->__rdistrarray_0_fix_recv_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_0_fix_recv_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_0_fix_recv_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_0_fix_recv_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_0_fix_recv_dst[__idx * 5 + 4];\n\n                        int __recv_strides[5];\n__recv_strides[5 - 1] = 1;\n__recv_strides[3] = __recv_strides[4] * __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 4];\n__recv_strides[2] = __recv_strides[3] * __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 3];\n__recv_strides[1] = __recv_strides[2] * __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 2];\n__recv_strides[0] = __recv_strides[1] * __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_0_fix_recv_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        __state->__rdistrarray_0_recv_buffers[__idx] + __m0_idx * __recv_strides[0],\n                        _out_buffer + ((((((((R4G2 * S1G2) * S2G2) * S3G2) * __out_s0) + (((R4G2 * S2G2) * S3G2) * __out_s1)) + ((R4G2 * S3G2) * __out_s2)) + (R4G2 * __out_s3)) + __out_s4) + __m0_idx * R4G2*S1G2*S2G2*S3G2,\n                        __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 1], __recv_strides[1], R4G2*S2G2*S3G2, __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 2], __recv_strides[2], R4G2*S3G2, __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 3], __recv_strides[3], R4G2, __state->__rdistrarray_0_fix_recv_size[__idx * 5 + 4], __recv_strides[4], 1\n                    );\n                }\n            \n                    }\n\n                }\n                if (__state->__pgrid_1_valid) {\n                    MPI_Waitall(__state->__rdistrarray_0_sends, __state->__rdistrarray_0_send_req, __state->__rdistrarray_0_send_status);\n                }\n                \n                // printf(\"I am rank %d and I finished the redistribution __subarray_0 -> __subarray_1\\n\", myrank);\n                // fflush(stdout);\n                \n            ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Redistribute_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inp_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 89,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Bcast_",
          "attributes": {
            "code": {
              "string_data": "\n            if (__state->__pgrid_5_size > 1) {\n            MPI_Bcast(_inbuffer, S0G2*S1G2*S2G2*S3G2*R4G2, MPI_DOUBLE, _root, __state->__pgrid_5_comm);\n            }\n            _outbuffer = _inbuffer;\n        ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Bcast_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 90,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorTranspose",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_inp_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G2*S1G2*S2G2*S3G2",
                        "R4G2*S2G2*S3G2",
                        "R4G2*S3G2",
                        "R4G2",
                        "1"
                      ],
                      "total_size": "R4G2*S1G2*S2G2*S3G2*(S0G2 - 1) + R4G2*S2G2*S3G2*(S1G2 - 1) + R4G2*S3G2*(S2G2 - 1) + R4G2*(S3G2 - 1) + R4G2",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G2",
                        "S1G2",
                        "S2G2",
                        "S3G2",
                        "R4G2"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S0G2*S1G2*S2G2*S3G2",
                        "S1G2*S2G2*S3G2",
                        "S2G2*S3G2",
                        "S3G2",
                        "1"
                      ],
                      "total_size": "S0G2*S1G2*S2G2*S3G2*(R4G2 - 1) + S1G2*S2G2*S3G2*(S0G2 - 1) + S2G2*S3G2*(S1G2 - 1) + S3G2*(S2G2 - 1) + S3G2",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2",
                        "S0G2",
                        "S1G2",
                        "S2G2",
                        "S3G2"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R4G2": "int32",
                  "S0G2": "int32",
                  "S1G2": "int32",
                  "S2G2": "int32",
                  "S3G2": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorTranspose_sdfg_3"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorTranspose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      3,
                      4
                    ],
                    "0": [
                      1,
                      2
                    ]
                  },
                  "nodes": [
                    {
                      "type": "MapEntry",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:S0G2, __i1=0:S1G2, __i2=0:S2G2, __i3=0:S3G2, __i4=0:R4G2]",
                      "attributes": {
                        "label": "_TensorTranspose_tasklet_map",
                        "params": [
                          "__i0",
                          "__i1",
                          "__i2",
                          "__i3",
                          "__i4"
                        ],
                        "range": {
                          "type": "Range",
                          "ranges": [
                            {
                              "start": "0",
                              "end": "S0G2 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S1G2 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S2G2 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S3G2 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R4G2 - 1",
                              "step": "1",
                              "tile": "1"
                            }
                          ]
                        },
                        "schedule": "CPU_Multicore",
                        "unroll": false,
                        "collapse": 1,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "omp_num_threads": 0,
                        "omp_schedule": "Default",
                        "omp_chunk_size": 0,
                        "in_connectors": {
                          "IN__inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "OUT__inp_tensor": "float64"
                        }
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": "2"
                    },
                    {
                      "type": "Tasklet",
                      "label": "_TensorTranspose_tasklet",
                      "attributes": {
                        "code": {
                          "string_data": "_out = (1 * _inp)",
                          "language": "Python"
                        },
                        "state_fields": [],
                        "code_global": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_init": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_exit": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "instrument": "No_Instrumentation",
                        "side_effects": null,
                        "label": "_TensorTranspose_tasklet",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp": "float64"
                        },
                        "out_connectors": {
                          "_out": "float64"
                        }
                      },
                      "id": 1,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "MapExit",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:S0G2, __i1=0:S1G2, __i2=0:S2G2, __i3=0:S3G2, __i4=0:R4G2]",
                      "attributes": {
                        "in_connectors": {
                          "IN__out_tensor": "float64"
                        },
                        "out_connectors": {
                          "OUT__out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 2,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "AccessNode",
                      "label": "_inp_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1268,
                          "end_line": 1268,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_inp_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1273,
                          "end_line": 1273,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "0",
                      "dst_connector": "IN__inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "_inp",
                      "src_connector": "OUT__inp_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "OUT__out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "2",
                      "dst_connector": "IN__out_tensor",
                      "src_connector": "_out"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [],
              "sdfg_list_id": 5,
              "start_state": null
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R4G2": "R4G2",
              "S0G2": "S0G2",
              "S1G2": "S1G2",
              "S2G2": "S2G2",
              "S3G2": "S3G2"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorTranspose",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_inp_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 91,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorDot_",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_left_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S0G2*S1G2*S2G2*S3G2",
                        "S1G2*S2G2*S3G2",
                        "S2G2*S3G2",
                        "S3G2",
                        "1"
                      ],
                      "total_size": "S0G2*S1G2*S2G2*S3G2*(R4G2 - 1) + S1G2*S2G2*S3G2*(S0G2 - 1) + S2G2*S3G2*(S1G2 - 1) + S3G2*(S2G2 - 1) + S3G2",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2",
                        "S0G2",
                        "S1G2",
                        "S2G2",
                        "S3G2"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_right_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G2",
                        "1"
                      ],
                      "total_size": "R3G2*(S3G2 - 1) + R3G2",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S3G2",
                        "R3G2"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G2*S0G2*S1G2*S2G2",
                        "R3G2*S1G2*S2G2",
                        "R3G2*S2G2",
                        "R3G2",
                        "1"
                      ],
                      "total_size": "R3G2*S0G2*S1G2*S2G2*(R4G2 - 1) + R3G2*S1G2*S2G2*(S0G2 - 1) + R3G2*S2G2*(S1G2 - 1) + R3G2*(S2G2 - 1) + R3G2",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2",
                        "S0G2",
                        "S1G2",
                        "S2G2",
                        "R3G2"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S0G2*S1G2*S2G2*S3G2",
                        "S1G2*S2G2*S3G2",
                        "S2G2*S3G2",
                        "S3G2",
                        "1"
                      ],
                      "total_size": "R4G2*S0G2*S1G2*S2G2*S3G2",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2",
                        "S0G2",
                        "S1G2",
                        "S2G2",
                        "S3G2"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G2",
                        "1"
                      ],
                      "total_size": "R3G2*S3G2",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S3G2",
                        "R3G2"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S3G2",
                        "1"
                      ],
                      "total_size": "S3G2*(R4G2*S0G2*S1G2*S2G2 - 1) + S3G2",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2*S0G2*S1G2*S2G2",
                        "S3G2"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G2",
                        "1"
                      ],
                      "total_size": "R3G2*(S3G2 - 1) + R3G2",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S3G2",
                        "R3G2"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__gemm_out": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G2",
                        "1"
                      ],
                      "total_size": "R3G2*(R4G2*S0G2*S1G2*S2G2 - 1) + R3G2",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G2*S0G2*S1G2*S2G2",
                        "R3G2"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R3G2": "int32",
                  "R4G2": "int32",
                  "S0G2": "int32",
                  "S1G2": "int32",
                  "S2G2": "int32",
                  "S3G2": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorDot__sdfg_2"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__inp_transpose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "_left_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_left_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_right_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_right_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S0G2*S1G2*S2G2*S3G2",
                                    "S1G2*S2G2*S3G2",
                                    "S2G2*S3G2",
                                    "S3G2",
                                    "1"
                                  ],
                                  "total_size": "S0G2*S1G2*S2G2*S3G2*(R4G2 - 1) + S1G2*S2G2*S3G2*(S0G2 - 1) + S2G2*S3G2*(S1G2 - 1) + S3G2*(S2G2 - 1) + S3G2",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R4G2",
                                    "S0G2",
                                    "S1G2",
                                    "S2G2",
                                    "S3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S0G2*S1G2*S2G2*S3G2",
                                    "S1G2*S2G2*S3G2",
                                    "S2G2*S3G2",
                                    "S3G2",
                                    "1"
                                  ],
                                  "total_size": "S0G2*S1G2*S2G2*S3G2*(R4G2 - 1) + S1G2*S2G2*S3G2*(S0G2 - 1) + S2G2*S3G2*(S1G2 - 1) + S3G2*(S2G2 - 1) + S3G2",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R4G2",
                                    "S0G2",
                                    "S1G2",
                                    "S2G2",
                                    "S3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R4G2": "int32",
                              "S0G2": "int32",
                              "S1G2": "int32",
                              "S2G2": "int32",
                              "S3G2": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_4"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R4G2, __i1=0:S0G2, __i2=0:S1G2, __i3=0:S2G2, __i4=0:S3G2]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2",
                                      "__i3",
                                      "__i4"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R4G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S0G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S1G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S2G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R4G2, __i1=0:S0G2, __i2=0:S1G2, __i3=0:S2G2, __i4=0:S3G2]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 7,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R4G2": "R4G2",
                          "S0G2": "S0G2",
                          "S1G2": "S1G2",
                          "S2G2": "S2G2",
                          "S3G2": "S3G2"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G2",
                                    "1"
                                  ],
                                  "total_size": "R3G2*(S3G2 - 1) + R3G2",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S3G2",
                                    "R3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G2",
                                    "1"
                                  ],
                                  "total_size": "R3G2*(S3G2 - 1) + R3G2",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S3G2",
                                    "R3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R3G2": "int32",
                              "S3G2": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_5"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S3G2, __i1=0:R3G2]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S3G2, __i1=0:R3G2]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R3G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R3G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 8,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R3G2": "R3G2",
                          "S3G2": "S3G2"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_left_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "4",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_right_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G2*S3G2"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "5",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "4",
                      "dst": "1",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R3G2*S3G2"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "3",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                },
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__gemm_state",
                  "id": 1,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 139,
                          "end_line": 139,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 140,
                          "end_line": 140,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 150,
                          "end_line": 150,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 151,
                          "end_line": 151,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 186,
                          "end_line": 186,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__gemm_out",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 187,
                          "end_line": 187,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__gemm_out",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_GEMM_",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_a": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S3G2",
                                    "1"
                                  ],
                                  "total_size": "S3G2*(R4G2*S0G2*S1G2*S2G2 - 1) + S3G2",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R4G2*S0G2*S1G2*S2G2",
                                    "S3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_b": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G2",
                                    "1"
                                  ],
                                  "total_size": "R3G2*(S3G2 - 1) + R3G2",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S3G2",
                                    "R3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_c": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G2",
                                    "1"
                                  ],
                                  "total_size": "R3G2*(R4G2*S0G2*S1G2*S2G2 - 1) + R3G2",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R4G2*S0G2*S1G2*S2G2",
                                    "R3G2"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R3G2": "int32",
                              "R4G2": "int32",
                              "S0G2": "int32",
                              "S1G2": "int32",
                              "S2G2": "int32",
                              "S3G2": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_GEMM__sdfg_2"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__initstate",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_init_map[_o0=0:R4G2*S0G2*S1G2*S2G2, _o1=0:R3G2]",
                                  "attributes": {
                                    "label": "gemm_init_map",
                                    "params": [
                                      "_o0",
                                      "_o1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm_init",
                                  "attributes": {
                                    "code": {
                                      "string_data": "out = 0",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm_init",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {},
                                    "out_connectors": {
                                      "out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_init_map[_o0=0:R4G2*S0G2*S1G2*S2G2, _o1=0:R3G2]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": null,
                                        "other_subset": null,
                                        "data": null,
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": null,
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "3",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            },
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__state",
                              "id": 1,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4,
                                  5
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_map[__i0=0:R4G2*S0G2*S1G2*S2G2, __i1=0:R3G2, __i2=0:S3G2]",
                                  "attributes": {
                                    "label": "gemm_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S3G2 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__a": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      },
                                      "IN__b": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__a": "float64",
                                      "OUT__b": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm",
                                  "attributes": {
                                    "code": {
                                      "string_data": "__out = (__a * __b)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "__a": "float64",
                                      "__b": "float64"
                                    },
                                    "out_connectors": {
                                      "__out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_map[__i0=0:R4G2*S0G2*S1G2*S2G2, __i1=0:R3G2, __i2=0:S3G2]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_a",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_a",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_b",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_b",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 5,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__a",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "4",
                                  "dst": "0",
                                  "dst_connector": "IN__b",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__a",
                                  "src_connector": "OUT__a"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__b",
                                  "src_connector": "OUT__b"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G2 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2*S3G2"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "5",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "__out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [
                            {
                              "type": "Edge",
                              "attributes": {
                                "data": {
                                  "type": "InterstateEdge",
                                  "attributes": {
                                    "assignments": {},
                                    "condition": {
                                      "string_data": "1",
                                      "language": "Python"
                                    }
                                  },
                                  "label": ""
                                }
                              },
                              "src": "0",
                              "dst": "1"
                            }
                          ],
                          "sdfg_list_id": 9,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R3G2": "R3G2",
                          "R4G2": "R4G2",
                          "S0G2": "S0G2",
                          "S1G2": "S1G2",
                          "S2G2": "S2G2",
                          "S3G2": "S3G2"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_GEMM_",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_a": {
                            "type": "pointer",
                            "dtype": "float64"
                          },
                          "_b": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_c": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 6,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "6",
                      "dst_connector": "_a",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G2*S3G2"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "6",
                      "dst_connector": "_b",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*S3G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G2*S3G2"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "3",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__gemm_out",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2*S0G2*S1G2*S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                          }
                        }
                      },
                      "src": "6",
                      "dst": "5",
                      "dst_connector": null,
                      "src_connector": "_c"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G2 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "views"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [
                {
                  "type": "Edge",
                  "attributes": {
                    "data": {
                      "type": "InterstateEdge",
                      "attributes": {
                        "assignments": {},
                        "condition": {
                          "string_data": "1",
                          "language": "Python"
                        }
                      },
                      "label": ""
                    }
                  },
                  "src": "0",
                  "dst": "1"
                }
              ],
              "sdfg_list_id": 6,
              "start_state": 0
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R3G2": "R3G2",
              "R4G2": "R4G2",
              "S0G2": "S0G2",
              "S1G2": "S1G2",
              "S2G2": "S2G2",
              "S3G2": "S3G2"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorDot_",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_left_tensor": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_right_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 92,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Reduce_",
          "attributes": {
            "code": {
              "string_data": "if (__state->__pgrid_7_size > 1) {\n                    if (__state->__pgrid_7_rank == _root) {\n                \n                    MPI_Reduce(MPI_IN_PLACE, _outbuffer, R4G2*S0G2*S1G2*S2G2*R3G2, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_7_comm);\n                } else {            \n            MPI_Reduce(_inbuffer, _outbuffer, R4G2*S0G2*S1G2*S2G2*R3G2, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_7_comm);}}",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Reduce_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 93,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__rdistrarray_1",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __rdistrarray_1;",
              "int __rdistrarray_1_sends;",
              "MPI_Datatype* __rdistrarray_1_send_types;",
              "int* __rdistrarray_1_dst_ranks;",
              "int __rdistrarray_1_recvs;",
              "MPI_Datatype* __rdistrarray_1_recv_types;",
              "int* __rdistrarray_1_src_ranks;",
              "int __rdistrarray_1_self_copies;",
              "int* __rdistrarray_1_self_src;",
              "int* __rdistrarray_1_self_dst;",
              "int* __rdistrarray_1_self_size;",
              "long long int* __rdistrarray_1_send_sizes;",
              "double __rdistrarray_1_total_send_size;",
              "double __rdistrarray_1_total_copy_size;",
              "MPI_Request* __rdistrarray_1_send_req;",
              "MPI_Request* __rdistrarray_1_recv_req;",
              "MPI_Status* __rdistrarray_1_send_status;",
              "MPI_Status* __rdistrarray_1_recv_status;",
              "int* __rdistrarray_1_fix_send_src;",
              "int* __rdistrarray_1_fix_send_size;",
              "int* __rdistrarray_1_fix_recv_dst;",
              "int* __rdistrarray_1_fix_recv_size;",
              "double** __rdistrarray_1_send_buffers;",
              "double** __rdistrarray_1_recv_buffers;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__rdistrarray_1",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 94,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Redistribute_",
          "attributes": {
            "code": {
              "string_data": "\n                // int myrank;\n                // MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                // MPI_Status recv_status;\n                if (__state->__pgrid_6_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_sends; ++__idx) {\n                        // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I send to %d\\n\", myrank, __state->__rdistrarray_1_dst_ranks[__idx]);\n                        // fflush(stdout);\n                        __state->__rdistrarray_1_total_send_size += __state->__rdistrarray_1_send_sizes[__idx];\n                        // MPI_Isend(_inp_buffer, 1, __state->__rdistrarray_1_send_types[__idx], __state->__rdistrarray_1_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_1_send_req[__idx]);\n                        int __inp_s0 = __state->__rdistrarray_1_fix_send_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_1_fix_send_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_1_fix_send_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_1_fix_send_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_1_fix_send_src[__idx * 5 + 4];\n\n                        int __send_strides[5];\n__send_strides[5 - 1] = 1;\n__send_strides[3] = __send_strides[4] * __state->__rdistrarray_1_fix_send_size[__idx * 5 + 4];\n__send_strides[2] = __send_strides[3] * __state->__rdistrarray_1_fix_send_size[__idx * 5 + 3];\n__send_strides[1] = __send_strides[2] * __state->__rdistrarray_1_fix_send_size[__idx * 5 + 2];\n__send_strides[0] = __send_strides[1] * __state->__rdistrarray_1_fix_send_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_1_fix_send_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R3G2 * S0G2) * S1G2) * S2G2) * __inp_s0) + (((R3G2 * S1G2) * S2G2) * __inp_s1)) + ((R3G2 * S2G2) * __inp_s2)) + (R3G2 * __inp_s3)) + __inp_s4) + __m0_idx * R3G2*S0G2*S1G2*S2G2,\n                        __state->__rdistrarray_1_send_buffers[__idx] + __m0_idx * __send_strides[0],\n                        __state->__rdistrarray_1_fix_send_size[__idx * 5 + 1], R3G2*S1G2*S2G2, __send_strides[1], __state->__rdistrarray_1_fix_send_size[__idx * 5 + 2], R3G2*S2G2, __send_strides[2], __state->__rdistrarray_1_fix_send_size[__idx * 5 + 3], R3G2, __send_strides[3], __state->__rdistrarray_1_fix_send_size[__idx * 5 + 4], 1, __send_strides[4]\n                    );\n                }\n            \n                        MPI_Isend(__state->__rdistrarray_1_send_buffers[__idx], __state->__rdistrarray_1_send_sizes[__idx], MPI_DOUBLE, __state->__rdistrarray_1_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_1_send_req[__idx]);\n                    }\n                }\n                if (__state->__pgrid_9_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_recvs; ++__idx) {\n                        // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I receive from %d\\n\", myrank, __state->__rdistrarray_1_src_ranks[__idx]);\n                        // fflush(stdout);\n                        // MPI_Recv(_out_buffer, 1, __state->__rdistrarray_1_recv_types[__idx], __state->__rdistrarray_1_src_ranks[__idx], 0, MPI_COMM_WORLD, &recv_status);\n                        // MPI_Irecv(_out_buffer, 1, __state->__rdistrarray_1_recv_types[__idx], __state->__rdistrarray_1_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_1_recv_req[__idx]);\n                        int __recv_len = __state->__rdistrarray_1_fix_recv_size[(__idx + 1) * 5 - 1];\n__recv_len *= __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 3];\n__recv_len *= __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 2];\n__recv_len *= __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 1];\n__recv_len *= __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 0];\n\n                        MPI_Irecv(__state->__rdistrarray_1_recv_buffers[__idx], __recv_len, MPI_DOUBLE, __state->__rdistrarray_1_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_1_recv_req[__idx]);\n                    }\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_self_copies; ++__idx) {\n                        // printf(\"(__subarray_2 -> __subarray_3) I am rank %d and I self-copy\\n\", myrank);\n                        // fflush(stdout);\n                        int __inp_s0 = __state->__rdistrarray_1_self_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_1_self_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_1_self_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_1_self_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_1_self_src[__idx * 5 + 4];\n\n                        int __out_s0 = __state->__rdistrarray_1_self_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_1_self_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_1_self_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_1_self_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_1_self_dst[__idx * 5 + 4];\n\n                        __state->__rdistrarray_1_total_copy_size += __state->__rdistrarray_1_self_size[__idx * 5 + 0]* __state->__rdistrarray_1_self_size[__idx * 5 + 1]* __state->__rdistrarray_1_self_size[__idx * 5 + 2]* __state->__rdistrarray_1_self_size[__idx * 5 + 3]* __state->__rdistrarray_1_self_size[__idx * 5 + 4];\n                        \n                int __m0_size = __state->__rdistrarray_1_self_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R3G2 * S0G2) * S1G2) * S2G2) * __inp_s0) + (((R3G2 * S1G2) * S2G2) * __inp_s1)) + ((R3G2 * S2G2) * __inp_s2)) + (R3G2 * __inp_s3)) + __inp_s4) + __m0_idx * R3G2*S0G2*S1G2*S2G2,\n                        _out_buffer + ((((((((R3G3 * S0G3) * S1G3) * S2G3) * __out_s0) + (((R3G3 * S1G3) * S2G3) * __out_s1)) + ((R3G3 * S2G3) * __out_s2)) + (R3G3 * __out_s3)) + __out_s4) + __m0_idx * R3G3*S0G3*S1G3*S2G3,\n                        __state->__rdistrarray_1_self_size[__idx * 5 + 1], R3G2*S1G2*S2G2, R3G3*S1G3*S2G3, __state->__rdistrarray_1_self_size[__idx * 5 + 2], R3G2*S2G2, R3G3*S2G3, __state->__rdistrarray_1_self_size[__idx * 5 + 3], R3G2, R3G3, __state->__rdistrarray_1_self_size[__idx * 5 + 4], 1, 1\n                    );\n                }\n            \n                    }\n                    MPI_Waitall(__state->__rdistrarray_1_recvs, __state->__rdistrarray_1_recv_req, __state->__rdistrarray_1_recv_status);\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_1_recvs; ++__idx) {\n                        int __out_s0 = __state->__rdistrarray_1_fix_recv_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_1_fix_recv_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_1_fix_recv_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_1_fix_recv_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_1_fix_recv_dst[__idx * 5 + 4];\n\n                        int __recv_strides[5];\n__recv_strides[5 - 1] = 1;\n__recv_strides[3] = __recv_strides[4] * __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 4];\n__recv_strides[2] = __recv_strides[3] * __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 3];\n__recv_strides[1] = __recv_strides[2] * __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 2];\n__recv_strides[0] = __recv_strides[1] * __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_1_fix_recv_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        __state->__rdistrarray_1_recv_buffers[__idx] + __m0_idx * __recv_strides[0],\n                        _out_buffer + ((((((((R3G3 * S0G3) * S1G3) * S2G3) * __out_s0) + (((R3G3 * S1G3) * S2G3) * __out_s1)) + ((R3G3 * S2G3) * __out_s2)) + (R3G3 * __out_s3)) + __out_s4) + __m0_idx * R3G3*S0G3*S1G3*S2G3,\n                        __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 1], __recv_strides[1], R3G3*S1G3*S2G3, __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 2], __recv_strides[2], R3G3*S2G3, __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 3], __recv_strides[3], R3G3, __state->__rdistrarray_1_fix_recv_size[__idx * 5 + 4], __recv_strides[4], 1\n                    );\n                }\n            \n                    }\n\n                }\n                if (__state->__pgrid_6_valid) {\n                    MPI_Waitall(__state->__rdistrarray_1_sends, __state->__rdistrarray_1_send_req, __state->__rdistrarray_1_send_status);\n                }\n                \n                // printf(\"I am rank %d and I finished the redistribution __subarray_2 -> __subarray_3\\n\", myrank);\n                // fflush(stdout);\n                \n            ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Redistribute_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inp_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 95,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Bcast_",
          "attributes": {
            "code": {
              "string_data": "\n            if (__state->__pgrid_10_size > 1) {\n            MPI_Bcast(_inbuffer, R4G3*S0G3*S1G3*S2G3*R3G3, MPI_DOUBLE, _root, __state->__pgrid_10_comm);\n            }\n            _outbuffer = _inbuffer;\n        ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Bcast_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 96,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorTranspose",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_inp_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G3*S0G3*S1G3*S2G3",
                        "R3G3*S1G3*S2G3",
                        "R3G3*S2G3",
                        "R3G3",
                        "1"
                      ],
                      "total_size": "R3G3*S0G3*S1G3*S2G3*(R4G3 - 1) + R3G3*S1G3*S2G3*(S0G3 - 1) + R3G3*S2G3*(S1G3 - 1) + R3G3*(S2G3 - 1) + R3G3",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R4G3",
                        "S0G3",
                        "S1G3",
                        "S2G3",
                        "R3G3"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G3*S0G3*S1G3*S2G3",
                        "S0G3*S1G3*S2G3",
                        "S1G3*S2G3",
                        "S2G3",
                        "1"
                      ],
                      "total_size": "R4G3*S0G3*S1G3*S2G3*(R3G3 - 1) + S0G3*S1G3*S2G3*(R4G3 - 1) + S1G3*S2G3*(S0G3 - 1) + S2G3*(S1G3 - 1) + S2G3",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3",
                        "R4G3",
                        "S0G3",
                        "S1G3",
                        "S2G3"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R3G3": "int32",
                  "R4G3": "int32",
                  "S0G3": "int32",
                  "S1G3": "int32",
                  "S2G3": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorTranspose_sdfg_6"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorTranspose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      3,
                      4
                    ],
                    "0": [
                      1,
                      2
                    ]
                  },
                  "nodes": [
                    {
                      "type": "MapEntry",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R4G3, __i1=0:S0G3, __i2=0:S1G3, __i3=0:S2G3, __i4=0:R3G3]",
                      "attributes": {
                        "label": "_TensorTranspose_tasklet_map",
                        "params": [
                          "__i0",
                          "__i1",
                          "__i2",
                          "__i3",
                          "__i4"
                        ],
                        "range": {
                          "type": "Range",
                          "ranges": [
                            {
                              "start": "0",
                              "end": "R4G3 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S0G3 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S1G3 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S2G3 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R3G3 - 1",
                              "step": "1",
                              "tile": "1"
                            }
                          ]
                        },
                        "schedule": "CPU_Multicore",
                        "unroll": false,
                        "collapse": 1,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "omp_num_threads": 0,
                        "omp_schedule": "Default",
                        "omp_chunk_size": 0,
                        "in_connectors": {
                          "IN__inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "OUT__inp_tensor": "float64"
                        }
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": "2"
                    },
                    {
                      "type": "Tasklet",
                      "label": "_TensorTranspose_tasklet",
                      "attributes": {
                        "code": {
                          "string_data": "_out = (1 * _inp)",
                          "language": "Python"
                        },
                        "state_fields": [],
                        "code_global": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_init": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_exit": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "instrument": "No_Instrumentation",
                        "side_effects": null,
                        "label": "_TensorTranspose_tasklet",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp": "float64"
                        },
                        "out_connectors": {
                          "_out": "float64"
                        }
                      },
                      "id": 1,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "MapExit",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R4G3, __i1=0:S0G3, __i2=0:S1G3, __i3=0:S2G3, __i4=0:R3G3]",
                      "attributes": {
                        "in_connectors": {
                          "IN__out_tensor": "float64"
                        },
                        "out_connectors": {
                          "OUT__out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 2,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "AccessNode",
                      "label": "_inp_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1268,
                          "end_line": 1268,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_inp_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1273,
                          "end_line": 1273,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "0",
                      "dst_connector": "IN__inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "_inp",
                      "src_connector": "OUT__inp_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "OUT__out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "2",
                      "dst_connector": "IN__out_tensor",
                      "src_connector": "_out"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [],
              "sdfg_list_id": 10,
              "start_state": null
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R3G3": "R3G3",
              "R4G3": "R4G3",
              "S0G3": "S0G3",
              "S1G3": "S1G3",
              "S2G3": "S2G3"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorTranspose",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_inp_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 97,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorDot_",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_left_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G3*S0G3*S1G3*S2G3",
                        "S0G3*S1G3*S2G3",
                        "S1G3*S2G3",
                        "S2G3",
                        "1"
                      ],
                      "total_size": "R4G3*S0G3*S1G3*S2G3*(R3G3 - 1) + S0G3*S1G3*S2G3*(R4G3 - 1) + S1G3*S2G3*(S0G3 - 1) + S2G3*(S1G3 - 1) + S2G3",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3",
                        "R4G3",
                        "S0G3",
                        "S1G3",
                        "S2G3"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_right_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G3",
                        "1"
                      ],
                      "total_size": "R2G3*(S2G3 - 1) + R2G3",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S2G3",
                        "R2G3"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G3*R4G3*S0G3*S1G3",
                        "R2G3*S0G3*S1G3",
                        "R2G3*S1G3",
                        "R2G3",
                        "1"
                      ],
                      "total_size": "R2G3*R4G3*S0G3*S1G3*(R3G3 - 1) + R2G3*S0G3*S1G3*(R4G3 - 1) + R2G3*S1G3*(S0G3 - 1) + R2G3*(S1G3 - 1) + R2G3",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3",
                        "R4G3",
                        "S0G3",
                        "S1G3",
                        "R2G3"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R4G3*S0G3*S1G3*S2G3",
                        "S0G3*S1G3*S2G3",
                        "S1G3*S2G3",
                        "S2G3",
                        "1"
                      ],
                      "total_size": "R3G3*R4G3*S0G3*S1G3*S2G3",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3",
                        "R4G3",
                        "S0G3",
                        "S1G3",
                        "S2G3"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G3",
                        "1"
                      ],
                      "total_size": "R2G3*S2G3",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S2G3",
                        "R2G3"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S2G3",
                        "1"
                      ],
                      "total_size": "S2G3*(R3G3*R4G3*S0G3*S1G3 - 1) + S2G3",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3*R4G3*S0G3*S1G3",
                        "S2G3"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G3",
                        "1"
                      ],
                      "total_size": "R2G3*(S2G3 - 1) + R2G3",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S2G3",
                        "R2G3"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__gemm_out": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G3",
                        "1"
                      ],
                      "total_size": "R2G3*(R3G3*R4G3*S0G3*S1G3 - 1) + R2G3",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G3*R4G3*S0G3*S1G3",
                        "R2G3"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R2G3": "int32",
                  "R3G3": "int32",
                  "R4G3": "int32",
                  "S0G3": "int32",
                  "S1G3": "int32",
                  "S2G3": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorDot__sdfg_3"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__inp_transpose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "_left_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_left_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_right_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_right_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G3*S0G3*S1G3*S2G3",
                                    "S0G3*S1G3*S2G3",
                                    "S1G3*S2G3",
                                    "S2G3",
                                    "1"
                                  ],
                                  "total_size": "R4G3*S0G3*S1G3*S2G3*(R3G3 - 1) + S0G3*S1G3*S2G3*(R4G3 - 1) + S1G3*S2G3*(S0G3 - 1) + S2G3*(S1G3 - 1) + S2G3",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R3G3",
                                    "R4G3",
                                    "S0G3",
                                    "S1G3",
                                    "S2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R4G3*S0G3*S1G3*S2G3",
                                    "S0G3*S1G3*S2G3",
                                    "S1G3*S2G3",
                                    "S2G3",
                                    "1"
                                  ],
                                  "total_size": "R4G3*S0G3*S1G3*S2G3*(R3G3 - 1) + S0G3*S1G3*S2G3*(R4G3 - 1) + S1G3*S2G3*(S0G3 - 1) + S2G3*(S1G3 - 1) + S2G3",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R3G3",
                                    "R4G3",
                                    "S0G3",
                                    "S1G3",
                                    "S2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R3G3": "int32",
                              "R4G3": "int32",
                              "S0G3": "int32",
                              "S1G3": "int32",
                              "S2G3": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_7"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R3G3, __i1=0:R4G3, __i2=0:S0G3, __i3=0:S1G3, __i4=0:S2G3]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2",
                                      "__i3",
                                      "__i4"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R3G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R4G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S0G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S1G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R3G3, __i1=0:R4G3, __i2=0:S0G3, __i3=0:S1G3, __i4=0:S2G3]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 12,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R3G3": "R3G3",
                          "R4G3": "R4G3",
                          "S0G3": "S0G3",
                          "S1G3": "S1G3",
                          "S2G3": "S2G3"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R2G3",
                                    "1"
                                  ],
                                  "total_size": "R2G3*(S2G3 - 1) + R2G3",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S2G3",
                                    "R2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R2G3",
                                    "1"
                                  ],
                                  "total_size": "R2G3*(S2G3 - 1) + R2G3",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S2G3",
                                    "R2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R2G3": "int32",
                              "S2G3": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_8"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S2G3, __i1=0:R2G3]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S2G3, __i1=0:R2G3]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R2G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R2G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 13,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R2G3": "R2G3",
                          "S2G3": "S2G3"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_left_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "4",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_right_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G3*S2G3"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "5",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "4",
                      "dst": "1",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R2G3*S2G3"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "3",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                },
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__gemm_state",
                  "id": 1,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 139,
                          "end_line": 139,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 140,
                          "end_line": 140,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 150,
                          "end_line": 150,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 151,
                          "end_line": 151,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 186,
                          "end_line": 186,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__gemm_out",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 187,
                          "end_line": 187,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__gemm_out",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_GEMM_",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_a": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S2G3",
                                    "1"
                                  ],
                                  "total_size": "S2G3*(R3G3*R4G3*S0G3*S1G3 - 1) + S2G3",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R3G3*R4G3*S0G3*S1G3",
                                    "S2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_b": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R2G3",
                                    "1"
                                  ],
                                  "total_size": "R2G3*(S2G3 - 1) + R2G3",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S2G3",
                                    "R2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_c": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R2G3",
                                    "1"
                                  ],
                                  "total_size": "R2G3*(R3G3*R4G3*S0G3*S1G3 - 1) + R2G3",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R3G3*R4G3*S0G3*S1G3",
                                    "R2G3"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R2G3": "int32",
                              "R3G3": "int32",
                              "R4G3": "int32",
                              "S0G3": "int32",
                              "S1G3": "int32",
                              "S2G3": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_GEMM__sdfg_3"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__initstate",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_init_map[_o0=0:R3G3*R4G3*S0G3*S1G3, _o1=0:R2G3]",
                                  "attributes": {
                                    "label": "gemm_init_map",
                                    "params": [
                                      "_o0",
                                      "_o1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm_init",
                                  "attributes": {
                                    "code": {
                                      "string_data": "out = 0",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm_init",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {},
                                    "out_connectors": {
                                      "out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_init_map[_o0=0:R3G3*R4G3*S0G3*S1G3, _o1=0:R2G3]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": null,
                                        "other_subset": null,
                                        "data": null,
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": null,
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "3",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            },
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__state",
                              "id": 1,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4,
                                  5
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_map[__i0=0:R3G3*R4G3*S0G3*S1G3, __i1=0:R2G3, __i2=0:S2G3]",
                                  "attributes": {
                                    "label": "gemm_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S2G3 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__a": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      },
                                      "IN__b": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__a": "float64",
                                      "OUT__b": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm",
                                  "attributes": {
                                    "code": {
                                      "string_data": "__out = (__a * __b)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "__a": "float64",
                                      "__b": "float64"
                                    },
                                    "out_connectors": {
                                      "__out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_map[__i0=0:R3G3*R4G3*S0G3*S1G3, __i1=0:R2G3, __i2=0:S2G3]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_a",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_a",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_b",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_b",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 5,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__a",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "4",
                                  "dst": "0",
                                  "dst_connector": "IN__b",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__a",
                                  "src_connector": "OUT__a"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__b",
                                  "src_connector": "OUT__b"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R2G3 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3*S2G3"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "5",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "__out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [
                            {
                              "type": "Edge",
                              "attributes": {
                                "data": {
                                  "type": "InterstateEdge",
                                  "attributes": {
                                    "assignments": {},
                                    "condition": {
                                      "string_data": "1",
                                      "language": "Python"
                                    }
                                  },
                                  "label": ""
                                }
                              },
                              "src": "0",
                              "dst": "1"
                            }
                          ],
                          "sdfg_list_id": 14,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R2G3": "R2G3",
                          "R3G3": "R3G3",
                          "R4G3": "R4G3",
                          "S0G3": "S0G3",
                          "S1G3": "S1G3",
                          "S2G3": "S2G3"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_GEMM_",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_a": {
                            "type": "pointer",
                            "dtype": "float64"
                          },
                          "_b": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_c": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 6,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "6",
                      "dst_connector": "_a",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G3*S2G3"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "6",
                      "dst_connector": "_b",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*S2G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G3*S2G3"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "3",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__gemm_out",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3*R4G3*S0G3*S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                          }
                        }
                      },
                      "src": "6",
                      "dst": "5",
                      "dst_connector": null,
                      "src_connector": "_c"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G3 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "views"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [
                {
                  "type": "Edge",
                  "attributes": {
                    "data": {
                      "type": "InterstateEdge",
                      "attributes": {
                        "assignments": {},
                        "condition": {
                          "string_data": "1",
                          "language": "Python"
                        }
                      },
                      "label": ""
                    }
                  },
                  "src": "0",
                  "dst": "1"
                }
              ],
              "sdfg_list_id": 11,
              "start_state": 0
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R2G3": "R2G3",
              "R3G3": "R3G3",
              "R4G3": "R4G3",
              "S0G3": "S0G3",
              "S1G3": "S1G3",
              "S2G3": "S2G3"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorDot_",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_left_tensor": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_right_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 98,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Reduce_",
          "attributes": {
            "code": {
              "string_data": "if (__state->__pgrid_12_size > 1) {\n                    if (__state->__pgrid_12_rank == _root) {\n                \n                    MPI_Reduce(MPI_IN_PLACE, _outbuffer, R3G3*R4G3*S0G3*S1G3*R2G3, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_12_comm);\n                } else {            \n            MPI_Reduce(_inbuffer, _outbuffer, R3G3*R4G3*S0G3*S1G3*R2G3, MPI_DOUBLE, MPI_SUM, _root, __state->__pgrid_12_comm);}}",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Reduce_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 99,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "__rdistrarray_2",
          "attributes": {
            "code": {
              "string_data": "",
              "language": "Python"
            },
            "state_fields": [
              "MPI_Datatype __rdistrarray_2;",
              "int __rdistrarray_2_sends;",
              "MPI_Datatype* __rdistrarray_2_send_types;",
              "int* __rdistrarray_2_dst_ranks;",
              "int __rdistrarray_2_recvs;",
              "MPI_Datatype* __rdistrarray_2_recv_types;",
              "int* __rdistrarray_2_src_ranks;",
              "int __rdistrarray_2_self_copies;",
              "int* __rdistrarray_2_self_src;",
              "int* __rdistrarray_2_self_dst;",
              "int* __rdistrarray_2_self_size;",
              "long long int* __rdistrarray_2_send_sizes;",
              "double __rdistrarray_2_total_send_size;",
              "double __rdistrarray_2_total_copy_size;",
              "MPI_Request* __rdistrarray_2_send_req;",
              "MPI_Request* __rdistrarray_2_recv_req;",
              "MPI_Status* __rdistrarray_2_send_status;",
              "MPI_Status* __rdistrarray_2_recv_status;",
              "int* __rdistrarray_2_fix_send_src;",
              "int* __rdistrarray_2_fix_send_size;",
              "int* __rdistrarray_2_fix_recv_dst;",
              "int* __rdistrarray_2_fix_recv_size;",
              "double** __rdistrarray_2_send_buffers;",
              "double** __rdistrarray_2_recv_buffers;"
            ],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": true,
            "label": "__rdistrarray_2",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {},
            "out_connectors": {
              "__out": "int32"
            }
          },
          "id": 100,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Redistribute_",
          "attributes": {
            "code": {
              "string_data": "\n                // int myrank;\n                // MPI_Comm_rank(MPI_COMM_WORLD, &myrank);\n                // MPI_Status recv_status;\n                if (__state->__pgrid_11_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_sends; ++__idx) {\n                        // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I send to %d\\n\", myrank, __state->__rdistrarray_2_dst_ranks[__idx]);\n                        // fflush(stdout);\n                        __state->__rdistrarray_2_total_send_size += __state->__rdistrarray_2_send_sizes[__idx];\n                        // MPI_Isend(_inp_buffer, 1, __state->__rdistrarray_2_send_types[__idx], __state->__rdistrarray_2_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_2_send_req[__idx]);\n                        int __inp_s0 = __state->__rdistrarray_2_fix_send_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_2_fix_send_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_2_fix_send_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_2_fix_send_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_2_fix_send_src[__idx * 5 + 4];\n\n                        int __send_strides[5];\n__send_strides[5 - 1] = 1;\n__send_strides[3] = __send_strides[4] * __state->__rdistrarray_2_fix_send_size[__idx * 5 + 4];\n__send_strides[2] = __send_strides[3] * __state->__rdistrarray_2_fix_send_size[__idx * 5 + 3];\n__send_strides[1] = __send_strides[2] * __state->__rdistrarray_2_fix_send_size[__idx * 5 + 2];\n__send_strides[0] = __send_strides[1] * __state->__rdistrarray_2_fix_send_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_2_fix_send_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R2G3 * R4G3) * S0G3) * S1G3) * __inp_s0) + (((R2G3 * S0G3) * S1G3) * __inp_s1)) + ((R2G3 * S1G3) * __inp_s2)) + (R2G3 * __inp_s3)) + __inp_s4) + __m0_idx * R2G3*R4G3*S0G3*S1G3,\n                        __state->__rdistrarray_2_send_buffers[__idx] + __m0_idx * __send_strides[0],\n                        __state->__rdistrarray_2_fix_send_size[__idx * 5 + 1], R2G3*S0G3*S1G3, __send_strides[1], __state->__rdistrarray_2_fix_send_size[__idx * 5 + 2], R2G3*S1G3, __send_strides[2], __state->__rdistrarray_2_fix_send_size[__idx * 5 + 3], R2G3, __send_strides[3], __state->__rdistrarray_2_fix_send_size[__idx * 5 + 4], 1, __send_strides[4]\n                    );\n                }\n            \n                        MPI_Isend(__state->__rdistrarray_2_send_buffers[__idx], __state->__rdistrarray_2_send_sizes[__idx], MPI_DOUBLE, __state->__rdistrarray_2_dst_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_2_send_req[__idx]);\n                    }\n                }\n                if (__state->__pgrid_14_valid) {\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_recvs; ++__idx) {\n                        // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I receive from %d\\n\", myrank, __state->__rdistrarray_2_src_ranks[__idx]);\n                        // fflush(stdout);\n                        // MPI_Recv(_out_buffer, 1, __state->__rdistrarray_2_recv_types[__idx], __state->__rdistrarray_2_src_ranks[__idx], 0, MPI_COMM_WORLD, &recv_status);\n                        // MPI_Irecv(_out_buffer, 1, __state->__rdistrarray_2_recv_types[__idx], __state->__rdistrarray_2_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_2_recv_req[__idx]);\n                        int __recv_len = __state->__rdistrarray_2_fix_recv_size[(__idx + 1) * 5 - 1];\n__recv_len *= __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 3];\n__recv_len *= __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 2];\n__recv_len *= __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 1];\n__recv_len *= __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 0];\n\n                        MPI_Irecv(__state->__rdistrarray_2_recv_buffers[__idx], __recv_len, MPI_DOUBLE, __state->__rdistrarray_2_src_ranks[__idx], 0, MPI_COMM_WORLD, &__state->__rdistrarray_2_recv_req[__idx]);\n                    }\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_self_copies; ++__idx) {\n                        // printf(\"(__subarray_4 -> __subarray_5) I am rank %d and I self-copy\\n\", myrank);\n                        // fflush(stdout);\n                        int __inp_s0 = __state->__rdistrarray_2_self_src[__idx * 5 + 0];\nint __inp_s1 = __state->__rdistrarray_2_self_src[__idx * 5 + 1];\nint __inp_s2 = __state->__rdistrarray_2_self_src[__idx * 5 + 2];\nint __inp_s3 = __state->__rdistrarray_2_self_src[__idx * 5 + 3];\nint __inp_s4 = __state->__rdistrarray_2_self_src[__idx * 5 + 4];\n\n                        int __out_s0 = __state->__rdistrarray_2_self_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_2_self_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_2_self_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_2_self_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_2_self_dst[__idx * 5 + 4];\n\n                        __state->__rdistrarray_2_total_copy_size += __state->__rdistrarray_2_self_size[__idx * 5 + 0]* __state->__rdistrarray_2_self_size[__idx * 5 + 1]* __state->__rdistrarray_2_self_size[__idx * 5 + 2]* __state->__rdistrarray_2_self_size[__idx * 5 + 3]* __state->__rdistrarray_2_self_size[__idx * 5 + 4];\n                        \n                int __m0_size = __state->__rdistrarray_2_self_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        _inp_buffer + ((((((((R2G3 * R4G3) * S0G3) * S1G3) * __inp_s0) + (((R2G3 * S0G3) * S1G3) * __inp_s1)) + ((R2G3 * S1G3) * __inp_s2)) + (R2G3 * __inp_s3)) + __inp_s4) + __m0_idx * R2G3*R4G3*S0G3*S1G3,\n                        _out_buffer + ((((((((R2G4 * R4G4) * S0G4) * S1G4) * __out_s0) + (((R2G4 * S0G4) * S1G4) * __out_s1)) + ((R2G4 * S1G4) * __out_s2)) + (R2G4 * __out_s3)) + __out_s4) + __m0_idx * R2G4*R4G4*S0G4*S1G4,\n                        __state->__rdistrarray_2_self_size[__idx * 5 + 1], R2G3*S0G3*S1G3, R2G4*S0G4*S1G4, __state->__rdistrarray_2_self_size[__idx * 5 + 2], R2G3*S1G3, R2G4*S1G4, __state->__rdistrarray_2_self_size[__idx * 5 + 3], R2G3, R2G4, __state->__rdistrarray_2_self_size[__idx * 5 + 4], 1, 1\n                    );\n                }\n            \n                    }\n                    MPI_Waitall(__state->__rdistrarray_2_recvs, __state->__rdistrarray_2_recv_req, __state->__rdistrarray_2_recv_status);\n                    for (auto __idx = 0; __idx < __state->__rdistrarray_2_recvs; ++__idx) {\n                        int __out_s0 = __state->__rdistrarray_2_fix_recv_dst[__idx * 5 + 0];\nint __out_s1 = __state->__rdistrarray_2_fix_recv_dst[__idx * 5 + 1];\nint __out_s2 = __state->__rdistrarray_2_fix_recv_dst[__idx * 5 + 2];\nint __out_s3 = __state->__rdistrarray_2_fix_recv_dst[__idx * 5 + 3];\nint __out_s4 = __state->__rdistrarray_2_fix_recv_dst[__idx * 5 + 4];\n\n                        int __recv_strides[5];\n__recv_strides[5 - 1] = 1;\n__recv_strides[3] = __recv_strides[4] * __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 4];\n__recv_strides[2] = __recv_strides[3] * __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 3];\n__recv_strides[1] = __recv_strides[2] * __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 2];\n__recv_strides[0] = __recv_strides[1] * __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 1];\n\n                        \n                int __m0_size = __state->__rdistrarray_2_fix_recv_size[__idx * 5];\n                #pragma omp parallel for\n                for (auto __m0_idx = 0; __m0_idx < __m0_size; ++__m0_idx) {\n                    dace::CopyNDDynamic<double, 1, false, 4>::Dynamic::Copy(\n                        __state->__rdistrarray_2_recv_buffers[__idx] + __m0_idx * __recv_strides[0],\n                        _out_buffer + ((((((((R2G4 * R4G4) * S0G4) * S1G4) * __out_s0) + (((R2G4 * S0G4) * S1G4) * __out_s1)) + ((R2G4 * S1G4) * __out_s2)) + (R2G4 * __out_s3)) + __out_s4) + __m0_idx * R2G4*R4G4*S0G4*S1G4,\n                        __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 1], __recv_strides[1], R2G4*S0G4*S1G4, __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 2], __recv_strides[2], R2G4*S1G4, __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 3], __recv_strides[3], R2G4, __state->__rdistrarray_2_fix_recv_size[__idx * 5 + 4], __recv_strides[4], 1\n                    );\n                }\n            \n                    }\n\n                }\n                if (__state->__pgrid_11_valid) {\n                    MPI_Waitall(__state->__rdistrarray_2_sends, __state->__rdistrarray_2_send_req, __state->__rdistrarray_2_send_status);\n                }\n                \n                // printf(\"I am rank %d and I finished the redistribution __subarray_4 -> __subarray_5\\n\", myrank);\n                // fflush(stdout);\n                \n            ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Redistribute_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inp_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_buffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 101,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Bcast_",
          "attributes": {
            "code": {
              "string_data": "\n            if (__state->__pgrid_15_size > 1) {\n            MPI_Bcast(_inbuffer, R3G4*R4G4*S0G4*S1G4*R2G4, MPI_DOUBLE, _root, __state->__pgrid_15_comm);\n            }\n            _outbuffer = _inbuffer;\n        ",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Bcast_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_root": "int32"
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 102,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorTranspose",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_inp_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R2G4*R4G4*S0G4*S1G4",
                        "R2G4*S0G4*S1G4",
                        "R2G4*S1G4",
                        "R2G4",
                        "1"
                      ],
                      "total_size": "R2G4*R4G4*S0G4*S1G4*(R3G4 - 1) + R2G4*S0G4*S1G4*(R4G4 - 1) + R2G4*S1G4*(S0G4 - 1) + R2G4*(S1G4 - 1) + R2G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "S1G4",
                        "R2G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G4*R4G4*S0G4*S1G4",
                        "R4G4*S0G4*S1G4",
                        "S0G4*S1G4",
                        "S1G4",
                        "1"
                      ],
                      "total_size": "R3G4*R4G4*S0G4*S1G4*(R2G4 - 1) + R4G4*S0G4*S1G4*(R3G4 - 1) + S0G4*S1G4*(R4G4 - 1) + S1G4*(S0G4 - 1) + S1G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4",
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "S1G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R2G4": "int32",
                  "R3G4": "int32",
                  "R4G4": "int32",
                  "S0G4": "int32",
                  "S1G4": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorTranspose_sdfg_9"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorTranspose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      3,
                      4
                    ],
                    "0": [
                      1,
                      2
                    ]
                  },
                  "nodes": [
                    {
                      "type": "MapEntry",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R3G4, __i1=0:R4G4, __i2=0:S0G4, __i3=0:S1G4, __i4=0:R2G4]",
                      "attributes": {
                        "label": "_TensorTranspose_tasklet_map",
                        "params": [
                          "__i0",
                          "__i1",
                          "__i2",
                          "__i3",
                          "__i4"
                        ],
                        "range": {
                          "type": "Range",
                          "ranges": [
                            {
                              "start": "0",
                              "end": "R3G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R4G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S0G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S1G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R2G4 - 1",
                              "step": "1",
                              "tile": "1"
                            }
                          ]
                        },
                        "schedule": "CPU_Multicore",
                        "unroll": false,
                        "collapse": 1,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "omp_num_threads": 0,
                        "omp_schedule": "Default",
                        "omp_chunk_size": 0,
                        "in_connectors": {
                          "IN__inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "OUT__inp_tensor": "float64"
                        }
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": "2"
                    },
                    {
                      "type": "Tasklet",
                      "label": "_TensorTranspose_tasklet",
                      "attributes": {
                        "code": {
                          "string_data": "_out = (1 * _inp)",
                          "language": "Python"
                        },
                        "state_fields": [],
                        "code_global": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_init": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_exit": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "instrument": "No_Instrumentation",
                        "side_effects": null,
                        "label": "_TensorTranspose_tasklet",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp": "float64"
                        },
                        "out_connectors": {
                          "_out": "float64"
                        }
                      },
                      "id": 1,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "MapExit",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R3G4, __i1=0:R4G4, __i2=0:S0G4, __i3=0:S1G4, __i4=0:R2G4]",
                      "attributes": {
                        "in_connectors": {
                          "IN__out_tensor": "float64"
                        },
                        "out_connectors": {
                          "OUT__out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 2,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "AccessNode",
                      "label": "_inp_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1268,
                          "end_line": 1268,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_inp_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1273,
                          "end_line": 1273,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "0",
                      "dst_connector": "IN__inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "_inp",
                      "src_connector": "OUT__inp_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "OUT__out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "2",
                      "dst_connector": "IN__out_tensor",
                      "src_connector": "_out"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [],
              "sdfg_list_id": 15,
              "start_state": null
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R2G4": "R2G4",
              "R3G4": "R3G4",
              "R4G4": "R4G4",
              "S0G4": "S0G4",
              "S1G4": "S1G4"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorTranspose",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_inp_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 103,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorDot_",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_left_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G4*R4G4*S0G4*S1G4",
                        "R4G4*S0G4*S1G4",
                        "S0G4*S1G4",
                        "S1G4",
                        "1"
                      ],
                      "total_size": "R3G4*R4G4*S0G4*S1G4*(R2G4 - 1) + R4G4*S0G4*S1G4*(R3G4 - 1) + S0G4*S1G4*(R4G4 - 1) + S1G4*(S0G4 - 1) + S1G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4",
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "S1G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_right_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*(S1G4 - 1) + R1G4",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S1G4",
                        "R1G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4*R3G4*R4G4*S0G4",
                        "R1G4*R4G4*S0G4",
                        "R1G4*S0G4",
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*R3G4*R4G4*S0G4*(R2G4 - 1) + R1G4*R4G4*S0G4*(R3G4 - 1) + R1G4*S0G4*(R4G4 - 1) + R1G4*(S0G4 - 1) + R1G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4",
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "R1G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R3G4*R4G4*S0G4*S1G4",
                        "R4G4*S0G4*S1G4",
                        "S0G4*S1G4",
                        "S1G4",
                        "1"
                      ],
                      "total_size": "R2G4*R3G4*R4G4*S0G4*S1G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4",
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "S1G4"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*S1G4",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S1G4",
                        "R1G4"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp0_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "S1G4",
                        "1"
                      ],
                      "total_size": "S1G4*(R2G4*R3G4*R4G4*S0G4 - 1) + S1G4",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4*R3G4*R4G4*S0G4",
                        "S1G4"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__tmp1_0": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*(S1G4 - 1) + R1G4",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S1G4",
                        "R1G4"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "__gemm_out": {
                    "type": "View",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*(R2G4*R3G4*R4G4*S0G4 - 1) + R1G4",
                      "offset": [
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": false,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4*R3G4*R4G4*S0G4",
                        "R1G4"
                      ],
                      "transient": true,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R1G4": "int32",
                  "R2G4": "int32",
                  "R3G4": "int32",
                  "R4G4": "int32",
                  "S0G4": "int32",
                  "S1G4": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorDot__sdfg"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__inp_transpose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "_left_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_left_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_right_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 777,
                          "end_line": 777,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "_right_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 778,
                          "end_line": 778,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/frontend/python/replacements.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G4*R4G4*S0G4*S1G4",
                                    "R4G4*S0G4*S1G4",
                                    "S0G4*S1G4",
                                    "S1G4",
                                    "1"
                                  ],
                                  "total_size": "R3G4*R4G4*S0G4*S1G4*(R2G4 - 1) + R4G4*S0G4*S1G4*(R3G4 - 1) + S0G4*S1G4*(R4G4 - 1) + S1G4*(S0G4 - 1) + S1G4",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R2G4",
                                    "R3G4",
                                    "R4G4",
                                    "S0G4",
                                    "S1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R3G4*R4G4*S0G4*S1G4",
                                    "R4G4*S0G4*S1G4",
                                    "S0G4*S1G4",
                                    "S1G4",
                                    "1"
                                  ],
                                  "total_size": "R3G4*R4G4*S0G4*S1G4*(R2G4 - 1) + R4G4*S0G4*S1G4*(R3G4 - 1) + S0G4*S1G4*(R4G4 - 1) + S1G4*(S0G4 - 1) + S1G4",
                                  "offset": [
                                    "0",
                                    "0",
                                    "0",
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R2G4",
                                    "R3G4",
                                    "R4G4",
                                    "S0G4",
                                    "S1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R2G4": "int32",
                              "R3G4": "int32",
                              "R4G4": "int32",
                              "S0G4": "int32",
                              "S1G4": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_10"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R2G4, __i1=0:R3G4, __i2=0:R4G4, __i3=0:S0G4, __i4=0:S1G4]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2",
                                      "__i3",
                                      "__i4"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R2G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R3G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R4G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S0G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:R2G4, __i1=0:R3G4, __i2=0:R4G4, __i3=0:S0G4, __i4=0:S1G4]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R3G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R4G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i3",
                                              "end": "__i3",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i4",
                                              "end": "__i4",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 17,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R2G4": "R2G4",
                          "R3G4": "R3G4",
                          "R4G4": "R4G4",
                          "S0G4": "S0G4",
                          "S1G4": "S1G4"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_TensorTranspose",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_inp_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R1G4",
                                    "1"
                                  ],
                                  "total_size": "R1G4*(S1G4 - 1) + R1G4",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S1G4",
                                    "R1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_out_tensor": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R1G4",
                                    "1"
                                  ],
                                  "total_size": "R1G4*(S1G4 - 1) + R1G4",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S1G4",
                                    "R1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R1G4": "int32",
                              "S1G4": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_TensorTranspose_sdfg_11"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_TensorTranspose_state",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S1G4, __i1=0:R1G4]",
                                  "attributes": {
                                    "label": "_TensorTranspose_tasklet_map",
                                    "params": [
                                      "__i0",
                                      "__i1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "S1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__inp_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__inp_tensor": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "_TensorTranspose_tasklet",
                                  "attributes": {
                                    "code": {
                                      "string_data": "_out = (1 * _inp)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 37,
                                      "end_line": 37,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "_TensorTranspose_tasklet",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "_inp": "float64"
                                    },
                                    "out_connectors": {
                                      "_out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "_TensorTranspose_tasklet_map[__i0=0:S1G4, __i1=0:R1G4]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__out_tensor": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__out_tensor": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_inp_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_inp_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_out_tensor",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_out_tensor",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R1G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__inp_tensor",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_inp_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "_inp",
                                  "src_connector": "OUT__inp_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R1G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "4",
                                  "dst_connector": null,
                                  "src_connector": "OUT__out_tensor"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_out_tensor",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__out_tensor",
                                  "src_connector": "_out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [],
                          "sdfg_list_id": 18,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R1G4": "R1G4",
                          "S1G4": "S1G4"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_TensorTranspose",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_left_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "4",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_right_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R1G4*S1G4"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "5",
                      "dst_connector": "_inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "4",
                      "dst": "1",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R1G4*S1G4"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "3",
                      "dst_connector": null,
                      "src_connector": "_out_tensor"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                },
                {
                  "type": "SDFGState",
                  "label": "_TensorDot__gemm_state",
                  "id": 1,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "nodes": [
                    {
                      "type": "AccessNode",
                      "label": "__tmp0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 139,
                          "end_line": 139,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp0_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 140,
                          "end_line": 140,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp0_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 1,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 150,
                          "end_line": 150,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 2,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__tmp1_0",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 151,
                          "end_line": 151,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__tmp1_0",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 186,
                          "end_line": 186,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "__gemm_out",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 187,
                          "end_line": 187,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/linalg/nodes/tensordot.py"
                        },
                        "data": "__gemm_out",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {
                          "views": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 5,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "NestedSDFG",
                      "label": "_GEMM_",
                      "attributes": {
                        "sdfg": {
                          "type": "SDFG",
                          "attributes": {
                            "arg_names": [],
                            "constants_prop": {},
                            "_arrays": {
                              "_a": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "S1G4",
                                    "1"
                                  ],
                                  "total_size": "S1G4*(R2G4*R3G4*R4G4*S0G4 - 1) + S1G4",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R2G4*R3G4*R4G4*S0G4",
                                    "S1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_b": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R1G4",
                                    "1"
                                  ],
                                  "total_size": "R1G4*(S1G4 - 1) + R1G4",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "S1G4",
                                    "R1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              },
                              "_c": {
                                "type": "Array",
                                "attributes": {
                                  "allow_conflicts": false,
                                  "strides": [
                                    "R1G4",
                                    "1"
                                  ],
                                  "total_size": "R1G4*(R2G4*R3G4*R4G4*S0G4 - 1) + R1G4",
                                  "offset": [
                                    "0",
                                    "0"
                                  ],
                                  "may_alias": false,
                                  "alignment": 0,
                                  "start_offset": 0,
                                  "optional": null,
                                  "pool": false,
                                  "dtype": "float64",
                                  "shape": [
                                    "R2G4*R3G4*R4G4*S0G4",
                                    "R1G4"
                                  ],
                                  "transient": false,
                                  "storage": "CPU_Heap",
                                  "lifetime": "Scope",
                                  "location": {},
                                  "debuginfo": null
                                }
                              }
                            },
                            "symbols": {
                              "R1G4": "int32",
                              "R2G4": "int32",
                              "R3G4": "int32",
                              "R4G4": "int32",
                              "S0G4": "int32",
                              "S1G4": "int32"
                            },
                            "instrument": "No_Instrumentation",
                            "global_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "init_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "exit_code": {
                              "frame": {
                                "string_data": "",
                                "language": "CPP"
                              }
                            },
                            "orig_sdfg": null,
                            "transformation_hist": [],
                            "logical_groups": [],
                            "openmp_sections": false,
                            "debuginfo": {
                              "type": "DebugInfo",
                              "start_line": 0,
                              "end_line": 0,
                              "start_column": 0,
                              "end_column": 0,
                              "filename": null
                            },
                            "_pgrids": {},
                            "_subarrays": {},
                            "_rdistrarrays": {},
                            "callback_mapping": {},
                            "name": "_GEMM__sdfg"
                          },
                          "nodes": [
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__initstate",
                              "id": 0,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_init_map[_o0=0:R2G4*R3G4*R4G4*S0G4, _o1=0:R1G4]",
                                  "attributes": {
                                    "label": "gemm_init_map",
                                    "params": [
                                      "_o0",
                                      "_o1"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm_init",
                                  "attributes": {
                                    "code": {
                                      "string_data": "out = 0",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 98,
                                      "end_line": 98,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm_init",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {},
                                    "out_connectors": {
                                      "out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_init_map[_o0=0:R2G4*R3G4*R4G4*S0G4, _o1=0:R1G4]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": null,
                                        "other_subset": null,
                                        "data": null,
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": null,
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "3",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "_o0",
                                              "end": "_o0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "_o1",
                                              "end": "_o1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            },
                            {
                              "type": "SDFGState",
                              "label": "_GEMM__state",
                              "id": 1,
                              "collapsed": false,
                              "scope_dict": {
                                "-1": [
                                  0,
                                  3,
                                  4,
                                  5
                                ],
                                "0": [
                                  1,
                                  2
                                ]
                              },
                              "nodes": [
                                {
                                  "type": "MapEntry",
                                  "label": "gemm_map[__i0=0:R2G4*R3G4*R4G4*S0G4, __i1=0:R1G4, __i2=0:S1G4]",
                                  "attributes": {
                                    "label": "gemm_map",
                                    "params": [
                                      "__i0",
                                      "__i1",
                                      "__i2"
                                    ],
                                    "range": {
                                      "type": "Range",
                                      "ranges": [
                                        {
                                          "start": "0",
                                          "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "R1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        },
                                        {
                                          "start": "0",
                                          "end": "S1G4 - 1",
                                          "step": "1",
                                          "tile": "1"
                                        }
                                      ]
                                    },
                                    "schedule": "CPU_Multicore",
                                    "unroll": false,
                                    "collapse": 1,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "is_collapsed": false,
                                    "instrument": "No_Instrumentation",
                                    "omp_num_threads": 0,
                                    "omp_schedule": "Default",
                                    "omp_chunk_size": 0,
                                    "in_connectors": {
                                      "IN__a": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      },
                                      "IN__b": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    },
                                    "out_connectors": {
                                      "OUT__a": "float64",
                                      "OUT__b": "float64"
                                    }
                                  },
                                  "id": 0,
                                  "scope_entry": null,
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "Tasklet",
                                  "label": "gemm",
                                  "attributes": {
                                    "code": {
                                      "string_data": "__out = (__a * __b)",
                                      "language": "Python"
                                    },
                                    "state_fields": [],
                                    "code_global": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_init": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "code_exit": {
                                      "string_data": "",
                                      "language": "CPP"
                                    },
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 130,
                                      "end_line": 130,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/libraries/blas/nodes/gemm.py"
                                    },
                                    "instrument": "No_Instrumentation",
                                    "side_effects": null,
                                    "label": "gemm",
                                    "location": {},
                                    "environments": [],
                                    "in_connectors": {
                                      "__a": "float64",
                                      "__b": "float64"
                                    },
                                    "out_connectors": {
                                      "__out": "float64"
                                    }
                                  },
                                  "id": 1,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "MapExit",
                                  "label": "gemm_map[__i0=0:R2G4*R3G4*R4G4*S0G4, __i1=0:R1G4, __i2=0:S1G4]",
                                  "attributes": {
                                    "in_connectors": {
                                      "IN__c": "float64"
                                    },
                                    "out_connectors": {
                                      "OUT__c": {
                                        "type": "pointer",
                                        "dtype": "float64"
                                      }
                                    }
                                  },
                                  "id": 2,
                                  "scope_entry": "0",
                                  "scope_exit": "2"
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_a",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_a",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 3,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_b",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1268,
                                      "end_line": 1268,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_b",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 4,
                                  "scope_entry": null,
                                  "scope_exit": null
                                },
                                {
                                  "type": "AccessNode",
                                  "label": "_c",
                                  "attributes": {
                                    "setzero": false,
                                    "debuginfo": {
                                      "type": "DebugInfo",
                                      "start_line": 1273,
                                      "end_line": 1273,
                                      "start_column": 0,
                                      "end_column": 0,
                                      "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                                    },
                                    "data": "_c",
                                    "instrument": "No_Instrumentation",
                                    "in_connectors": {},
                                    "out_connectors": {}
                                  },
                                  "id": 5,
                                  "scope_entry": null,
                                  "scope_exit": null
                                }
                              ],
                              "edges": [
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "3",
                                  "dst": "0",
                                  "dst_connector": "IN__a",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "S1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "4",
                                  "dst": "0",
                                  "dst_connector": "IN__b",
                                  "src_connector": null
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_a",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__a",
                                  "src_connector": "OUT__a"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_b",
                                        "wcr": null,
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i2",
                                              "end": "__i2",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "dst_subset": null,
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "0",
                                  "dst": "1",
                                  "dst_connector": "__b",
                                  "src_connector": "OUT__b"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "0",
                                              "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "0",
                                              "end": "R1G4 - 1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4*S1G4"
                                      }
                                    }
                                  },
                                  "src": "2",
                                  "dst": "5",
                                  "dst_connector": null,
                                  "src_connector": "OUT__c"
                                },
                                {
                                  "type": "MultiConnectorEdge",
                                  "attributes": {
                                    "data": {
                                      "type": "Memlet",
                                      "attributes": {
                                        "volume": "1",
                                        "dynamic": false,
                                        "subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "other_subset": null,
                                        "data": "_c",
                                        "wcr": "(lambda x, y: (x + y))",
                                        "debuginfo": null,
                                        "wcr_nonatomic": false,
                                        "allow_oob": false,
                                        "src_subset": null,
                                        "dst_subset": {
                                          "type": "Range",
                                          "ranges": [
                                            {
                                              "start": "__i0",
                                              "end": "__i0",
                                              "step": "1",
                                              "tile": "1"
                                            },
                                            {
                                              "start": "__i1",
                                              "end": "__i1",
                                              "step": "1",
                                              "tile": "1"
                                            }
                                          ]
                                        },
                                        "num_accesses": "1"
                                      }
                                    }
                                  },
                                  "src": "1",
                                  "dst": "2",
                                  "dst_connector": "IN__c",
                                  "src_connector": "__out"
                                }
                              ],
                              "attributes": {
                                "is_collapsed": false,
                                "nosync": false,
                                "instrument": "No_Instrumentation",
                                "executions": "0",
                                "dynamic_executions": true,
                                "ranges": {},
                                "location": {}
                              }
                            }
                          ],
                          "edges": [
                            {
                              "type": "Edge",
                              "attributes": {
                                "data": {
                                  "type": "InterstateEdge",
                                  "attributes": {
                                    "assignments": {},
                                    "condition": {
                                      "string_data": "1",
                                      "language": "Python"
                                    }
                                  },
                                  "label": ""
                                }
                              },
                              "src": "0",
                              "dst": "1"
                            }
                          ],
                          "sdfg_list_id": 19,
                          "start_state": null
                        },
                        "schedule": "CPU_Multicore",
                        "symbol_mapping": {
                          "R1G4": "R1G4",
                          "R2G4": "R2G4",
                          "R3G4": "R3G4",
                          "R4G4": "R4G4",
                          "S0G4": "S0G4",
                          "S1G4": "S1G4"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 0,
                          "end_line": 0,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": null
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "no_inline": false,
                        "unique_name": "",
                        "label": "_GEMM_",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_a": {
                            "type": "pointer",
                            "dtype": "float64"
                          },
                          "_b": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "_c": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 6,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "6",
                      "dst_connector": "_a",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1_0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R1G4*S1G4"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "6",
                      "dst_connector": "_b",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp0",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*S1G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__tmp1",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R1G4*S1G4"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "3",
                      "dst_connector": "views",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "__gemm_out",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4*R3G4*R4G4*S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                          }
                        }
                      },
                      "src": "6",
                      "dst": "5",
                      "dst_connector": null,
                      "src_connector": "_c"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                          }
                        }
                      },
                      "src": "5",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "views"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [
                {
                  "type": "Edge",
                  "attributes": {
                    "data": {
                      "type": "InterstateEdge",
                      "attributes": {
                        "assignments": {},
                        "condition": {
                          "string_data": "1",
                          "language": "Python"
                        }
                      },
                      "label": ""
                    }
                  },
                  "src": "0",
                  "dst": "1"
                }
              ],
              "sdfg_list_id": 16,
              "start_state": 0
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R1G4": "R1G4",
              "R2G4": "R2G4",
              "R3G4": "R3G4",
              "R4G4": "R4G4",
              "S0G4": "S0G4",
              "S1G4": "S1G4"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorDot_",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_left_tensor": {
                "type": "pointer",
                "dtype": "float64"
              },
              "_right_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 104,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "Tasklet",
          "label": "_Allreduce_",
          "attributes": {
            "code": {
              "string_data": "if (__state->__pgrid_17_size > 1) {\n            MPI_Allreduce(MPI_IN_PLACE, _outbuffer, R2G4*R3G4*R4G4*S0G4*R1G4, MPI_DOUBLE, MPI_SUM, __state->__pgrid_17_comm);\n            }",
              "language": "CPP"
            },
            "state_fields": [],
            "code_global": {
              "string_data": "",
              "language": "CPP"
            },
            "code_init": {
              "string_data": "",
              "language": "CPP"
            },
            "code_exit": {
              "string_data": "",
              "language": "CPP"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "instrument": "No_Instrumentation",
            "side_effects": null,
            "label": "_Allreduce_",
            "location": {},
            "environments": [
              "dace.libraries.mpi.environments.mpi.MPI"
            ],
            "in_connectors": {
              "_inbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_outbuffer": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 105,
          "scope_entry": null,
          "scope_exit": null
        },
        {
          "type": "NestedSDFG",
          "label": "_TensorTranspose",
          "attributes": {
            "sdfg": {
              "type": "SDFG",
              "attributes": {
                "arg_names": [],
                "constants_prop": {},
                "_arrays": {
                  "_inp_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4*R3G4*R4G4*S0G4",
                        "R1G4*R4G4*S0G4",
                        "R1G4*S0G4",
                        "R1G4",
                        "1"
                      ],
                      "total_size": "R1G4*R3G4*R4G4*S0G4*(R2G4 - 1) + R1G4*R4G4*S0G4*(R3G4 - 1) + R1G4*S0G4*(R4G4 - 1) + R1G4*(S0G4 - 1) + R1G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "R2G4",
                        "R3G4",
                        "R4G4",
                        "S0G4",
                        "R1G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  },
                  "_out_tensor": {
                    "type": "Array",
                    "attributes": {
                      "allow_conflicts": false,
                      "strides": [
                        "R1G4*R2G4*R3G4*R4G4",
                        "R2G4*R3G4*R4G4",
                        "R3G4*R4G4",
                        "R4G4",
                        "1"
                      ],
                      "total_size": "R1G4*R2G4*R3G4*R4G4*(S0G4 - 1) + R2G4*R3G4*R4G4*(R1G4 - 1) + R3G4*R4G4*(R2G4 - 1) + R4G4*(R3G4 - 1) + R4G4",
                      "offset": [
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"
                      ],
                      "may_alias": false,
                      "alignment": 0,
                      "start_offset": 0,
                      "optional": null,
                      "pool": false,
                      "dtype": "float64",
                      "shape": [
                        "S0G4",
                        "R1G4",
                        "R2G4",
                        "R3G4",
                        "R4G4"
                      ],
                      "transient": false,
                      "storage": "CPU_Heap",
                      "lifetime": "Scope",
                      "location": {},
                      "debuginfo": null
                    }
                  }
                },
                "symbols": {
                  "R1G4": "int32",
                  "R2G4": "int32",
                  "R3G4": "int32",
                  "R4G4": "int32",
                  "S0G4": "int32"
                },
                "instrument": "No_Instrumentation",
                "global_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "init_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "exit_code": {
                  "frame": {
                    "string_data": "",
                    "language": "CPP"
                  }
                },
                "orig_sdfg": null,
                "transformation_hist": [],
                "logical_groups": [],
                "openmp_sections": false,
                "debuginfo": {
                  "type": "DebugInfo",
                  "start_line": 0,
                  "end_line": 0,
                  "start_column": 0,
                  "end_column": 0,
                  "filename": null
                },
                "_pgrids": {},
                "_subarrays": {},
                "_rdistrarrays": {},
                "callback_mapping": {},
                "name": "_TensorTranspose_sdfg"
              },
              "nodes": [
                {
                  "type": "SDFGState",
                  "label": "_TensorTranspose_state",
                  "id": 0,
                  "collapsed": false,
                  "scope_dict": {
                    "-1": [
                      0,
                      3,
                      4
                    ],
                    "0": [
                      1,
                      2
                    ]
                  },
                  "nodes": [
                    {
                      "type": "MapEntry",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R2G4, __i1=0:R3G4, __i2=0:R4G4, __i3=0:S0G4, __i4=0:R1G4]",
                      "attributes": {
                        "label": "_TensorTranspose_tasklet_map",
                        "params": [
                          "__i0",
                          "__i1",
                          "__i2",
                          "__i3",
                          "__i4"
                        ],
                        "range": {
                          "type": "Range",
                          "ranges": [
                            {
                              "start": "0",
                              "end": "R2G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R3G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R4G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "S0G4 - 1",
                              "step": "1",
                              "tile": "1"
                            },
                            {
                              "start": "0",
                              "end": "R1G4 - 1",
                              "step": "1",
                              "tile": "1"
                            }
                          ]
                        },
                        "schedule": "CPU_Multicore",
                        "unroll": false,
                        "collapse": 1,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "is_collapsed": false,
                        "instrument": "No_Instrumentation",
                        "omp_num_threads": 0,
                        "omp_schedule": "Default",
                        "omp_chunk_size": 0,
                        "in_connectors": {
                          "IN__inp_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        },
                        "out_connectors": {
                          "OUT__inp_tensor": "float64"
                        }
                      },
                      "id": 0,
                      "scope_entry": null,
                      "scope_exit": "2"
                    },
                    {
                      "type": "Tasklet",
                      "label": "_TensorTranspose_tasklet",
                      "attributes": {
                        "code": {
                          "string_data": "_out = (1 * _inp)",
                          "language": "Python"
                        },
                        "state_fields": [],
                        "code_global": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_init": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "code_exit": {
                          "string_data": "",
                          "language": "CPP"
                        },
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 37,
                          "end_line": 37,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/libraries/ttranspose/nodes/ttranspose.py"
                        },
                        "instrument": "No_Instrumentation",
                        "side_effects": null,
                        "label": "_TensorTranspose_tasklet",
                        "location": {},
                        "environments": [],
                        "in_connectors": {
                          "_inp": "float64"
                        },
                        "out_connectors": {
                          "_out": "float64"
                        }
                      },
                      "id": 1,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "MapExit",
                      "label": "_TensorTranspose_tasklet_map[__i0=0:R2G4, __i1=0:R3G4, __i2=0:R4G4, __i3=0:S0G4, __i4=0:R1G4]",
                      "attributes": {
                        "in_connectors": {
                          "IN__out_tensor": "float64"
                        },
                        "out_connectors": {
                          "OUT__out_tensor": {
                            "type": "pointer",
                            "dtype": "float64"
                          }
                        }
                      },
                      "id": 2,
                      "scope_entry": "0",
                      "scope_exit": "2"
                    },
                    {
                      "type": "AccessNode",
                      "label": "_inp_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1268,
                          "end_line": 1268,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_inp_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 3,
                      "scope_entry": null,
                      "scope_exit": null
                    },
                    {
                      "type": "AccessNode",
                      "label": "_out_tensor",
                      "attributes": {
                        "setzero": false,
                        "debuginfo": {
                          "type": "DebugInfo",
                          "start_line": 1273,
                          "end_line": 1273,
                          "start_column": 0,
                          "end_column": 0,
                          "filename": "/home/alziogas/Projects/dace/dace/sdfg/state.py"
                        },
                        "data": "_out_tensor",
                        "instrument": "No_Instrumentation",
                        "in_connectors": {},
                        "out_connectors": {}
                      },
                      "id": 4,
                      "scope_entry": null,
                      "scope_exit": null
                    }
                  ],
                  "edges": [
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                          }
                        }
                      },
                      "src": "3",
                      "dst": "0",
                      "dst_connector": "IN__inp_tensor",
                      "src_connector": null
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_inp_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "dst_subset": null,
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "0",
                      "dst": "1",
                      "dst_connector": "_inp",
                      "src_connector": "OUT__inp_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "0",
                                  "end": "S0G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R1G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R2G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R3G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "0",
                                  "end": "R4G4 - 1",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
                          }
                        }
                      },
                      "src": "2",
                      "dst": "4",
                      "dst_connector": null,
                      "src_connector": "OUT__out_tensor"
                    },
                    {
                      "type": "MultiConnectorEdge",
                      "attributes": {
                        "data": {
                          "type": "Memlet",
                          "attributes": {
                            "volume": "1",
                            "dynamic": false,
                            "subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "other_subset": null,
                            "data": "_out_tensor",
                            "wcr": null,
                            "debuginfo": null,
                            "wcr_nonatomic": false,
                            "allow_oob": false,
                            "src_subset": null,
                            "dst_subset": {
                              "type": "Range",
                              "ranges": [
                                {
                                  "start": "__i3",
                                  "end": "__i3",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i4",
                                  "end": "__i4",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i0",
                                  "end": "__i0",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i1",
                                  "end": "__i1",
                                  "step": "1",
                                  "tile": "1"
                                },
                                {
                                  "start": "__i2",
                                  "end": "__i2",
                                  "step": "1",
                                  "tile": "1"
                                }
                              ]
                            },
                            "num_accesses": "1"
                          }
                        }
                      },
                      "src": "1",
                      "dst": "2",
                      "dst_connector": "IN__out_tensor",
                      "src_connector": "_out"
                    }
                  ],
                  "attributes": {
                    "is_collapsed": false,
                    "nosync": false,
                    "instrument": "No_Instrumentation",
                    "executions": "0",
                    "dynamic_executions": true,
                    "ranges": {},
                    "location": {}
                  }
                }
              ],
              "edges": [],
              "sdfg_list_id": 20,
              "start_state": null
            },
            "schedule": "CPU_Multicore",
            "symbol_mapping": {
              "R1G4": "R1G4",
              "R2G4": "R2G4",
              "R3G4": "R3G4",
              "R4G4": "R4G4",
              "S0G4": "S0G4"
            },
            "debuginfo": {
              "type": "DebugInfo",
              "start_line": 0,
              "end_line": 0,
              "start_column": 0,
              "end_column": 0,
              "filename": null
            },
            "is_collapsed": false,
            "instrument": "No_Instrumentation",
            "no_inline": false,
            "unique_name": "",
            "label": "_TensorTranspose",
            "location": {},
            "environments": [],
            "in_connectors": {
              "_inp_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            },
            "out_connectors": {
              "_out_tensor": {
                "type": "pointer",
                "dtype": "float64"
              }
            }
          },
          "id": 106,
          "scope_entry": null,
          "scope_exit": null
        }
      ],
      "edges": [
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
              }
            }
          },
          "src": "26",
          "dst": "87",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "31",
          "dst": "90",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
              }
            }
          },
          "src": "37",
          "dst": "93",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "42",
          "dst": "96",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
              }
            }
          },
          "src": "48",
          "dst": "99",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "53",
          "dst": "102",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
              }
            }
          },
          "src": "59",
          "dst": "105",
          "dst_connector": "_inbuffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
              }
            }
          },
          "src": "27",
          "dst": "89",
          "dst_connector": "_inp_buffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
              }
            }
          },
          "src": "38",
          "dst": "95",
          "dst_connector": "_inp_buffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
              }
            }
          },
          "src": "49",
          "dst": "101",
          "dst_connector": "_inp_buffer",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "32",
          "dst": "91",
          "dst_connector": "_inp_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "43",
          "dst": "97",
          "dst_connector": "_inp_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "54",
          "dst": "103",
          "dst_connector": "_inp_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
              }
            }
          },
          "src": "60",
          "dst": "106",
          "dst_connector": "_inp_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "S0G1*S1G1*S2G1*S3G1*S4G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "X",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "S0G1*S1G1*S2G1*S3G1*S4G1"
              }
            }
          },
          "src": "24",
          "dst": "86",
          "dst_connector": "_left_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "35",
          "dst": "92",
          "dst_connector": "_left_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp2",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "46",
          "dst": "98",
          "dst_connector": "_left_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp3",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "57",
          "dst": "104",
          "dst_connector": "_left_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G1*S4G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "MM",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R4G1*S4G1"
              }
            }
          },
          "src": "25",
          "dst": "86",
          "dst_connector": "_right_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "LM",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R3G2*S3G2"
              }
            }
          },
          "src": "36",
          "dst": "92",
          "dst_connector": "_right_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "KM",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R2G3*S2G3"
              }
            }
          },
          "src": "47",
          "dst": "98",
          "dst_connector": "_right_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "JM",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "R1G4*S1G4"
              }
            }
          },
          "src": "58",
          "dst": "104",
          "dst_connector": "_right_tensor",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp1",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "28",
          "dst": "87",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp3",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "33",
          "dst": "90",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp6",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "39",
          "dst": "93",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp8",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "44",
          "dst": "96",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp11",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "50",
          "dst": "99",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp13",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "dst_subset": null,
                "num_accesses": "1"
              }
            }
          },
          "src": "55",
          "dst": "102",
          "dst_connector": "_root",
          "src_connector": null
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp1",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "29",
          "dst": "28",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp3",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "34",
          "dst": "33",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp6",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "40",
          "dst": "39",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp8",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "45",
          "dst": "44",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp11",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "51",
          "dst": "50",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__tmp13",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "56",
          "dst": "55",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "62",
          "dst": "0",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out_gather",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "63",
          "dst": "1",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out_reduce",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "64",
          "dst": "2",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "65",
          "dst": "3",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "66",
          "dst": "4",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in_scatter",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "67",
          "dst": "5",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in_bcast",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "68",
          "dst": "6",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "69",
          "dst": "7",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out_gather",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "70",
          "dst": "8",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out_reduce",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "71",
          "dst": "9",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "72",
          "dst": "10",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "73",
          "dst": "11",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in_scatter",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "74",
          "dst": "12",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in_bcast",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "75",
          "dst": "13",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "76",
          "dst": "14",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out_gather",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "77",
          "dst": "15",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out_reduce",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "78",
          "dst": "16",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "79",
          "dst": "17",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "80",
          "dst": "18",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in_scatter",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "81",
          "dst": "19",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in_bcast",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "82",
          "dst": "20",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in_subarray",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "83",
          "dst": "21",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out_gather",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "84",
          "dst": "22",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out_reduce",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "85",
          "dst": "23",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__rdistrarray_0",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "88",
          "dst": "30",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__rdistrarray_1",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "94",
          "dst": "41",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__rdistrarray_2",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "0",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "1"
              }
            }
          },
          "src": "100",
          "dst": "52",
          "dst_connector": null,
          "src_connector": "__out"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "89",
          "dst": "31",
          "dst_connector": null,
          "src_connector": "_out_buffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "95",
          "dst": "42",
          "dst_connector": null,
          "src_connector": "_out_buffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "101",
          "dst": "53",
          "dst_connector": null,
          "src_connector": "_out_buffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
              }
            }
          },
          "src": "86",
          "dst": "26",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "91",
          "dst": "35",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
              }
            }
          },
          "src": "92",
          "dst": "37",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp2",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "97",
          "dst": "46",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
              }
            }
          },
          "src": "98",
          "dst": "48",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "tmp3",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "103",
          "dst": "57",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
              }
            }
          },
          "src": "104",
          "dst": "59",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "__return",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
              }
            }
          },
          "src": "106",
          "dst": "61",
          "dst_connector": null,
          "src_connector": "_out_tensor"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G1*S0G1*S1G1*S2G1*S3G1",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid1_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G1 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G1 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R4G1*S0G1*S1G1*S2G1*S3G1"
              }
            }
          },
          "src": "87",
          "dst": "27",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R4G2*S0G2*S1G2*S2G2*S3G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R4G2*S0G2*S1G2*S2G2*S3G2"
              }
            }
          },
          "src": "90",
          "dst": "32",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G2*R4G2*S0G2*S1G2*S2G2",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid2_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G2 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G2 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R3G2*R4G2*S0G2*S1G2*S2G2"
              }
            }
          },
          "src": "93",
          "dst": "38",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R3G3*R4G3*S0G3*S1G3*S2G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R3G3*R4G3*S0G3*S1G3*S2G3"
              }
            }
          },
          "src": "96",
          "dst": "43",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G3*R3G3*R4G3*S0G3*S1G3",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid3_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G3 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G3 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R2G3*R3G3*R4G3*S0G3*S1G3"
              }
            }
          },
          "src": "99",
          "dst": "49",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R2G4*R3G4*R4G4*S0G4*S1G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_in",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R2G4*R3G4*R4G4*S0G4*S1G4"
              }
            }
          },
          "src": "102",
          "dst": "54",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        },
        {
          "type": "MultiConnectorEdge",
          "attributes": {
            "data": {
              "type": "Memlet",
              "attributes": {
                "volume": "R1G4*R2G4*R3G4*R4G4*S0G4",
                "dynamic": false,
                "subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "other_subset": null,
                "data": "grid4_out",
                "wcr": null,
                "debuginfo": null,
                "wcr_nonatomic": false,
                "allow_oob": false,
                "src_subset": null,
                "dst_subset": {
                  "type": "Range",
                  "ranges": [
                    {
                      "start": "0",
                      "end": "R2G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R3G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R4G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "S0G4 - 1",
                      "step": "1",
                      "tile": "1"
                    },
                    {
                      "start": "0",
                      "end": "R1G4 - 1",
                      "step": "1",
                      "tile": "1"
                    }
                  ]
                },
                "num_accesses": "R1G4*R2G4*R3G4*R4G4*S0G4"
              }
            }
          },
          "src": "105",
          "dst": "60",
          "dst_connector": null,
          "src_connector": "_outbuffer"
        }
      ],
      "attributes": {
        "is_collapsed": false,
        "nosync": false,
        "instrument": "No_Instrumentation",
        "executions": "1",
        "dynamic_executions": false,
        "ranges": {},
        "location": {}
      }
    }
  ],
  "edges": [],
  "sdfg_list_id": 0,
  "start_state": 0,
  "dace_version": "0.14.1"
}